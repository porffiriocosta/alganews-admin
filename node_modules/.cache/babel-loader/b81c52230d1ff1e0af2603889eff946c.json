{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{PaymentService}from'danielbonifacio-sdk';import getThunkStatus from'../utils/getThunkStatus';var initialState={fetching:false,selected:[],query:{sort:['scheduledTo','desc'],page:0,size:7},paginated:{page:0,size:7,totalPages:1,totalElements:0,content:[]}};export var getAllPayments=createAsyncThunk('payment/getAllPayments',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_,_ref){var getState,dispatch,rejectWithValue,_ref3,query,paymentPaginated;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getState=_ref.getState,dispatch=_ref.dispatch,rejectWithValue=_ref.rejectWithValue;_context.prev=1;_ref3=getState(),query=_ref3.payment.query;_context.next=5;return PaymentService.getAllPayments(query);case 5:paymentPaginated=_context.sent;_context.next=8;return dispatch(storeList(paymentPaginated));case 8:_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue(_objectSpread({},_context.t0)));case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var approvePaymentsInBatch=createAsyncThunk('payment/approvePaymentsInBatch',/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(paymentIds,_ref4){var dispatch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref4.dispatch;_context2.next=3;return PaymentService.approvePaymentsBatch(paymentIds);case 3:_context2.next=5;return dispatch(getAllPayments());case 5:_context2.next=7;return dispatch(storeSelectedKeys([]));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref5.apply(this,arguments);};}());export var deleteExistingPayment=createAsyncThunk('payment/deleteExistingPayment',/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(paymentId,_ref6){var dispatch;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch=_ref6.dispatch;_context3.next=3;return PaymentService.removeExistingPayment(paymentId);case 3:_context3.next=5;return dispatch(getAllPayments());case 5:_context3.next=7;return dispatch(storeSelectedKeys([]));case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref7.apply(this,arguments);};}());export var setQuery=createAsyncThunk('payment/setQuery',/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(query,_ref8){var dispatch;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch=_ref8.dispatch;_context4.next=3;return dispatch(storeQuery(query));case 3:_context4.next=5;return dispatch(getAllPayments());case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref9.apply(this,arguments);};}());var PaymentSlice=createSlice({initialState:initialState,name:'payment',reducers:{storeList:function storeList(state,action){state.paginated=action.payload;},storeQuery:function storeQuery(state,action){state.query=_objectSpread(_objectSpread({},state.query),action.payload);},storeSelectedKeys:function storeSelectedKeys(state,action){state.selected=action.payload;}},extraReducers:function extraReducers(builder){var _getThunkStatus=getThunkStatus([getAllPayments,approvePaymentsInBatch,deleteExistingPayment]),success=_getThunkStatus.success,error=_getThunkStatus.error,loading=_getThunkStatus.loading;builder.addMatcher(success,function(state){state.fetching=false;}).addMatcher(error,function(state,action){state.fetching=false;}).addMatcher(loading,function(state){state.fetching=true;});}});var _PaymentSlice$actions=PaymentSlice.actions,storeQuery=_PaymentSlice$actions.storeQuery,storeList=_PaymentSlice$actions.storeList,storeSelectedKeys=_PaymentSlice$actions.storeSelectedKeys;export{storeQuery,storeList,storeSelectedKeys};var PaymentReducer=PaymentSlice.reducer;export default PaymentReducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/store/Payment.slice.ts"],"names":["createAsyncThunk","createSlice","PaymentService","getThunkStatus","initialState","fetching","selected","query","sort","page","size","paginated","totalPages","totalElements","content","getAllPayments","_","getState","dispatch","rejectWithValue","payment","paymentPaginated","storeList","approvePaymentsInBatch","paymentIds","approvePaymentsBatch","storeSelectedKeys","deleteExistingPayment","paymentId","removeExistingPayment","setQuery","storeQuery","PaymentSlice","name","reducers","state","action","payload","extraReducers","builder","success","error","loading","addMatcher","actions","PaymentReducer","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Key } from 'antd/lib/table/interface';\nimport { Payment, PaymentService } from 'danielbonifacio-sdk';\nimport { RootState } from '.';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface PaymentState {\n  paginated: Payment.Paginated;\n  fetching: boolean;\n  query: Payment.Query;\n  selected: Key[];\n}\n\nconst initialState: PaymentState = {\n  fetching: false,\n  selected: [],\n  query: {\n    sort: ['scheduledTo', 'desc'],\n    page: 0,\n    size: 7,\n  },\n  paginated: {\n    page: 0,\n    size: 7,\n    totalPages: 1,\n    totalElements: 0,\n    content: [],\n  },\n};\n\nexport const getAllPayments = createAsyncThunk(\n  'payment/getAllPayments',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    try {\n      const {\n        payment: { query },\n      } = getState() as RootState;\n      const paymentPaginated = await PaymentService.getAllPayments(query);\n      await dispatch(storeList(paymentPaginated));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const approvePaymentsInBatch = createAsyncThunk(\n  'payment/approvePaymentsInBatch',\n  async (paymentIds: number[], { dispatch }) => {\n    await PaymentService.approvePaymentsBatch(paymentIds);\n    await dispatch(getAllPayments());\n    await dispatch(storeSelectedKeys([]));\n  }\n);\n\nexport const deleteExistingPayment = createAsyncThunk(\n  'payment/deleteExistingPayment',\n  async (paymentId: number, { dispatch }) => {\n    await PaymentService.removeExistingPayment(paymentId);\n    await dispatch(getAllPayments());\n    await dispatch(storeSelectedKeys([]));\n  }\n);\n\nexport const setQuery = createAsyncThunk(\n  'payment/setQuery',\n  async (query: Payment.Query, { dispatch }) => {\n    await dispatch(storeQuery(query));\n    await dispatch(getAllPayments());\n  }\n);\n\nconst PaymentSlice = createSlice({\n  initialState,\n  name: 'payment',\n  reducers: {\n    storeList(state, action: PayloadAction<Payment.Paginated>) {\n      state.paginated = action.payload;\n    },\n    storeQuery(state, action: PayloadAction<Payment.Query>) {\n      state.query = {\n        ...state.query,\n        ...action.payload,\n      };\n    },\n    storeSelectedKeys(state, action: PayloadAction<Key[]>) {\n      state.selected = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { success, error, loading } = getThunkStatus([\n      getAllPayments,\n      approvePaymentsInBatch,\n      deleteExistingPayment,\n    ]);\n\n    builder\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(error, (state, action) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const { storeQuery, storeList, storeSelectedKeys } =\n  PaymentSlice.actions;\n\nconst PaymentReducer = PaymentSlice.reducer;\nexport default PaymentReducer;\n"]},"metadata":{},"sourceType":"module"}