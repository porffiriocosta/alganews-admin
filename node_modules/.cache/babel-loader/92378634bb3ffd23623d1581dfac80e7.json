{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\EntriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, DatePicker, Descriptions, Space, Table, Tag, Tooltip } from 'antd';\nimport moment from 'moment';\nimport { DeleteOutlined, EyeOutlined, EditOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport transformIntoBrl from '../../core/utils/transformIntoBrl';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport Forbidden from '../components/Forbidden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EntriesList(props) {\n  _s();\n\n  const {\n    type\n  } = props;\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    entries,\n    fetching,\n    fetchEntries,\n    setQuery,\n    selected,\n    setSelected,\n    removeEntry\n  } = useCashFlow(type);\n  const [forbidden, setForbidden] = useState(false);\n  const didMount = useRef(false);\n  useEffect(() => {\n    fetchEntries().catch(err => {\n      var _err$data;\n\n      if ((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.status) === 403) {\n        setForbidden(true);\n        return;\n      }\n\n      throw err;\n    });\n  }, [fetchEntries]);\n  useEffect(() => {\n    if (didMount.current) {\n      const params = new URLSearchParams(location.search);\n      const yearMonth = params.get('yearMonth');\n      if (yearMonth) setQuery({\n        yearMonth\n      });\n    } else {\n      didMount.current = true;\n    }\n  }, [location.search, setQuery]);\n  if (forbidden) return /*#__PURE__*/_jsxDEV(Forbidden, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: entries,\n    loading: fetching,\n    rowKey: 'id',\n    rowSelection: {\n      selectedRowKeys: selected,\n      onChange: setSelected,\n\n      getCheckboxProps(record) {\n        return !record.canBeDeleted ? {\n          disabled: true\n        } : {};\n      }\n\n    },\n    columns: [{\n      dataIndex: 'id',\n      title: type === 'EXPENSE' ? 'Despesas' : 'Receitas',\n      responsive: ['xs'],\n\n      render(_, record) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Descriptions, {\n            column: 1,\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Descrição',\n              children: record.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Categoria',\n              children: record.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Data',\n              children: moment(record.transactedOn).format('DD/MM/YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Valor',\n              children: transformIntoBrl(record.amount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(DoubleConfirm, {\n              popConfirmTitle: type === 'EXPENSE' ? 'Remover despesa?' : 'Remover receita?',\n              modalTitle: type === 'EXPENSE' ? 'Deseja mesmo remover essa despesa?' : 'Deseja mesmo remover esta receita?',\n              modalContent: type === 'EXPENSE' ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível' : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível',\n              onConfirm: async () => {\n                await removeEntry(record.id);\n              },\n              disabled: !record.canBeDeleted,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: 'text',\n                size: 'small',\n                icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 29\n                }, this),\n                danger: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'text',\n              size: 'small',\n              icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 27\n              }, this),\n              onClick: () => props.onEdit(record.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: 'text',\n              size: 'small',\n              icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this),\n              onClick: () => {\n                props.onDetail(record.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      }\n\n    }, {\n      dataIndex: 'description',\n      title: 'Descrição',\n      width: 300,\n      ellipsis: true,\n      responsive: ['sm'],\n\n      render(description) {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: description,\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }, this);\n      }\n\n    }, {\n      dataIndex: 'category',\n      title: 'Categoria',\n      align: 'center',\n      width: 120,\n      responsive: ['sm'],\n\n      render(category) {\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }, this);\n      }\n\n    }, {\n      dataIndex: 'transactedOn',\n      title: 'Data',\n      align: 'center',\n      responsive: ['sm'],\n      width: 120,\n\n      filterDropdown() {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker.MonthPicker, {\n            format: 'YYYY - MMMM',\n            allowClear: false,\n            onChange: date => {\n              history.push({\n                search: `yearMonth=${(date === null || date === void 0 ? void 0 : date.format('YYYY-MM')) || moment().format('YYYY-MM')}`\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this);\n      },\n\n      render(transactedOn) {\n        return moment(transactedOn).format('DD/MM/YYYY');\n      }\n\n    }, {\n      dataIndex: 'amount',\n      title: 'Valor',\n      align: 'right',\n      width: 120,\n      responsive: ['sm'],\n      render: transformIntoBrl\n    }, {\n      dataIndex: 'id',\n      title: 'Ações',\n      align: 'right',\n      responsive: ['sm'],\n      width: 120,\n\n      render(id, record) {\n        return /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(DoubleConfirm, {\n            popConfirmTitle: type === 'EXPENSE' ? 'Remover despesa?' : 'Remover receita?',\n            modalTitle: type === 'EXPENSE' ? 'Deseja mesmo remover essa despesa?' : 'Deseja mesmo remover esta receita?',\n            modalContent: type === 'EXPENSE' ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível' : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível',\n            onConfirm: async () => {\n              await removeEntry(id);\n            },\n            disabled: !record.canBeDeleted,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: 'text',\n              size: 'small',\n              icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 27\n              }, this),\n              disabled: !record.canBeDeleted,\n              danger: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: 'text',\n            size: 'small',\n            icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this),\n            disabled: !record.canBeEdited,\n            onClick: () => props.onEdit(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: 'text',\n            size: 'small',\n            icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this),\n            onClick: () => {\n              props.onDetail(id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this);\n      }\n\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EntriesList, \"QLG2C5auhFkHdrRqZzJc4f37tGE=\", false, function () {\n  return [useLocation, useHistory, useCashFlow];\n});\n\n_c = EntriesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesList\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/EntriesList.tsx"],"names":["Button","Card","DatePicker","Descriptions","Space","Table","Tag","Tooltip","moment","DeleteOutlined","EyeOutlined","EditOutlined","useEffect","useCashFlow","transformIntoBrl","DoubleConfirm","useHistory","useLocation","useRef","useState","Forbidden","EntriesList","props","type","location","history","entries","fetching","fetchEntries","setQuery","selected","setSelected","removeEntry","forbidden","setForbidden","didMount","catch","err","data","status","current","params","URLSearchParams","search","yearMonth","get","selectedRowKeys","onChange","getCheckboxProps","record","canBeDeleted","disabled","dataIndex","title","responsive","render","_","description","category","name","transactedOn","format","amount","id","onEdit","onDetail","width","ellipsis","align","filterDropdown","date","push","canBeEdited"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  DatePicker,\n  Descriptions,\n  Space,\n  Table,\n  Tag,\n  Tooltip,\n} from 'antd';\nimport { CashFlow } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { DeleteOutlined, EyeOutlined, EditOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport transformIntoBrl from '../../core/utils/transformIntoBrl';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport Forbidden from '../components/Forbidden';\n\ninterface EntriesListProps {\n  onEdit: (entryId: number) => any;\n  onDetail: (entryId: number) => any;\n  type: 'EXPENSE' | 'REVENUE';\n}\n\nexport default function EntriesList(props: EntriesListProps) {\n  const { type } = props;\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    entries,\n    fetching,\n    fetchEntries,\n    setQuery,\n    selected,\n    setSelected,\n    removeEntry,\n  } = useCashFlow(type);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    fetchEntries().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchEntries]);\n\n  useEffect(() => {\n    if (didMount.current) {\n      const params = new URLSearchParams(location.search);\n      const yearMonth = params.get('yearMonth');\n      if (yearMonth) setQuery({ yearMonth });\n    } else {\n      didMount.current = true;\n    }\n  }, [location.search, setQuery]);\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <Table<CashFlow.EntrySummary>\n      dataSource={entries}\n      loading={fetching}\n      rowKey={'id'}\n      rowSelection={{\n        selectedRowKeys: selected,\n        onChange: setSelected,\n        getCheckboxProps(record) {\n          return !record.canBeDeleted ? { disabled: true } : {};\n        },\n      }}\n      columns={[\n        {\n          dataIndex: 'id',\n          title: type === 'EXPENSE' ? 'Despesas' : 'Receitas',\n          responsive: ['xs'],\n          render(_, record) {\n            return (\n              <>\n                <Descriptions column={1}>\n                  <Descriptions.Item label={'Descrição'}>\n                    {record.description}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Categoria'}>\n                    {record.category.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Data'}>\n                    {moment(record.transactedOn).format('DD/MM/YYYY')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Valor'}>\n                    {transformIntoBrl(record.amount)}\n                  </Descriptions.Item>\n                </Descriptions>\n                <Space>\n                  <DoubleConfirm\n                    popConfirmTitle={\n                      type === 'EXPENSE'\n                        ? 'Remover despesa?'\n                        : 'Remover receita?'\n                    }\n                    modalTitle={\n                      type === 'EXPENSE'\n                        ? 'Deseja mesmo remover essa despesa?'\n                        : 'Deseja mesmo remover esta receita?'\n                    }\n                    modalContent={\n                      type === 'EXPENSE'\n                        ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                        : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                    }\n                    onConfirm={async () => {\n                      await removeEntry(record.id);\n                    }}\n                    disabled={!record.canBeDeleted}\n                  >\n                    <Button\n                      type={'text'}\n                      size={'small'}\n                      icon={<DeleteOutlined />}\n                      danger\n                    />\n                  </DoubleConfirm>\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<EditOutlined />}\n                    onClick={() => props.onEdit(record.id)}\n                  />\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<EyeOutlined />}\n                    onClick={() => {\n                      props.onDetail(record.id);\n                    }}\n                  />\n                </Space>\n              </>\n            );\n          },\n        },\n        {\n          dataIndex: 'description',\n          title: 'Descrição',\n          width: 300,\n          ellipsis: true,\n          responsive: ['sm'],\n          render(description: CashFlow.EntrySummary['description']) {\n            return <Tooltip title={description}>{description}</Tooltip>;\n          },\n        },\n        {\n          dataIndex: 'category',\n          title: 'Categoria',\n          align: 'center',\n          width: 120,\n          responsive: ['sm'],\n          render(category: CashFlow.EntrySummary['category']) {\n            return <Tag>{category.name}</Tag>;\n          },\n        },\n        {\n          dataIndex: 'transactedOn',\n          title: 'Data',\n          align: 'center',\n          responsive: ['sm'],\n          width: 120,\n          filterDropdown() {\n            return (\n              <Card>\n                <DatePicker.MonthPicker\n                  format={'YYYY - MMMM'}\n                  allowClear={false}\n                  onChange={(date) => {\n                    history.push({\n                      search: `yearMonth=${\n                        date?.format('YYYY-MM') || moment().format('YYYY-MM')\n                      }`,\n                    });\n                  }}\n                />\n              </Card>\n            );\n          },\n          render(transactedOn: CashFlow.EntrySummary['transactedOn']) {\n            return moment(transactedOn).format('DD/MM/YYYY');\n          },\n        },\n        {\n          dataIndex: 'amount',\n          title: 'Valor',\n          align: 'right',\n          width: 120,\n          responsive: ['sm'],\n          render: transformIntoBrl,\n        },\n        {\n          dataIndex: 'id',\n          title: 'Ações',\n          align: 'right',\n          responsive: ['sm'],\n          width: 120,\n          render(id: number, record) {\n            return (\n              <Space>\n                <DoubleConfirm\n                  popConfirmTitle={\n                    type === 'EXPENSE' ? 'Remover despesa?' : 'Remover receita?'\n                  }\n                  modalTitle={\n                    type === 'EXPENSE'\n                      ? 'Deseja mesmo remover essa despesa?'\n                      : 'Deseja mesmo remover esta receita?'\n                  }\n                  modalContent={\n                    type === 'EXPENSE'\n                      ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                      : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                  }\n                  onConfirm={async () => {\n                    await removeEntry(id);\n                  }}\n                  disabled={!record.canBeDeleted}\n                >\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<DeleteOutlined />}\n                    disabled={!record.canBeDeleted}\n                    danger\n                  />\n                </DoubleConfirm>\n                <Button\n                  type={'text'}\n                  size={'small'}\n                  icon={<EditOutlined />}\n                  disabled={!record.canBeEdited}\n                  onClick={() => props.onEdit(id)}\n                />\n                <Button\n                  type={'text'}\n                  size={'small'}\n                  icon={<EyeOutlined />}\n                  onClick={() => {\n                    props.onDetail(id);\n                  }}\n                />\n              </Space>\n            );\n          },\n        },\n      ]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}