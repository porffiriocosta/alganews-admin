{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Card,notification,Skeleton}from'antd';import{UserService}from'danielbonifacio-sdk';import moment from'moment';import{useCallback}from'react';import{useEffect}from'react';import{Redirect,useHistory,useParams}from'react-router-dom';import useBreadcrumb from'../../core/hooks/useBreadcrumb';import usePageTitle from'../../core/hooks/usePageTitle';import useUser from'../../core/hooks/useUser';import NotFoundError from'../components/NotFoundError';import UserForm from'../features/UserForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UserEditView(){usePageTitle('Edição do usuário');useBreadcrumb('Usuários/Edição');var params=useParams();var history=useHistory();var _useUser=useUser(),user=_useUser.user,fetchUser=_useUser.fetchUser,notFound=_useUser.notFound;useEffect(function(){if(!isNaN(Number(params.id)))fetchUser(Number(params.id));},[fetchUser,params.id]);var transformUserData=useCallback(function(user){return _objectSpread(_objectSpread({},user),{},{createdAt:moment(user.createdAt),updatedAt:moment(user.updatedAt),birthdate:moment(user.birthdate)});},[]);if(isNaN(Number(params.id)))return/*#__PURE__*/_jsx(Redirect,{to:'/usuarios'});if(notFound)return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(NotFoundError,{title:'Usuário não encontrado',actionDestination:'/usuarios',actionTitle:'Voltar para lista de usuários'})});function handleUserUpdate(_x){return _handleUserUpdate.apply(this,arguments);}function _handleUserUpdate(){_handleUserUpdate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return UserService.updateExistingUser(Number(params.id),user).then(function(){history.push('/usuarios');notification.success({message:'Usuário foi atualizado com sucesso'});});case 2:case\"end\":return _context.stop();}}},_callee);}));return _handleUserUpdate.apply(this,arguments);}if(!user)return/*#__PURE__*/_jsx(Skeleton,{});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(UserForm,{onUpdate:handleUserUpdate,user:transformUserData(user)})});}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/views/UserEdit.view.tsx"],"names":["Card","notification","Skeleton","UserService","moment","useCallback","useEffect","Redirect","useHistory","useParams","useBreadcrumb","usePageTitle","useUser","NotFoundError","UserForm","UserEditView","params","history","user","fetchUser","notFound","isNaN","Number","id","transformUserData","createdAt","updatedAt","birthdate","handleUserUpdate","updateExistingUser","then","push","success","message"],"mappings":"8bAAA,OAASA,IAAT,CAAeC,YAAf,CAA6BC,QAA7B,KAA6C,MAA7C,CACA,OAAeC,WAAf,KAAkC,qBAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,CAAmBC,UAAnB,CAA+BC,SAA/B,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,gGAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACrCJ,YAAY,CAAC,mBAAD,CAAZ,CACAD,aAAa,CAAC,iBAAD,CAAb,CAEA,GAAMM,CAAAA,MAAM,CAAGP,SAAS,EAAxB,CACA,GAAMQ,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CALqC,aAOCI,OAAO,EAPR,CAO7BM,IAP6B,UAO7BA,IAP6B,CAOvBC,SAPuB,UAOvBA,SAPuB,CAOZC,QAPY,UAOZA,QAPY,CASrCd,SAAS,CAAC,UAAM,CACd,GAAI,CAACe,KAAK,CAACC,MAAM,CAACN,MAAM,CAACO,EAAR,CAAP,CAAV,CAA+BJ,SAAS,CAACG,MAAM,CAACN,MAAM,CAACO,EAAR,CAAP,CAAT,CAChC,CAFQ,CAEN,CAACJ,SAAD,CAAYH,MAAM,CAACO,EAAnB,CAFM,CAAT,CAIA,GAAMC,CAAAA,iBAAiB,CAAGnB,WAAW,CAAC,SAACa,IAAD,CAAyB,CAC7D,sCACKA,IADL,MAEEO,SAAS,CAAErB,MAAM,CAACc,IAAI,CAACO,SAAN,CAFnB,CAGEC,SAAS,CAAEtB,MAAM,CAACc,IAAI,CAACQ,SAAN,CAHnB,CAIEC,SAAS,CAAEvB,MAAM,CAACc,IAAI,CAACS,SAAN,CAJnB,GAMD,CAPoC,CAOlC,EAPkC,CAArC,CASA,GAAIN,KAAK,CAACC,MAAM,CAACN,MAAM,CAACO,EAAR,CAAP,CAAT,CAA8B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,WAAd,EAAP,CAE9B,GAAIH,QAAJ,CACE,mBACE,KAAC,IAAD,wBACE,KAAC,aAAD,EACE,KAAK,CAAE,wBADT,CAEE,iBAAiB,CAAE,WAFrB,CAGE,WAAW,CAAE,+BAHf,EADF,EADF,CAzBmC,QAmCtBQ,CAAAA,gBAnCsB,4JAmCrC,iBAAgCV,IAAhC,wIACQf,CAAAA,WAAW,CAAC0B,kBAAZ,CAA+BP,MAAM,CAACN,MAAM,CAACO,EAAR,CAArC,CAAkDL,IAAlD,EAAwDY,IAAxD,CAA6D,UAAM,CACvEb,OAAO,CAACc,IAAR,CAAa,WAAb,EACA9B,YAAY,CAAC+B,OAAb,CAAqB,CACnBC,OAAO,CAAE,oCADU,CAArB,EAGD,CALK,CADR,uDAnCqC,mDA4CrC,GAAI,CAACf,IAAL,CAAW,mBAAO,KAAC,QAAD,IAAP,CAEX,mBACE,sCACE,KAAC,QAAD,EAAU,QAAQ,CAAEU,gBAApB,CAAsC,IAAI,CAAEJ,iBAAiB,CAACN,IAAD,CAA7D,EADF,EADF,CAKD","sourcesContent":["import { Card, notification, Skeleton } from 'antd';\nimport { User, UserService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport useUser from '../../core/hooks/useUser';\nimport NotFoundError from '../components/NotFoundError';\nimport UserForm from '../features/UserForm';\n\nexport default function UserEditView() {\n  usePageTitle('Edição do usuário');\n  useBreadcrumb('Usuários/Edição');\n\n  const params = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const { user, fetchUser, notFound } = useUser();\n\n  useEffect(() => {\n    if (!isNaN(Number(params.id))) fetchUser(Number(params.id));\n  }, [fetchUser, params.id]);\n\n  const transformUserData = useCallback((user: User.Detailed) => {\n    return {\n      ...user,\n      createdAt: moment(user.createdAt),\n      updatedAt: moment(user.updatedAt),\n      birthdate: moment(user.birthdate),\n    };\n  }, []);\n\n  if (isNaN(Number(params.id))) return <Redirect to={'/usuarios'} />;\n\n  if (notFound)\n    return (\n      <Card>\n        <NotFoundError\n          title={'Usuário não encontrado'}\n          actionDestination={'/usuarios'}\n          actionTitle={'Voltar para lista de usuários'}\n        />\n      </Card>\n    );\n\n  async function handleUserUpdate(user: User.Input) {\n    await UserService.updateExistingUser(Number(params.id), user).then(() => {\n      history.push('/usuarios');\n      notification.success({\n        message: 'Usuário foi atualizado com sucesso',\n      });\n    });\n  }\n\n  if (!user) return <Skeleton />;\n\n  return (\n    <>\n      <UserForm onUpdate={handleUserUpdate} user={transformUserData(user)} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}