{"ast":null,"code":"import { createAsyncThunk, createReducer, isFulfilled, isPending, isRejected } from '@reduxjs/toolkit';\nimport { UserService } from 'danielbonifacio-sdk';\nconst initialState = {\n  fetching: false,\n  list: []\n};\nexport const getAllUsers = createAsyncThunk('user/getAllUsers', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    return await UserService.getAllUsers();\n  } catch (err) {\n    return rejectWithValue({ ...err\n    });\n  }\n});\nexport const toggleUserStatus = createAsyncThunk('user/toggleUserStatus', async user => {\n  user.active ? await UserService.deactivateExistingUser(user.id) : await UserService.activateExistingUser(user.id);\n  return user;\n});\nexport default createReducer(initialState, builder => {\n  const success = isFulfilled(getAllUsers, toggleUserStatus);\n  const error = isRejected(getAllUsers, toggleUserStatus);\n  const loading = isPending(getAllUsers, toggleUserStatus);\n  builder.addCase(getAllUsers.fulfilled, (state, action) => {\n    state.list = action.payload;\n  }).addMatcher(success, state => {\n    state.fetching = false;\n  }).addMatcher(error, (state, action) => {\n    state.fetching = false;\n  }).addMatcher(loading, state => {\n    state.fetching = true;\n  });\n});","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/store/User.reducer.ts"],"names":["createAsyncThunk","createReducer","isFulfilled","isPending","isRejected","UserService","initialState","fetching","list","getAllUsers","_","rejectWithValue","err","toggleUserStatus","user","active","deactivateExistingUser","id","activateExistingUser","builder","success","error","loading","addCase","fulfilled","state","action","payload","addMatcher"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,kBANP;AAOA,SAAeC,WAAf,QAAkC,qBAAlC;AAOA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE,KADoB;AAE9BC,EAAAA,IAAI,EAAE;AAFwB,CAAhC;AAKA,OAAO,MAAMC,WAAW,GAAGT,gBAAgB,CACzC,kBADyC,EAEzC,OAAOU,CAAP,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAAkC;AAChC,MAAI;AACF,WAAO,MAAMN,WAAW,CAACI,WAAZ,EAAb;AACD,GAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,WAAOD,eAAe,CAAC,EAAE,GAAGC;AAAL,KAAD,CAAtB;AACD;AACF,CARwC,CAApC;AAWP,OAAO,MAAMC,gBAAgB,GAAGb,gBAAgB,CAC9C,uBAD8C,EAE9C,MAAOc,IAAP,IAA8C;AAC5CA,EAAAA,IAAI,CAACC,MAAL,GACI,MAAMV,WAAW,CAACW,sBAAZ,CAAmCF,IAAI,CAACG,EAAxC,CADV,GAEI,MAAMZ,WAAW,CAACa,oBAAZ,CAAiCJ,IAAI,CAACG,EAAtC,CAFV;AAIA,SAAOH,IAAP;AACD,CAR6C,CAAzC;AAWP,eAAeb,aAAa,CAACK,YAAD,EAAgBa,OAAD,IAAa;AACtD,QAAMC,OAAO,GAAGlB,WAAW,CAACO,WAAD,EAAcI,gBAAd,CAA3B;AACA,QAAMQ,KAAK,GAAGjB,UAAU,CAACK,WAAD,EAAcI,gBAAd,CAAxB;AACA,QAAMS,OAAO,GAAGnB,SAAS,CAACM,WAAD,EAAcI,gBAAd,CAAzB;AAEAM,EAAAA,OAAO,CACJI,OADH,CACWd,WAAW,CAACe,SADvB,EACkC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjDD,IAAAA,KAAK,CAACjB,IAAN,GAAakB,MAAM,CAACC,OAApB;AACD,GAHH,EAIGC,UAJH,CAIcR,OAJd,EAIwBK,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAAClB,QAAN,GAAiB,KAAjB;AACD,GANH,EAOGqB,UAPH,CAOcP,KAPd,EAOqB,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACpCD,IAAAA,KAAK,CAAClB,QAAN,GAAiB,KAAjB;AACD,GATH,EAUGqB,UAVH,CAUcN,OAVd,EAUwBG,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAAClB,QAAN,GAAiB,IAAjB;AACD,GAZH;AAaD,CAlB2B,CAA5B","sourcesContent":["import {\n  createAsyncThunk,\n  createReducer,\n  isFulfilled,\n  isPending,\n  isRejected,\n} from '@reduxjs/toolkit';\nimport { User, UserService } from 'danielbonifacio-sdk';\n\ninterface UserState {\n  list: User.Summary[];\n  fetching: boolean;\n}\n\nconst initialState: UserState = {\n  fetching: false,\n  list: [],\n};\n\nexport const getAllUsers = createAsyncThunk(\n  'user/getAllUsers',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await UserService.getAllUsers();\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const toggleUserStatus = createAsyncThunk(\n  'user/toggleUserStatus',\n  async (user: User.Summary | User.Detailed) => {\n    user.active\n      ? await UserService.deactivateExistingUser(user.id)\n      : await UserService.activateExistingUser(user.id);\n\n    return user;\n  }\n);\n\nexport default createReducer(initialState, (builder) => {\n  const success = isFulfilled(getAllUsers, toggleUserStatus);\n  const error = isRejected(getAllUsers, toggleUserStatus);\n  const loading = isPending(getAllUsers, toggleUserStatus);\n\n  builder\n    .addCase(getAllUsers.fulfilled, (state, action) => {\n      state.list = action.payload;\n    })\n    .addMatcher(success, (state) => {\n      state.fetching = false;\n    })\n    .addMatcher(error, (state, action) => {\n      state.fetching = false;\n    })\n    .addMatcher(loading, (state) => {\n      state.fetching = true;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}