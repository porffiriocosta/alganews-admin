{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\views\\\\PaymentList.view.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, DatePicker, Descriptions, notification, Popconfirm, Row, Space, Table, Tag, Tooltip } from 'antd';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport usePayments from '../../core/hooks/usePayments';\nimport confirm from 'antd/lib/modal/confirm';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { Link } from 'react-router-dom';\nimport Forbidden from '../components/Forbidden';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentListView() {\n  _s();\n\n  useBreadcrumb('Pagamentos/Consulta');\n  const {\n    xs\n  } = useBreakpoint();\n  const {\n    payments,\n    fetching,\n    query,\n    selected,\n    fetchPayments,\n    setQuery,\n    approvePaymentsInBatch,\n    setSelected,\n    deleteExistingPayment\n  } = usePayments();\n  const [forbidden, setForbidden] = useState(false);\n  useEffect(() => {\n    fetchPayments().catch(err => {\n      var _err$data;\n\n      if ((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.status) === 403) {\n        setForbidden(true);\n        return;\n      }\n\n      throw err;\n    });\n  }, [fetchPayments]);\n  if (forbidden) return /*#__PURE__*/_jsxDEV(Forbidden, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: 'space-between',\n      gutter: 24,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          width: '100%',\n          ...(!xs && {\n            justifyContent: 'space-between'\n          })\n        },\n        direction: xs ? 'vertical' : 'horizontal',\n        children: [/*#__PURE__*/_jsxDEV(DoubleConfirm, {\n          popConfirmTitle: selected.length === 1 ? 'Você deseja aprovar o agendamento selecionado?' : 'Você deseja aprovar os agendamentos selecionados?',\n          disabled: selected.length === 0,\n          modalTitle: 'Aprovar agendamento',\n          modalContent: 'Esta é uma ação irreversível. Ao aprovar um agendamento, ele não poderá ser removido!',\n          onConfirm: async () => {\n            await approvePaymentsInBatch(selected);\n            notification.success({\n              message: 'Os pagamentos selecionados foram aprovados'\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            block: xs,\n            type: 'primary',\n            disabled: selected.length === 0,\n            children: \"Aprovar agendamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker.MonthPicker, {\n          style: {\n            width: xs ? '100%' : 240\n          },\n          format: 'MMMM - YYYY',\n          placeholder: 'Filtrar por mês',\n          onChange: date => {\n            setQuery({\n              scheduledToYearMonth: date ? date.format('YYYY-MM') : undefined\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: payments === null || payments === void 0 ? void 0 : payments.content,\n      rowKey: \"id\",\n      loading: fetching,\n      onChange: (p, f, sorter) => {\n        const {\n          order\n        } = sorter;\n        const direction = order === null || order === void 0 ? void 0 : order.replace('end', '');\n        if (direction && direction !== query.sort[1]) setQuery({\n          sort: [query.sort[0], direction]\n        });\n      },\n      pagination: {\n        current: query.page ? query.page + 1 : 1,\n        onChange: page => setQuery({\n          page: page - 1\n        }),\n        total: payments === null || payments === void 0 ? void 0 : payments.totalElements,\n        pageSize: query.size\n      },\n      rowSelection: {\n        selectedRowKeys: selected,\n        onChange: setSelected,\n\n        getCheckboxProps(payment) {\n          return !payment.canBeApproved ? {\n            disabled: true\n          } : {};\n        }\n\n      },\n      columns: [{\n        title: 'Agendamentos',\n        responsive: ['xs'],\n\n        render(payment) {\n          return /*#__PURE__*/_jsxDEV(Descriptions, {\n            column: 1,\n            size: 'small',\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Editor',\n              children: payment.payee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Agendamento',\n              children: moment(payment.scheduledTo).format('DD/MM/YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Período',\n              children: (() => {\n                const starts = moment(payment.accountingPeriod.startsOn).format('DD/MM/YYYY');\n                const ends = moment(payment.accountingPeriod.endsOn).format('DD/MM/YYYY');\n                return `${starts} - ${ends}`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Status',\n              children: /*#__PURE__*/_jsxDEV(Tag, {\n                color: payment.approvedAt ? 'green' : 'warning',\n                children: payment.approvedAt ? `Aprovado em ${moment(payment.approvedAt).format('DD/MM/YYYY')}` : 'Aguardando aprovação'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Ações',\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: 'Detalhar',\n                placement: xs ? 'top' : 'left',\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/pagamentos/${payment.id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: 'small',\n                    icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"Remover agendamento?\",\n                disabled: !payment.canBeDeleted,\n                onConfirm: () => {\n                  confirm({\n                    title: 'Remover agendamento',\n                    cancelText: 'Cancelar',\n\n                    onOk() {\n                      deleteExistingPayment(payment.id);\n                    },\n\n                    content: 'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!'\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: payment.canBeDeleted ? 'Remover' : 'Pagamento já aprovado',\n                  placement: xs ? 'bottom' : 'right',\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: !payment.canBeDeleted,\n                    icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 33\n                    }, this),\n                    size: 'small'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this);\n        }\n\n      }, {\n        dataIndex: 'payee',\n        title: 'Editor',\n        responsive: ['sm'],\n        ellipsis: true,\n        width: 180,\n\n        render(payee) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/usuarios/${payee.id}`,\n            children: payee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 22\n          }, this);\n        }\n\n      }, {\n        dataIndex: 'scheduledTo',\n        title: 'Agendamento',\n        align: 'center',\n        width: 140,\n\n        sorter(a, b) {\n          return 0;\n        },\n\n        responsive: ['sm'],\n\n        render(date) {\n          return moment(date).format('DD/MM/YYYY');\n        }\n\n      }, {\n        dataIndex: 'accountingPeriod',\n        title: 'Período',\n        align: 'center',\n        responsive: ['sm'],\n        width: 240,\n\n        render(period) {\n          const starts = moment(period.startsOn).format('DD/MM/YYYY');\n          const ends = moment(period.endsOn).format('DD/MM/YYYY');\n          return `${starts} - ${ends}`;\n        }\n\n      }, {\n        dataIndex: 'approvedAt',\n        title: 'Status',\n        align: 'center',\n        width: 180,\n        responsive: ['sm'],\n\n        render(approvalDate) {\n          const formattedApprovalDate = moment(approvalDate).format('DD/MM/YYYY');\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            color: approvalDate ? 'green' : 'warning',\n            children: approvalDate ? `Aprovado em ${formattedApprovalDate}` : 'Aguardando aprovação'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this);\n        }\n\n      }, {\n        dataIndex: 'id',\n        title: 'Ações',\n        responsive: ['sm'],\n        width: 100,\n\n        render(id, payment) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: 'Detalhar',\n              placement: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/pagamentos/${id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n              title: \"Remover agendamento?\",\n              disabled: !payment.canBeDeleted,\n              onConfirm: () => {\n                confirm({\n                  title: 'Remover agendamento',\n                  cancelText: 'Cancelar',\n\n                  onOk() {\n                    deleteExistingPayment(id);\n                  },\n\n                  content: 'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!'\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: payment.canBeDeleted ? 'Remover' : 'Pagamento já aprovado',\n                placement: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  disabled: !payment.canBeDeleted,\n                  icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        }\n\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentListView, \"KYmD9qQ9z3Wil4tpRX0SWs2hlrE=\", false, function () {\n  return [useBreadcrumb, useBreakpoint, usePayments];\n});\n\n_c = PaymentListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentListView\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/views/PaymentList.view.tsx"],"names":["Button","DatePicker","Descriptions","notification","Popconfirm","Row","Space","Table","Tag","Tooltip","moment","useEffect","useState","EyeOutlined","DeleteOutlined","usePayments","confirm","useBreakpoint","DoubleConfirm","Link","Forbidden","useBreadcrumb","PaymentListView","xs","payments","fetching","query","selected","fetchPayments","setQuery","approvePaymentsInBatch","setSelected","deleteExistingPayment","forbidden","setForbidden","catch","err","data","status","width","justifyContent","length","success","message","date","scheduledToYearMonth","format","undefined","content","p","f","sorter","order","direction","replace","sort","current","page","onChange","total","totalElements","pageSize","size","selectedRowKeys","getCheckboxProps","payment","canBeApproved","disabled","title","responsive","render","payee","name","scheduledTo","starts","accountingPeriod","startsOn","ends","endsOn","approvedAt","id","canBeDeleted","cancelText","onOk","dataIndex","ellipsis","align","a","b","period","approvalDate","formattedApprovalDate"],"mappings":"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","sourcesContent":["import {\n  Button,\n  DatePicker,\n  Descriptions,\n  notification,\n  Popconfirm,\n  Row,\n  Space,\n  Table,\n  Tag,\n  Tooltip,\n} from 'antd';\nimport { Payment } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport usePayments from '../../core/hooks/usePayments';\nimport confirm from 'antd/lib/modal/confirm';\nimport { SorterResult } from 'antd/lib/table/interface';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { Link } from 'react-router-dom';\nimport Forbidden from '../components/Forbidden';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\n\nexport default function PaymentListView() {\n  useBreadcrumb('Pagamentos/Consulta');\n  const { xs } = useBreakpoint();\n  const {\n    payments,\n    fetching,\n    query,\n    selected,\n    fetchPayments,\n    setQuery,\n    approvePaymentsInBatch,\n    setSelected,\n    deleteExistingPayment,\n  } = usePayments();\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    fetchPayments().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchPayments]);\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <>\n      <Row justify={'space-between'} gutter={24}>\n        <Space\n          style={{\n            width: '100%',\n            ...(!xs && { justifyContent: 'space-between' }),\n          }}\n          direction={xs ? 'vertical' : 'horizontal'}\n        >\n          <DoubleConfirm\n            popConfirmTitle={\n              selected.length === 1\n                ? 'Você deseja aprovar o agendamento selecionado?'\n                : 'Você deseja aprovar os agendamentos selecionados?'\n            }\n            disabled={selected.length === 0}\n            modalTitle={'Aprovar agendamento'}\n            modalContent={\n              'Esta é uma ação irreversível. Ao aprovar um agendamento, ele não poderá ser removido!'\n            }\n            onConfirm={async () => {\n              await approvePaymentsInBatch(selected as number[]);\n              notification.success({\n                message: 'Os pagamentos selecionados foram aprovados',\n              });\n            }}\n          >\n            <Button\n              block={xs}\n              type={'primary'}\n              disabled={selected.length === 0}\n            >\n              Aprovar agendamentos\n            </Button>\n          </DoubleConfirm>\n          <DatePicker.MonthPicker\n            style={{ width: xs ? '100%' : 240 }}\n            format={'MMMM - YYYY'}\n            placeholder={'Filtrar por mês'}\n            onChange={(date) => {\n              setQuery({\n                scheduledToYearMonth: date ? date.format('YYYY-MM') : undefined,\n              });\n            }}\n          />\n        </Space>\n      </Row>\n      <Table<Payment.Summary>\n        dataSource={payments?.content}\n        rowKey='id'\n        loading={fetching}\n        onChange={(p, f, sorter) => {\n          const { order } = sorter as SorterResult<Payment.Summary>;\n          const direction = order?.replace('end', '');\n          if (direction && direction !== query.sort![1])\n            setQuery({\n              sort: [query.sort![0], direction as 'asc' | 'desc'],\n            });\n        }}\n        pagination={{\n          current: query.page ? query.page + 1 : 1,\n          onChange: (page) => setQuery({ page: page - 1 }),\n          total: payments?.totalElements,\n          pageSize: query.size,\n        }}\n        rowSelection={{\n          selectedRowKeys: selected,\n          onChange: setSelected,\n          getCheckboxProps(payment) {\n            return !payment.canBeApproved ? { disabled: true } : {};\n          },\n        }}\n        columns={[\n          {\n            title: 'Agendamentos',\n            responsive: ['xs'],\n            render(payment: Payment.Summary) {\n              return (\n                <Descriptions column={1} size={'small'}>\n                  <Descriptions.Item label={'Editor'}>\n                    {payment.payee.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Agendamento'}>\n                    {moment(payment.scheduledTo).format('DD/MM/YYYY')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Período'}>\n                    {(() => {\n                      const starts = moment(\n                        payment.accountingPeriod.startsOn\n                      ).format('DD/MM/YYYY');\n                      const ends = moment(\n                        payment.accountingPeriod.endsOn\n                      ).format('DD/MM/YYYY');\n                      return `${starts} - ${ends}`;\n                    })()}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Status'}>\n                    <Tag color={payment.approvedAt ? 'green' : 'warning'}>\n                      {payment.approvedAt\n                        ? `Aprovado em ${moment(payment.approvedAt).format(\n                            'DD/MM/YYYY'\n                          )}`\n                        : 'Aguardando aprovação'}\n                    </Tag>\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ações'}>\n                    <Tooltip title={'Detalhar'} placement={xs ? 'top' : 'left'}>\n                      <Link to={`/pagamentos/${payment.id}`}>\n                        <Button size={'small'} icon={<EyeOutlined />} />\n                      </Link>\n                    </Tooltip>\n                    <Popconfirm\n                      title='Remover agendamento?'\n                      disabled={!payment.canBeDeleted}\n                      onConfirm={() => {\n                        confirm({\n                          title: 'Remover agendamento',\n                          cancelText: 'Cancelar',\n                          onOk() {\n                            deleteExistingPayment(payment.id);\n                          },\n                          content:\n                            'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!',\n                        });\n                      }}\n                    >\n                      <Tooltip\n                        title={\n                          payment.canBeDeleted\n                            ? 'Remover'\n                            : 'Pagamento já aprovado'\n                        }\n                        placement={xs ? 'bottom' : 'right'}\n                      >\n                        <Button\n                          disabled={!payment.canBeDeleted}\n                          icon={<DeleteOutlined />}\n                          size={'small'}\n                        />\n                      </Tooltip>\n                    </Popconfirm>\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'payee',\n            title: 'Editor',\n            responsive: ['sm'],\n            ellipsis: true,\n            width: 180,\n            render(payee: Payment.Summary['payee']) {\n              return <Link to={`/usuarios/${payee.id}`}>{payee.name}</Link>;\n            },\n          },\n          {\n            dataIndex: 'scheduledTo',\n            title: 'Agendamento',\n            align: 'center',\n            width: 140,\n            sorter(a, b) {\n              return 0;\n            },\n            responsive: ['sm'],\n            render(date: string) {\n              return moment(date).format('DD/MM/YYYY');\n            },\n          },\n          {\n            dataIndex: 'accountingPeriod',\n            title: 'Período',\n            align: 'center',\n            responsive: ['sm'],\n            width: 240,\n            render(period: Payment.Summary['accountingPeriod']) {\n              const starts = moment(period.startsOn).format('DD/MM/YYYY');\n              const ends = moment(period.endsOn).format('DD/MM/YYYY');\n              return `${starts} - ${ends}`;\n            },\n          },\n          {\n            dataIndex: 'approvedAt',\n            title: 'Status',\n            align: 'center',\n            width: 180,\n            responsive: ['sm'],\n            render(approvalDate: Payment.Summary['approvedAt']) {\n              const formattedApprovalDate =\n                moment(approvalDate).format('DD/MM/YYYY');\n\n              return (\n                <Tag color={approvalDate ? 'green' : 'warning'}>\n                  {approvalDate\n                    ? `Aprovado em ${formattedApprovalDate}`\n                    : 'Aguardando aprovação'}\n                </Tag>\n              );\n            },\n          },\n          {\n            dataIndex: 'id',\n            title: 'Ações',\n            responsive: ['sm'],\n            width: 100,\n            render(id: number, payment) {\n              return (\n                <>\n                  <Tooltip title={'Detalhar'} placement='left'>\n                    <Link to={`/pagamentos/${id}`}>\n                      <Button size='small' icon={<EyeOutlined />} />\n                    </Link>\n                  </Tooltip>\n                  <Popconfirm\n                    title='Remover agendamento?'\n                    disabled={!payment.canBeDeleted}\n                    onConfirm={() => {\n                      confirm({\n                        title: 'Remover agendamento',\n                        cancelText: 'Cancelar',\n                        onOk() {\n                          deleteExistingPayment(id);\n                        },\n                        content:\n                          'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!',\n                      });\n                    }}\n                  >\n                    <Tooltip\n                      title={\n                        payment.canBeDeleted\n                          ? 'Remover'\n                          : 'Pagamento já aprovado'\n                      }\n                      placement='right'\n                    >\n                      <Button\n                        size='small'\n                        disabled={!payment.canBeDeleted}\n                        icon={<DeleteOutlined />}\n                      />\n                    </Tooltip>\n                  </Popconfirm>\n                </>\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}