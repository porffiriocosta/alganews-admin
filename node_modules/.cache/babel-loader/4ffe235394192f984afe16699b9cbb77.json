{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\views\\\\PaymentDetails.view.tsx\",\n    _s = $RefreshSig$();\n\nimport { PrinterOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Divider, notification, Space, Tag } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport usePayment from '../../core/hooks/usePayment';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport NotFoundError from '../components/NotFoundError';\nimport PaymentBonuses from '../features/PaymentBonuses';\nimport PaymentHeader from '../features/PaymentHeader';\nimport PaymentPosts from '../features/PaymentPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentDetailsView() {\n  _s();\n\n  usePageTitle('Detalhes do pagamento');\n  useBreadcrumb('Pagamento/Detalhes');\n  const params = useParams();\n  const history = useHistory();\n  const {\n    fetchPayment,\n    fetchPosts,\n    fetchingPayment,\n    fetchingPosts,\n    paymentNotFound,\n    approvingPayment,\n    approvePayment,\n    payment,\n    posts\n  } = usePayment();\n  useEffect(() => {\n    const paymentId = Number(params.id);\n\n    if (isNaN(paymentId)) {\n      return history.push('/pagamentos');\n    } else {\n      fetchPosts(paymentId);\n      fetchPayment(paymentId);\n    }\n  }, [fetchPosts, fetchPayment, params.id, history]);\n  if (paymentNotFound) return /*#__PURE__*/_jsxDEV(NotFoundError, {\n    title: \"Pagamento n\\xE3o encontrado\",\n    actionDestination: \"/pagamentos\",\n    actionTitle: 'Ir para a lista de pagamentos'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"no-print\",\n        disabled: !payment,\n        type: 'primary',\n        icon: /*#__PURE__*/_jsxDEV(PrinterOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this),\n        onClick: window.print,\n        children: \"Imprimir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), (payment === null || payment === void 0 ? void 0 : payment.approvedAt) ? /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"Pagamento aprovado em\", ' ', moment(payment.approvedAt).format('DD/MM/YYYY')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DoubleConfirm, {\n        popConfirmTitle: 'Deseja aprovar este agendamento?',\n        modalTitle: 'Ação irreversível',\n        disabled: !payment || !payment.canBeApproved,\n        modalContent: 'Aprovar um agendamento de pagamento gera uma despesa que não pode ser removida do fluxo de caixa. Essa ação não poderá ser desfeita.',\n        onConfirm: async () => {\n          if (payment) {\n            await approvePayment(payment.id);\n            fetchPayment(payment.id);\n            notification.success({\n              message: 'Pagamento aprovado com sucesso'\n            });\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          loading: approvingPayment,\n          disabled: !payment || !payment.canBeApproved,\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this),\n          type: 'primary',\n          danger: true,\n          children: \"Aprovar agendamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(PaymentHeader, {\n        loading: fetchingPayment,\n        editorId: payment === null || payment === void 0 ? void 0 : payment.payee.id,\n        editorName: payment === null || payment === void 0 ? void 0 : payment.payee.name,\n        periodStart: moment(payment === null || payment === void 0 ? void 0 : payment.accountingPeriod.startsOn).format('DD/MM/YYYY'),\n        periodEnd: moment(payment === null || payment === void 0 ? void 0 : payment.accountingPeriod.endsOn).format('DD/MM/YYYY'),\n        postsEarnings: payment === null || payment === void 0 ? void 0 : payment.earnings.totalAmount,\n        totalEarnings: payment === null || payment === void 0 ? void 0 : payment.grandTotalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaymentBonuses, {\n        loading: fetchingPayment,\n        bonuses: payment === null || payment === void 0 ? void 0 : payment.bonuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaymentPosts, {\n        loading: fetchingPosts,\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentDetailsView, \"T+bQFVCczfw/26yxIjR3nxwwpVI=\", false, function () {\n  return [usePageTitle, useBreadcrumb, useParams, useHistory, usePayment];\n});\n\n_c = PaymentDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentDetailsView\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/views/PaymentDetails.view.tsx"],"names":["PrinterOutlined","CheckCircleOutlined","Button","Card","Divider","notification","Space","Tag","moment","useEffect","useHistory","useParams","useBreadcrumb","usePageTitle","usePayment","DoubleConfirm","NotFoundError","PaymentBonuses","PaymentHeader","PaymentPosts","PaymentDetailsView","params","history","fetchPayment","fetchPosts","fetchingPayment","fetchingPosts","paymentNotFound","approvingPayment","approvePayment","payment","posts","paymentId","Number","id","isNaN","push","marginBottom","window","print","approvedAt","format","canBeApproved","success","message","payee","name","accountingPeriod","startsOn","endsOn","earnings","totalAmount","grandTotalAmount","bonuses"],"mappings":"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","sourcesContent":["import { PrinterOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Divider, notification, Space, Tag } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport usePayment from '../../core/hooks/usePayment';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport NotFoundError from '../components/NotFoundError';\nimport PaymentBonuses from '../features/PaymentBonuses';\nimport PaymentHeader from '../features/PaymentHeader';\nimport PaymentPosts from '../features/PaymentPosts';\n\nexport default function PaymentDetailsView() {\n  usePageTitle('Detalhes do pagamento');\n  useBreadcrumb('Pagamento/Detalhes');\n  const params = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const {\n    fetchPayment,\n    fetchPosts,\n    fetchingPayment,\n    fetchingPosts,\n    paymentNotFound,\n    approvingPayment,\n    approvePayment,\n    payment,\n    posts,\n  } = usePayment();\n\n  useEffect(() => {\n    const paymentId = Number(params.id);\n    if (isNaN(paymentId)) {\n      return history.push('/pagamentos');\n    } else {\n      fetchPosts(paymentId);\n      fetchPayment(paymentId);\n    }\n  }, [fetchPosts, fetchPayment, params.id, history]);\n\n  if (paymentNotFound)\n    return (\n      <NotFoundError\n        title='Pagamento não encontrado'\n        actionDestination='/pagamentos'\n        actionTitle={'Ir para a lista de pagamentos'}\n      />\n    );\n\n  return (\n    <>\n      <Space style={{ marginBottom: 16 }}>\n        <Button\n          className='no-print'\n          disabled={!payment}\n          type={'primary'}\n          icon={<PrinterOutlined />}\n          onClick={window.print}\n        >\n          Imprimir\n        </Button>\n        {payment?.approvedAt ? (\n          <Tag>\n            Pagamento aprovado em{' '}\n            {moment(payment.approvedAt).format('DD/MM/YYYY')}\n          </Tag>\n        ) : (\n          <DoubleConfirm\n            popConfirmTitle={'Deseja aprovar este agendamento?'}\n            modalTitle={'Ação irreversível'}\n            disabled={!payment || !payment.canBeApproved}\n            modalContent={\n              'Aprovar um agendamento de pagamento gera uma despesa que não pode ser removida do fluxo de caixa. Essa ação não poderá ser desfeita.'\n            }\n            onConfirm={async () => {\n              if (payment) {\n                await approvePayment(payment.id);\n                fetchPayment(payment.id);\n                notification.success({\n                  message: 'Pagamento aprovado com sucesso',\n                });\n              }\n            }}\n          >\n            <Button\n              loading={approvingPayment}\n              disabled={!payment || !payment.canBeApproved}\n              icon={<CheckCircleOutlined />}\n              type={'primary'}\n              danger\n            >\n              Aprovar agendamento\n            </Button>\n          </DoubleConfirm>\n        )}\n      </Space>\n      <Card>\n        <PaymentHeader\n          loading={fetchingPayment}\n          editorId={payment?.payee.id}\n          editorName={payment?.payee.name}\n          periodStart={moment(payment?.accountingPeriod.startsOn).format(\n            'DD/MM/YYYY'\n          )}\n          periodEnd={moment(payment?.accountingPeriod.endsOn).format(\n            'DD/MM/YYYY'\n          )}\n          postsEarnings={payment?.earnings.totalAmount}\n          totalEarnings={payment?.grandTotalAmount}\n        />\n        <Divider />\n        <PaymentBonuses loading={fetchingPayment} bonuses={payment?.bonuses} />\n        <Divider />\n        <PaymentPosts loading={fetchingPosts} posts={posts} />\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}