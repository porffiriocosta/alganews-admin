{"ast":null,"code":"import{useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import*as CategoryActions from'../store/EntriesCategory.slice';export default function useEntriesCategories(){var dispatch=useDispatch();var fetching=useSelector(function(s){return s.cashFlow.category.fetching;});var expenses=useSelector(function(s){return s.cashFlow.category.expenses;});var revenues=useSelector(function(s){return s.cashFlow.category.revenues;});var fetchCategories=useCallback(function(){return dispatch(CategoryActions.getCategories()).unwrap();},[dispatch]);var createCategory=useCallback(function(category){return dispatch(CategoryActions.createCategory(category)).unwrap();},[dispatch]);var deleteCategory=useCallback(function(categoryId){return dispatch(CategoryActions.deleteCategory(categoryId)).unwrap();},[dispatch]);return{expenses:expenses,revenues:revenues,fetching:fetching,fetchCategories:fetchCategories,createCategory:createCategory,deleteCategory:deleteCategory};}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/hooks/useEntriesCategories.ts"],"names":["useCallback","useDispatch","useSelector","CategoryActions","useEntriesCategories","dispatch","fetching","s","cashFlow","category","expenses","revenues","fetchCategories","getCategories","unwrap","createCategory","deleteCategory","categoryId"],"mappings":"AACA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAO,GAAKC,CAAAA,eAAZ,KAAiC,gCAAjC,CAEA,cAAe,SAASC,CAAAA,oBAAT,EAAgC,CAC7C,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,GAAMK,CAAAA,QAAQ,CAAGJ,WAAW,CAAC,SAACK,CAAD,QAAkBA,CAAAA,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBH,QAAtC,EAAD,CAA5B,CACA,GAAMI,CAAAA,QAAQ,CAAGR,WAAW,CAAC,SAACK,CAAD,QAAkBA,CAAAA,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBC,QAAtC,EAAD,CAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,CAAC,SAACK,CAAD,QAAkBA,CAAAA,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBE,QAAtC,EAAD,CAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAGZ,WAAW,CACjC,iBAAMK,CAAAA,QAAQ,CAACF,eAAe,CAACU,aAAhB,EAAD,CAAR,CAA0CC,MAA1C,EAAN,EADiC,CAEjC,CAACT,QAAD,CAFiC,CAAnC,CAKA,GAAMU,CAAAA,cAAc,CAAGf,WAAW,CAChC,SAACS,QAAD,QACEJ,CAAAA,QAAQ,CAACF,eAAe,CAACY,cAAhB,CAA+BN,QAA/B,CAAD,CAAR,CAAmDK,MAAnD,EADF,EADgC,CAGhC,CAACT,QAAD,CAHgC,CAAlC,CAMA,GAAMW,CAAAA,cAAc,CAAGhB,WAAW,CAChC,SAACiB,UAAD,QACEZ,CAAAA,QAAQ,CAACF,eAAe,CAACa,cAAhB,CAA+BC,UAA/B,CAAD,CAAR,CAAqDH,MAArD,EADF,EADgC,CAGhC,CAACT,QAAD,CAHgC,CAAlC,CAMA,MAAO,CACLK,QAAQ,CAARA,QADK,CAELC,QAAQ,CAARA,QAFK,CAGLL,QAAQ,CAARA,QAHK,CAILM,eAAe,CAAfA,eAJK,CAKLG,cAAc,CAAdA,cALK,CAMLC,cAAc,CAAdA,cANK,CAAP,CAQD","sourcesContent":["import { CashFlow } from 'danielbonifacio-sdk';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as CategoryActions from '../store/EntriesCategory.slice';\n\nexport default function useEntriesCategories() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const fetching = useSelector((s: RootState) => s.cashFlow.category.fetching);\n  const expenses = useSelector((s: RootState) => s.cashFlow.category.expenses);\n  const revenues = useSelector((s: RootState) => s.cashFlow.category.revenues);\n\n  const fetchCategories = useCallback(\n    () => dispatch(CategoryActions.getCategories()).unwrap(),\n    [dispatch]\n  );\n\n  const createCategory = useCallback(\n    (category: CashFlow.CategoryInput) =>\n      dispatch(CategoryActions.createCategory(category)).unwrap(),\n    [dispatch]\n  );\n\n  const deleteCategory = useCallback(\n    (categoryId: number) =>\n      dispatch(CategoryActions.deleteCategory(categoryId)).unwrap(),\n    [dispatch]\n  );\n\n  return {\n    expenses,\n    revenues,\n    fetching,\n    fetchCategories,\n    createCategory,\n    deleteCategory,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}