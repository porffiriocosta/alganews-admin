{"ast":null,"code":"import{Descriptions,Table,Tooltip}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function PaymentPosts(props){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Table,{loading:props.loading,dataSource:props.posts,pagination:false,rowKey:'id',columns:[{responsive:['xs'],title:'Posts',render:function render(post){return/*#__PURE__*/_jsxs(Descriptions,{column:1,children:[/*#__PURE__*/_jsx(Descriptions.Item,{label:'Título',children:post.title}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Preço por palavra',children:post.earnings.pricePerWord.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2})}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Palavras no post',children:post.earnings.words}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Ganho no post',children:post.earnings.totalAmount.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2})})]});}},{dataIndex:'title',title:'Post',ellipsis:true,width:300,responsive:['sm'],render:function render(value){return/*#__PURE__*/_jsx(Tooltip,{title:value,children:value});}},{dataIndex:'earnings.pricePerWord'.split('.'),title:'Preço por palavra',align:'right',width:150,responsive:['sm'],render:function render(price){return price.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2});}},{dataIndex:'earnings.words'.split('.'),title:'Palavras no post',width:150,align:'right',responsive:['sm']},{dataIndex:'earnings.totalAmount'.split('.'),title:'Total ganho neste post',align:'right',responsive:['sm'],width:170}]})});}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/PaymentPosts.tsx"],"names":["Descriptions","Table","Tooltip","PaymentPosts","props","loading","posts","responsive","title","render","post","earnings","pricePerWord","toLocaleString","style","currency","maximumFractionDigits","words","totalAmount","dataIndex","ellipsis","width","value","split","align","price"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,KAAvB,CAA8BC,OAA9B,KAA6C,MAA7C,C,6IAQA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAAgD,CAC7D,mBACE,sCACE,KAAC,KAAD,EACE,OAAO,CAAEA,KAAK,CAACC,OADjB,CAEE,UAAU,CAAED,KAAK,CAACE,KAFpB,CAGE,UAAU,CAAE,KAHd,CAIE,MAAM,CAAE,IAJV,CAKE,OAAO,CAAE,CACP,CACEC,UAAU,CAAE,CAAC,IAAD,CADd,CAEEC,KAAK,CAAE,OAFT,CAGEC,MAHF,iBAGSC,IAHT,CAGkC,CAC9B,mBACE,MAAC,YAAD,EAAc,MAAM,CAAE,CAAtB,wBACE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,QAA1B,UACGA,IAAI,CAACF,KADR,EADF,cAIE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,mBAA1B,UACGE,IAAI,CAACC,QAAL,CAAcC,YAAd,CAA2BC,cAA3B,CAA0C,OAA1C,CAAmD,CAClDC,KAAK,CAAE,UAD2C,CAElDC,QAAQ,CAAE,KAFwC,CAGlDC,qBAAqB,CAAE,CAH2B,CAAnD,CADH,EAJF,cAWE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,kBAA1B,UACGN,IAAI,CAACC,QAAL,CAAcM,KADjB,EAXF,cAcE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,eAA1B,UACGP,IAAI,CAACC,QAAL,CAAcO,WAAd,CAA0BL,cAA1B,CAAyC,OAAzC,CAAkD,CACjDC,KAAK,CAAE,UAD0C,CAEjDC,QAAQ,CAAE,KAFuC,CAGjDC,qBAAqB,CAAE,CAH0B,CAAlD,CADH,EAdF,GADF,CAwBD,CA5BH,CADO,CA+BP,CACEG,SAAS,CAAE,OADb,CAEEX,KAAK,CAAE,MAFT,CAGEY,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,GAJT,CAKEd,UAAU,CAAE,CAAC,IAAD,CALd,CAMEE,MANF,iBAMSa,KANT,CAMwB,CACpB,mBAAO,KAAC,OAAD,EAAS,KAAK,CAAEA,KAAhB,UAAwBA,KAAxB,EAAP,CACD,CARH,CA/BO,CAyCP,CACEH,SAAS,CAAE,wBAAwBI,KAAxB,CAA8B,GAA9B,CADb,CAEEf,KAAK,CAAE,mBAFT,CAGEgB,KAAK,CAAE,OAHT,CAIEH,KAAK,CAAE,GAJT,CAKEd,UAAU,CAAE,CAAC,IAAD,CALd,CAMEE,MANF,iBAMSgB,KANT,CAMwB,CACpB,MAAOA,CAAAA,KAAK,CAACZ,cAAN,CAAqB,OAArB,CAA8B,CACnCC,KAAK,CAAE,UAD4B,CAEnCC,QAAQ,CAAE,KAFyB,CAGnCC,qBAAqB,CAAE,CAHY,CAA9B,CAAP,CAKD,CAZH,CAzCO,CAuDP,CACEG,SAAS,CAAE,iBAAiBI,KAAjB,CAAuB,GAAvB,CADb,CAEEf,KAAK,CAAE,kBAFT,CAGEa,KAAK,CAAE,GAHT,CAIEG,KAAK,CAAE,OAJT,CAKEjB,UAAU,CAAE,CAAC,IAAD,CALd,CAvDO,CA8DP,CACEY,SAAS,CAAE,uBAAuBI,KAAvB,CAA6B,GAA7B,CADb,CAEEf,KAAK,CAAE,wBAFT,CAGEgB,KAAK,CAAE,OAHT,CAIEjB,UAAU,CAAE,CAAC,IAAD,CAJd,CAKEc,KAAK,CAAE,GALT,CA9DO,CALX,EADF,EADF,CAgFD","sourcesContent":["import { Descriptions, Table, Tooltip } from 'antd';\nimport { Payment, Post } from 'danielbonifacio-sdk';\n\ninterface PaymentPostsProps {\n  loading?: boolean;\n  posts: Payment.PostWithEarnings[];\n}\n\nexport default function PaymentPosts(props: PaymentPostsProps) {\n  return (\n    <>\n      <Table<Post.WithEarnings>\n        loading={props.loading}\n        dataSource={props.posts}\n        pagination={false}\n        rowKey={'id'}\n        columns={[\n          {\n            responsive: ['xs'],\n            title: 'Posts',\n            render(post: Post.WithEarnings) {\n              return (\n                <Descriptions column={1}>\n                  <Descriptions.Item label={'Título'}>\n                    {post.title}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Preço por palavra'}>\n                    {post.earnings.pricePerWord.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Palavras no post'}>\n                    {post.earnings.words}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ganho no post'}>\n                    {post.earnings.totalAmount.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'title',\n            title: 'Post',\n            ellipsis: true,\n            width: 300,\n            responsive: ['sm'],\n            render(value: string) {\n              return <Tooltip title={value}>{value}</Tooltip>;\n            },\n          },\n          {\n            dataIndex: 'earnings.pricePerWord'.split('.'),\n            title: 'Preço por palavra',\n            align: 'right',\n            width: 150,\n            responsive: ['sm'],\n            render(price: number) {\n              return price.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL',\n                maximumFractionDigits: 2,\n              });\n            },\n          },\n          {\n            dataIndex: 'earnings.words'.split('.'),\n            title: 'Palavras no post',\n            width: 150,\n            align: 'right',\n            responsive: ['sm'],\n          },\n          {\n            dataIndex: 'earnings.totalAmount'.split('.'),\n            title: 'Total ganho neste post',\n            align: 'right',\n            responsive: ['sm'],\n            width: 170,\n          },\n        ]}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}