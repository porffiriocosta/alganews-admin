{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\components\\\\CurrencyInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrencyInput(props) {\n  _s();\n\n  const convertValueToBrl = useCallback(value => {\n    return value.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL',\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2\n    });\n  }, []);\n  const [inputValue, setInputValue] = useState(typeof props.value === 'number' ? convertValueToBrl(props.value) : props.value);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: 'ant-input',\n    ...props,\n    value: inputValue,\n    onChange: e => {\n      const {\n        value\n      } = e.currentTarget;\n      const cents = value.replace(/[^(0-9)]/gi, '');\n      const reals = Number(cents) / 100;\n      setInputValue(convertValueToBrl(reals));\n      props.onChange && props.onChange(e, reals);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyInput, \"A5Fg39jWRXX5Pj7fd7RC5Z1Kius=\");\n\n_c = CurrencyInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyInput\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/components/CurrencyInput.tsx"],"names":["React","useCallback","useState","CurrencyInput","props","convertValueToBrl","value","toLocaleString","style","currency","maximumFractionDigits","minimumFractionDigits","inputValue","setInputValue","e","currentTarget","cents","replace","reals","Number","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAWA,eAAe,SAASC,aAAT,CACbC,KADa,EAEb;AAAA;;AACA,QAAMC,iBAAiB,GAAGJ,WAAW,CAAEK,KAAD,IAAmB;AACvD,WAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AACnCC,MAAAA,KAAK,EAAE,UAD4B;AAEnCC,MAAAA,QAAQ,EAAE,KAFyB;AAGnCC,MAAAA,qBAAqB,EAAE,CAHY;AAInCC,MAAAA,qBAAqB,EAAE;AAJY,KAA9B,CAAP;AAMD,GAPoC,EAOlC,EAPkC,CAArC;AASA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAC1C,OAAOE,KAAK,CAACE,KAAb,KAAuB,QAAvB,GACID,iBAAiB,CAACD,KAAK,CAACE,KAAP,CADrB,GAEIF,KAAK,CAACE,KAHgC,CAA5C;AAMA,sBACE;AACE,IAAA,SAAS,EAAE,WADb;AAAA,OAEMF,KAFN;AAGE,IAAA,KAAK,EAAEQ,UAHT;AAIE,IAAA,QAAQ,EAAGE,CAAD,IAAO;AACf,YAAM;AAAER,QAAAA;AAAF,UAAYQ,CAAC,CAACC,aAApB;AAEA,YAAMC,KAAK,GAAGV,KAAK,CAACW,OAAN,CAAc,YAAd,EAA4B,EAA5B,CAAd;AAEA,YAAMC,KAAK,GAAGC,MAAM,CAACH,KAAD,CAAN,GAAgB,GAA9B;AAEAH,MAAAA,aAAa,CAACR,iBAAiB,CAACa,KAAD,CAAlB,CAAb;AACAd,MAAAA,KAAK,CAACgB,QAAN,IAAkBhB,KAAK,CAACgB,QAAN,CAAeN,CAAf,EAAkBI,KAAlB,CAAlB;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnCuBf,a;;KAAAA,a","sourcesContent":["import React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react';\n\ntype CurrencyInputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'onChange'\n> & {\n  onChange: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    reals: number\n  ) => any;\n};\nexport default function CurrencyInput(\n  props: CurrencyInputProps\n) {\n  const convertValueToBrl = useCallback((value: number) => {\n    return value.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL',\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n  }, []);\n\n  const [inputValue, setInputValue] = useState(\n    typeof props.value === 'number'\n      ? convertValueToBrl(props.value)\n      : props.value\n  );\n\n  return (\n    <input\n      className={'ant-input'}\n      {...props}\n      value={inputValue}\n      onChange={(e) => {\n        const { value } = e.currentTarget;\n\n        const cents = value.replace(/[^(0-9)]/gi, '');\n\n        const reals = Number(cents) / 100;\n\n        setInputValue(convertValueToBrl(reals));\n        props.onChange && props.onChange(e, reals);\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}