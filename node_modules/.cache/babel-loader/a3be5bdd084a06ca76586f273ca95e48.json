{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\EntryForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Form, Input, DatePicker, Divider, Space, Button, Select, Skeleton } from 'antd';\nimport { CashFlowService } from 'danielbonifacio-sdk';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport moment from 'moment';\nimport { useForm } from 'antd/lib/form/Form';\nimport CurrencyInput from '../components/CurrencyInput';\nimport useEntriesCategories from '../../core/hooks/useEntriesCategories';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport Forbidden from '../components/Forbidden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EntryForm({\n  type,\n  onSuccess,\n  editingEntry\n}) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [form] = useForm();\n  const {\n    revenues,\n    expenses,\n    fetching,\n    fetchCategories\n  } = useEntriesCategories();\n  const {\n    createEntry,\n    fetching: fetchingEntries,\n    updateEntry\n  } = useCashFlow(type);\n  const [forbidden, setForbidden] = useState(false);\n  useEffect(() => {\n    fetchCategories().catch(err => {\n      var _err$data;\n\n      if ((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.status) === 403) {\n        setForbidden(true);\n        return;\n      }\n\n      throw err;\n    });\n  }, [fetchCategories]);\n  useEffect(() => {\n    if (editingEntry) {\n      setLoading(true);\n      CashFlowService.getExistingEntry(editingEntry).then(entry => ({ ...entry,\n        transactedOn: moment(entry.transactedOn)\n      })).then(form.setFieldsValue).finally(() => setLoading(false));\n    }\n  }, [editingEntry, form]);\n  const categories = useMemo(() => type === 'EXPENSE' ? expenses : revenues, [expenses, revenues, type]);\n  const handleFormSubmit = useCallback(async form => {\n    const newEntryDTO = { ...form,\n      transactedOn: form.transactedOn.format('YYYY-MM-DD'),\n      type\n    };\n    editingEntry ? await updateEntry(editingEntry, newEntryDTO) : await createEntry(newEntryDTO);\n    onSuccess();\n  }, [type, createEntry, onSuccess, updateEntry, editingEntry]);\n  if (forbidden) return /*#__PURE__*/_jsxDEV(Forbidden, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 25\n  }, this);\n  return loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      title: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      title: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(Form, {\n    autoComplete: 'off',\n    form: form,\n    layout: 'vertical',\n    onFinish: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: 'Descrição',\n          name: 'description',\n          rules: [{\n            required: true,\n            message: 'Campo obrigatório'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: 'Pagamento da AWS'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: 'Categoria',\n          name: ['category', 'id'],\n          rules: [{\n            required: true,\n            message: 'Campo obrigatório'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            loading: fetching,\n            placeholder: 'Selecione uma categoria',\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: 'Montante',\n          name: 'amount',\n          rules: [{\n            required: true,\n            message: 'Campo obrigatório'\n          }],\n          children: /*#__PURE__*/_jsxDEV(CurrencyInput, {\n            defaultValue: 'R$ 0,00',\n            onChange: (_, value) => form.setFieldsValue({\n              amount: value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: type === 'EXPENSE' ? 'Data da saída' : 'Data da entrada',\n          name: 'transactedOn',\n          rules: [{\n            required: true,\n            message: 'Campo obrigatório'\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            format: 'DD/MM/YYYY',\n            style: {\n              width: '100%'\n            },\n            disabledDate: date => {\n              return date.isAfter(moment());\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        marginTop: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: 'end',\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: fetchingEntries,\n          type: 'primary',\n          htmlType: 'submit',\n          children: [editingEntry ? 'Atualizar' : 'Cadastrar', ' ', type === 'EXPENSE' ? 'despesa' : 'receita']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EntryForm, \"23ZfX0G1Yos3cOUlOMJiyjx9WZU=\", false, function () {\n  return [useForm, useEntriesCategories, useCashFlow];\n});\n\n_c = EntryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryForm\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/EntryForm.tsx"],"names":["Col","Row","Form","Input","DatePicker","Divider","Space","Button","Select","Skeleton","CashFlowService","useState","useEffect","useMemo","useCallback","moment","useForm","CurrencyInput","useEntriesCategories","useCashFlow","Forbidden","EntryForm","type","onSuccess","editingEntry","loading","setLoading","form","revenues","expenses","fetching","fetchCategories","createEntry","fetchingEntries","updateEntry","forbidden","setForbidden","catch","err","data","status","getExistingEntry","then","entry","transactedOn","setFieldsValue","finally","categories","handleFormSubmit","newEntryDTO","format","required","message","map","category","id","name","_","value","amount","width","date","isAfter","marginTop"],"mappings":"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","sourcesContent":["import {\n  Col,\n  Row,\n  Form,\n  Input,\n  DatePicker,\n  Divider,\n  Space,\n  Button,\n  Select,\n  Skeleton,\n} from 'antd';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport moment, { Moment } from 'moment';\nimport { useForm } from 'antd/lib/form/Form';\n\nimport CurrencyInput from '../components/CurrencyInput';\nimport useEntriesCategories from '../../core/hooks/useEntriesCategories';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport Forbidden from '../components/Forbidden';\n\ntype EntryFormSubmit = Omit<CashFlow.EntryInput, 'transactedOn'> & {\n  transactedOn: Moment;\n};\n\ninterface EntryFormProps {\n  type: 'EXPENSE' | 'REVENUE';\n  onSuccess: () => any;\n  editingEntry?: number | undefined;\n}\n\nexport default function EntryForm({\n  type,\n  onSuccess,\n  editingEntry,\n}: EntryFormProps) {\n  const [loading, setLoading] = useState(false);\n\n  const [form] = useForm();\n  const { revenues, expenses, fetching, fetchCategories } =\n    useEntriesCategories();\n\n  const {\n    createEntry,\n    fetching: fetchingEntries,\n    updateEntry,\n  } = useCashFlow(type);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    fetchCategories().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchCategories]);\n\n  useEffect(() => {\n    if (editingEntry) {\n      setLoading(true);\n      CashFlowService.getExistingEntry(editingEntry)\n        .then((entry) => ({\n          ...entry,\n          transactedOn: moment(entry.transactedOn),\n        }))\n        .then(form.setFieldsValue)\n        .finally(() => setLoading(false));\n    }\n  }, [editingEntry, form]);\n\n  const categories = useMemo(\n    () => (type === 'EXPENSE' ? expenses : revenues),\n    [expenses, revenues, type]\n  );\n\n  const handleFormSubmit = useCallback(\n    async (form: EntryFormSubmit) => {\n      const newEntryDTO: CashFlow.EntryInput = {\n        ...form,\n        transactedOn: form.transactedOn.format('YYYY-MM-DD'),\n        type,\n      };\n\n      editingEntry\n        ? await updateEntry(editingEntry, newEntryDTO)\n        : await createEntry(newEntryDTO);\n      onSuccess();\n    },\n    [type, createEntry, onSuccess, updateEntry, editingEntry]\n  );\n\n  if (forbidden) return <Forbidden />;\n\n  return loading ? (\n    <>\n      <Skeleton />\n      <Skeleton title={false} />\n      <Skeleton title={false} />\n    </>\n  ) : (\n    <Form\n      autoComplete={'off'}\n      form={form}\n      layout={'vertical'}\n      onFinish={handleFormSubmit}\n    >\n      <Row gutter={16}>\n        <Col xs={24}>\n          <Form.Item\n            label={'Descrição'}\n            name={'description'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <Input placeholder={'Pagamento da AWS'} />\n          </Form.Item>\n        </Col>\n        <Col xs={24}>\n          <Form.Item\n            label={'Categoria'}\n            name={['category', 'id']}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <Select loading={fetching} placeholder={'Selecione uma categoria'}>\n              {categories.map((category) => (\n                <Select.Option key={category.id} value={category.id}>\n                  {category.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={'Montante'}\n            name={'amount'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <CurrencyInput\n              defaultValue={'R$ 0,00'}\n              onChange={(_, value) =>\n                form.setFieldsValue({\n                  amount: value,\n                })\n              }\n            />\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={type === 'EXPENSE' ? 'Data da saída' : 'Data da entrada'}\n            name={'transactedOn'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <DatePicker\n              format={'DD/MM/YYYY'}\n              style={{ width: '100%' }}\n              disabledDate={(date) => {\n                return date.isAfter(moment());\n              }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider style={{ marginTop: 0 }} />\n      <Row justify={'end'}>\n        <Space>\n          <Button>Cancelar</Button>\n          <Button\n            loading={fetchingEntries}\n            type={'primary'}\n            htmlType={'submit'}\n          >\n            {editingEntry ? 'Atualizar' : 'Cadastrar'}{' '}\n            {type === 'EXPENSE' ? 'despesa' : 'receita'}\n          </Button>\n        </Space>\n      </Row>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}