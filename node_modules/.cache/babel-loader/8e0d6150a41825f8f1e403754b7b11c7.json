{"ast":null,"code":"import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Area}from'@ant-design/charts';import{MetricService}from'danielbonifacio-sdk';import{ForbiddenError}from'danielbonifacio-sdk/dist/errors';import format from'date-fns/format';import parseISO from'date-fns/parseISO';import ptBR from'date-fns/esm/locale/pt-BR';import{useEffect}from'react';import{useState}from'react';import transformDataIntoAntdChart from'../../core/utils/transformDataIntoAntdChart';import Forbidden from'../components/Forbidden';import{jsx as _jsx}from\"react/jsx-runtime\";export default function CompanyMetrics(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),forbidden=_useState4[0],setForbidden=_useState4[1];useEffect(function(){MetricService.getMonthlyRevenuesExpenses().then(transformDataIntoAntdChart).then(setData).catch(function(err){if(err instanceof ForbiddenError){setForbidden(true);return;}throw err;});},[]);if(forbidden)return/*#__PURE__*/_jsx(Forbidden,{minHeight:256});var config={data:data,height:256,color:['#0099ff','#274060'],areaStyle:{fillOpacity:1},xField:'yearMonth',yField:'value',seriesField:'category',legend:{itemName:{formatter:function formatter(legend){return legend==='totalRevenues'?'Receitas':'Despesas';}}},tooltip:{title:function title(_title){return format(parseISO(_title),'MMMM yyyy',{locale:ptBR});},formatter:function formatter(data){return{name:data.category==='totalRevenues'?'Receitas':'Despesas',value:data.value.toLocaleString('pt-BR',{currency:'BRL',style:'currency',maximumFractionDigits:2})};}},yAxis:false,xAxis:{label:{formatter:function formatter(item){return format(parseISO(item),'MM/yyyy');}}},point:{size:5,shape:'circle'}};return/*#__PURE__*/_jsx(Area,_objectSpread({},config));}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/CompanyMetrics.tsx"],"names":["Area","MetricService","ForbiddenError","format","parseISO","ptBR","useEffect","useState","transformDataIntoAntdChart","Forbidden","CompanyMetrics","data","setData","forbidden","setForbidden","getMonthlyRevenuesExpenses","then","catch","err","config","height","color","areaStyle","fillOpacity","xField","yField","seriesField","legend","itemName","formatter","tooltip","title","locale","name","category","value","toLocaleString","currency","style","maximumFractionDigits","yAxis","xAxis","label","item","point","size","shape"],"mappings":"2SAAA,OAASA,IAAT,KAAiC,oBAAjC,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,OAASC,cAAT,KAA+B,iCAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,2BAAjB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,0BAAP,KAAuC,6CAAvC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,C,2CAEA,cAAe,SAASC,CAAAA,cAAT,EAA0B,eACfH,QAAQ,CAM9B,EAN8B,CADO,wCAChCI,IADgC,eAC1BC,OAD0B,8BASLL,QAAQ,CAAC,KAAD,CATH,yCAShCM,SATgC,eASrBC,YATqB,eAWvCR,SAAS,CAAC,UAAM,CACdL,aAAa,CAACc,0BAAd,GACGC,IADH,CACQR,0BADR,EAEGQ,IAFH,CAEQJ,OAFR,EAGGK,KAHH,CAGS,SAACC,GAAD,CAAS,CACd,GAAIA,GAAG,WAAYhB,CAAAA,cAAnB,CAAmC,CACjCY,YAAY,CAAC,IAAD,CAAZ,CACA,OACD,CACD,KAAMI,CAAAA,GAAN,CACD,CATH,EAUD,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAIL,SAAJ,CAAe,mBAAO,KAAC,SAAD,EAAW,SAAS,CAAE,GAAtB,EAAP,CAEf,GAAMM,CAAAA,MAAkB,CAAG,CACzBR,IAAI,CAAJA,IADyB,CAEzBS,MAAM,CAAE,GAFiB,CAGzBC,KAAK,CAAE,CAAC,SAAD,CAAY,SAAZ,CAHkB,CAIzBC,SAAS,CAAE,CAAEC,WAAW,CAAE,CAAf,CAJc,CAKzBC,MAAM,CAAE,WALiB,CAMzBC,MAAM,CAAE,OANiB,CAOzBC,WAAW,CAAE,UAPY,CAQzBC,MAAM,CAAE,CACNC,QAAQ,CAAE,CACRC,SADQ,oBACEF,MADF,CACU,CAChB,MAAOA,CAAAA,MAAM,GAAK,eAAX,CAA6B,UAA7B,CAA0C,UAAjD,CACD,CAHO,CADJ,CARiB,CAezBG,OAAO,CAAE,CACPC,KADO,gBACDA,MADC,CACM,CACX,MAAO5B,CAAAA,MAAM,CAACC,QAAQ,CAAC2B,MAAD,CAAT,CAAkB,WAAlB,CAA+B,CAC1CC,MAAM,CAAE3B,IADkC,CAA/B,CAAb,CAGD,CALM,CAMPwB,SANO,oBAMGlB,IANH,CAMS,CACd,MAAO,CACLsB,IAAI,CAAEtB,IAAI,CAACuB,QAAL,GAAkB,eAAlB,CAAoC,UAApC,CAAiD,UADlD,CAELC,KAAK,CAAGxB,IAAI,CAACwB,KAAN,CAAuBC,cAAvB,CAAsC,OAAtC,CAA+C,CACpDC,QAAQ,CAAE,KAD0C,CAEpDC,KAAK,CAAE,UAF6C,CAGpDC,qBAAqB,CAAE,CAH6B,CAA/C,CAFF,CAAP,CAQD,CAfM,CAfgB,CAgCzBC,KAAK,CAAE,KAhCkB,CAiCzBC,KAAK,CAAE,CACLC,KAAK,CAAE,CACLb,SADK,oBACKc,IADL,CACW,CACd,MAAOxC,CAAAA,MAAM,CAACC,QAAQ,CAACuC,IAAD,CAAT,CAAiB,SAAjB,CAAb,CACD,CAHI,CADF,CAjCkB,CAwCzBC,KAAK,CAAE,CACLC,IAAI,CAAE,CADD,CAELC,KAAK,CAAE,QAFF,CAxCkB,CAA3B,CA6CA,mBAAO,KAAC,IAAD,kBAAU3B,MAAV,EAAP,CACD","sourcesContent":["import { Area, AreaConfig } from '@ant-design/charts';\nimport { MetricService } from 'danielbonifacio-sdk';\nimport { ForbiddenError } from 'danielbonifacio-sdk/dist/errors';\nimport format from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO';\nimport ptBR from 'date-fns/esm/locale/pt-BR';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport transformDataIntoAntdChart from '../../core/utils/transformDataIntoAntdChart';\nimport Forbidden from '../components/Forbidden';\n\nexport default function CompanyMetrics() {\n  const [data, setData] = useState<\n    {\n      yearMonth: string;\n      value: number;\n      category: 'totalRevenues' | 'totalExpenses';\n    }[]\n  >([]);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    MetricService.getMonthlyRevenuesExpenses()\n      .then(transformDataIntoAntdChart)\n      .then(setData)\n      .catch((err) => {\n        if (err instanceof ForbiddenError) {\n          setForbidden(true);\n          return;\n        }\n        throw err;\n      });\n  }, []);\n\n  if (forbidden) return <Forbidden minHeight={256} />;\n\n  const config: AreaConfig = {\n    data,\n    height: 256,\n    color: ['#0099ff', '#274060'],\n    areaStyle: { fillOpacity: 1 },\n    xField: 'yearMonth',\n    yField: 'value',\n    seriesField: 'category',\n    legend: {\n      itemName: {\n        formatter(legend) {\n          return legend === 'totalRevenues' ? 'Receitas' : 'Despesas';\n        },\n      },\n    },\n    tooltip: {\n      title(title) {\n        return format(parseISO(title), 'MMMM yyyy', {\n          locale: ptBR,\n        });\n      },\n      formatter(data) {\n        return {\n          name: data.category === 'totalRevenues' ? 'Receitas' : 'Despesas',\n          value: (data.value as number).toLocaleString('pt-BR', {\n            currency: 'BRL',\n            style: 'currency',\n            maximumFractionDigits: 2,\n          }),\n        };\n      },\n    },\n    yAxis: false,\n    xAxis: {\n      label: {\n        formatter(item) {\n          return format(parseISO(item), 'MM/yyyy');\n        },\n      },\n    },\n    point: {\n      size: 5,\n      shape: 'circle',\n    },\n  };\n  return <Area {...config} />;\n}\n"]},"metadata":{},"sourceType":"module"}