{"ast":null,"code":"import{Descriptions,Divider,Skeleton,Space,Tag,Typography}from'antd';import useBreakpoint from'antd/lib/grid/hooks/useBreakpoint';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function PaymentHeader(props){var _props$postsEarnings,_props$totalEarnings;var _useBreakpoint=useBreakpoint(),xs=_useBreakpoint.xs;if(props.loading)return/*#__PURE__*/_jsx(Skeleton,{});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography.Title,{children:\"Pagamento\"}),/*#__PURE__*/_jsx(Typography.Text,{children:\"A base do pagamento \\xE9 calculada pela quantidade de palavras escritas\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Descriptions,{column:xs?1:2,size:xs?'small':'default',children:[/*#__PURE__*/_jsx(Descriptions.Item,{label:'Editor',children:props.editorName}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Período',children:/*#__PURE__*/_jsxs(Space,{size:8,children:[/*#__PURE__*/_jsx(Tag,{style:{margin:0},children:props.periodStart}),/*#__PURE__*/_jsx(\"span\",{children:'à'}),/*#__PURE__*/_jsx(Tag,{children:props.periodEnd})]})}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Ganhos por posts',children:/*#__PURE__*/_jsx(Tag,{children:(_props$postsEarnings=props.postsEarnings)===null||_props$postsEarnings===void 0?void 0:_props$postsEarnings.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2})})}),/*#__PURE__*/_jsx(Descriptions.Item,{label:'Total',children:/*#__PURE__*/_jsx(Tag,{children:(_props$totalEarnings=props.totalEarnings)===null||_props$totalEarnings===void 0?void 0:_props$totalEarnings.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2})})})]})]});}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/PaymentHeader.tsx"],"names":["Descriptions","Divider","Skeleton","Space","Tag","Typography","useBreakpoint","PaymentHeader","props","xs","loading","editorName","margin","periodStart","periodEnd","postsEarnings","toLocaleString","style","currency","maximumFractionDigits","totalEarnings"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,OAAvB,CAAgCC,QAAhC,CAA0CC,KAA1C,CAAiDC,GAAjD,CAAsDC,UAAtD,KAAwE,MAAxE,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,C,6IAYA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAAkD,kEAChDF,aAAa,EADmC,CACvDG,EADuD,gBACvDA,EADuD,CAE/D,GAAID,KAAK,CAACE,OAAV,CAAmB,mBAAO,KAAC,QAAD,IAAP,CACnB,mBACE,wCACE,KAAC,UAAD,CAAY,KAAZ,wBADF,cAEE,KAAC,UAAD,CAAY,IAAZ,sFAFF,cAKE,KAAC,OAAD,IALF,cAME,MAAC,YAAD,EAAc,MAAM,CAAED,EAAE,CAAG,CAAH,CAAO,CAA/B,CAAkC,IAAI,CAAEA,EAAE,CAAG,OAAH,CAAa,SAAvD,wBACE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,QAA1B,UACGD,KAAK,CAACG,UADT,EADF,cAIE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,SAA1B,uBACE,MAAC,KAAD,EAAO,IAAI,CAAE,CAAb,wBACE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,CAAV,CAAZ,UAA4BJ,KAAK,CAACK,WAAlC,EADF,cAEE,sBAAO,GAAP,EAFF,cAGE,KAAC,GAAD,WAAML,KAAK,CAACM,SAAZ,EAHF,GADF,EAJF,cAWE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,kBAA1B,uBACE,KAAC,GAAD,iCACGN,KAAK,CAACO,aADT,+CACG,qBAAqBC,cAArB,CAAoC,OAApC,CAA6C,CAC5CC,KAAK,CAAE,UADqC,CAE5CC,QAAQ,CAAE,KAFkC,CAG5CC,qBAAqB,CAAE,CAHqB,CAA7C,CADH,EADF,EAXF,cAoBE,KAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAE,OAA1B,uBACE,KAAC,GAAD,iCACGX,KAAK,CAACY,aADT,+CACG,qBAAqBJ,cAArB,CAAoC,OAApC,CAA6C,CAC5CC,KAAK,CAAE,UADqC,CAE5CC,QAAQ,CAAE,KAFkC,CAG5CC,qBAAqB,CAAE,CAHqB,CAA7C,CADH,EADF,EApBF,GANF,GADF,CAuCD","sourcesContent":["import { Descriptions, Divider, Skeleton, Space, Tag, Typography } from 'antd';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\n\ninterface PaymentHeaderProps {\n  loading?: boolean;\n  editorId?: number;\n  editorName?: string;\n  periodStart?: string;\n  periodEnd?: string;\n  postsEarnings?: number;\n  totalEarnings?: number;\n}\n\nexport default function PaymentHeader(props: PaymentHeaderProps) {\n  const { xs } = useBreakpoint();\n  if (props.loading) return <Skeleton />;\n  return (\n    <>\n      <Typography.Title>Pagamento</Typography.Title>\n      <Typography.Text>\n        A base do pagamento é calculada pela quantidade de palavras escritas\n      </Typography.Text>\n      <Divider />\n      <Descriptions column={xs ? 1 : 2} size={xs ? 'small' : 'default'}>\n        <Descriptions.Item label={'Editor'}>\n          {props.editorName}\n        </Descriptions.Item>\n        <Descriptions.Item label={'Período'}>\n          <Space size={8}>\n            <Tag style={{ margin: 0 }}>{props.periodStart}</Tag>\n            <span>{'à'}</span>\n            <Tag>{props.periodEnd}</Tag>\n          </Space>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Ganhos por posts'}>\n          <Tag>\n            {props.postsEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Total'}>\n          <Tag>\n            {props.totalEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}