{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { UserService } from 'danielbonifacio-sdk';\nimport { ResourceNotFoundError } from 'danielbonifacio-sdk/dist/errors';\nimport { useCallback, useState } from 'react';\nexport default function useUser() {\n  _s();\n\n  const [user, setUser] = useState();\n  const [notFound, setNotFound] = useState(false);\n  const fetchUser = useCallback(async userId => {\n    try {\n      await UserService.getDetailedUser(userId).then(setUser);\n    } catch (error) {\n      if (error instanceof ResourceNotFoundError) {\n        setNotFound(true);\n      } else {\n        throw error;\n      }\n    }\n  }, []);\n  const toggleUserStatus = useCallback(user => {\n    return user.active ? UserService.deactivateExistingUser(user.id) : UserService.activateExistingUser(user.id);\n  }, []);\n  return {\n    user,\n    fetchUser,\n    notFound,\n    toggleUserStatus\n  };\n}\n\n_s(useUser, \"TF1ZdFumEIEIUHBuQj3nT0MBz1k=\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/hooks/useUser.ts"],"names":["UserService","ResourceNotFoundError","useCallback","useState","useUser","user","setUser","notFound","setNotFound","fetchUser","userId","getDetailedUser","then","error","toggleUserStatus","active","deactivateExistingUser","id","activateExistingUser"],"mappings":";;AAAA,SAAeA,WAAf,QAAkC,qBAAlC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMM,SAAS,GAAGP,WAAW,CAAC,MAAOQ,MAAP,IAA0B;AACtD,QAAI;AACF,YAAMV,WAAW,CAACW,eAAZ,CAA4BD,MAA5B,EAAoCE,IAApC,CACJN,OADI,CAAN;AAGD,KAJD,CAIE,OAAOO,KAAP,EAAc;AACd,UAAIA,KAAK,YAAYZ,qBAArB,EAA4C;AAC1CO,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACL,cAAMK,KAAN;AACD;AACF;AACF,GAZ4B,EAY1B,EAZ0B,CAA7B;AAcA,QAAMC,gBAAgB,GAAGZ,WAAW,CACjCG,IAAD,IAAwC;AACtC,WAAOA,IAAI,CAACU,MAAL,GACHf,WAAW,CAACgB,sBAAZ,CAAmCX,IAAI,CAACY,EAAxC,CADG,GAEHjB,WAAW,CAACkB,oBAAZ,CAAiCb,IAAI,CAACY,EAAtC,CAFJ;AAGD,GALiC,EAMlC,EANkC,CAApC;AASA,SAAO;AACLZ,IAAAA,IADK;AAELI,IAAAA,SAFK;AAGLF,IAAAA,QAHK;AAILO,IAAAA;AAJK,GAAP;AAMD;;GAjCuBV,O","sourcesContent":["import { User, UserService } from 'danielbonifacio-sdk';\nimport { ResourceNotFoundError } from 'danielbonifacio-sdk/dist/errors';\nimport { useCallback, useState } from 'react';\n\nexport default function useUser() {\n  const [user, setUser] = useState<User.Detailed>();\n  const [notFound, setNotFound] = useState(false);\n\n  const fetchUser = useCallback(async (userId: number) => {\n    try {\n      await UserService.getDetailedUser(userId).then(\n        setUser\n      );\n    } catch (error) {\n      if (error instanceof ResourceNotFoundError) {\n        setNotFound(true);\n      } else {\n        throw error;\n      }\n    }\n  }, []);\n\n  const toggleUserStatus = useCallback(\n    (user: User.Summary | User.Detailed) => {\n      return user.active\n        ? UserService.deactivateExistingUser(user.id)\n        : UserService.activateExistingUser(user.id);\n    },\n    []\n  );\n\n  return {\n    user,\n    fetchUser,\n    notFound,\n    toggleUserStatus,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}