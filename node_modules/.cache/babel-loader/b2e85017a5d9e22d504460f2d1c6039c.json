{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\PaymentBonuses.tsx\";\nimport { Descriptions, Skeleton, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentBonuses(props) {\n  var _props$bonuses;\n\n  if (props.loading) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 2,\n      children: \"B\\xF4nus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n      bordered: true,\n      size: 'small',\n      column: 1,\n      children: (_props$bonuses = props.bonuses) === null || _props$bonuses === void 0 ? void 0 : _props$bonuses.map((bonus, index) => /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: bonus.title,\n        children: bonus.amount.toLocaleString('pt-br', {\n          style: 'currency',\n          currency: 'BRL',\n          maximumFractionDigits: 2\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = PaymentBonuses;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentBonuses\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/PaymentBonuses.tsx"],"names":["Descriptions","Skeleton","Typography","PaymentBonuses","props","loading","bonuses","map","bonus","index","title","amount","toLocaleString","style","currency","maximumFractionDigits"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAmD,MAAnD;;;AAQA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAAA;;AACjE,MAAIA,KAAK,CAACC,OAAV,EAAmB,oBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,sBACE;AAAA,4BACE,QAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,QAAQ,MAAtB;AAAuB,MAAA,IAAI,EAAE,OAA7B;AAAsC,MAAA,MAAM,EAAE,CAA9C;AAAA,kCACGD,KAAK,CAACE,OADT,mDACG,eAAeC,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,kBAClB,QAAC,YAAD,CAAc,IAAd;AAA+B,QAAA,KAAK,EAAED,KAAK,CAACE,KAA5C;AAAA,kBACGF,KAAK,CAACG,MAAN,CAAaC,cAAb,CAA4B,OAA5B,EAAqC;AACpCC,UAAAA,KAAK,EAAE,UAD6B;AAEpCC,UAAAA,QAAQ,EAAE,KAF0B;AAGpCC,UAAAA,qBAAqB,EAAE;AAHa,SAArC;AADH,SAAwBN,KAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD;KAlBuBN,c","sourcesContent":["import { Descriptions, Skeleton, Typography } from 'antd';\nimport { Payment } from 'danielbonifacio-sdk';\n\ninterface PaymentBonusesProps {\n  loading?: boolean;\n  bonuses?: Payment.Detailed['bonuses'];\n}\n\nexport default function PaymentBonuses(props: PaymentBonusesProps) {\n  if (props.loading) return <Skeleton />;\n  return (\n    <>\n      <Typography.Title level={2}>BÃ´nus</Typography.Title>\n      <Descriptions bordered size={'small'} column={1}>\n        {props.bonuses?.map((bonus, index) => (\n          <Descriptions.Item key={index} label={bonus.title}>\n            {bonus.amount.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Descriptions.Item>\n        ))}\n      </Descriptions>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}