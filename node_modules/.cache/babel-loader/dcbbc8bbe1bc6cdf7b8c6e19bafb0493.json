{"ast":null,"code":"import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useCallback}from'react';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export default function CurrencyInput(props){var convertValueToBrl=useCallback(function(value){return value.toLocaleString('pt-br',{style:'currency',currency:'BRL',maximumFractionDigits:2,minimumFractionDigits:2});},[]);var _useState=useState(typeof props.value==='number'?convertValueToBrl(props.value):props.value),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];return/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({className:'ant-input'},props),{},{value:inputValue,onChange:function onChange(e){var value=e.currentTarget.value;var cents=value.replace(/[^(0-9)]/gi,'');var reals=Number(cents)/100;setInputValue(convertValueToBrl(reals));props.onChange&&props.onChange(e,reals);}}));}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/components/CurrencyInput.tsx"],"names":["React","useCallback","useState","CurrencyInput","props","convertValueToBrl","value","toLocaleString","style","currency","maximumFractionDigits","minimumFractionDigits","inputValue","setInputValue","e","currentTarget","cents","replace","reals","Number","onChange"],"mappings":"2SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,QAAT,KAAyB,OAAzB,C,2CAWA,cAAe,SAASC,CAAAA,aAAT,CACbC,KADa,CAEb,CACA,GAAMC,CAAAA,iBAAiB,CAAGJ,WAAW,CAAC,SAACK,KAAD,CAAmB,CACvD,MAAOA,CAAAA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAA8B,CACnCC,KAAK,CAAE,UAD4B,CAEnCC,QAAQ,CAAE,KAFyB,CAGnCC,qBAAqB,CAAE,CAHY,CAInCC,qBAAqB,CAAE,CAJY,CAA9B,CAAP,CAMD,CAPoC,CAOlC,EAPkC,CAArC,CADA,cAUoCT,QAAQ,CAC1C,MAAOE,CAAAA,KAAK,CAACE,KAAb,GAAuB,QAAvB,CACID,iBAAiB,CAACD,KAAK,CAACE,KAAP,CADrB,CAEIF,KAAK,CAACE,KAHgC,CAV5C,wCAUOM,UAVP,eAUmBC,aAVnB,eAgBA,mBACE,0CACE,SAAS,CAAE,WADb,EAEMT,KAFN,MAGE,KAAK,CAAEQ,UAHT,CAIE,QAAQ,CAAE,kBAACE,CAAD,CAAO,IACPR,CAAAA,KADO,CACGQ,CAAC,CAACC,aADL,CACPT,KADO,CAGf,GAAMU,CAAAA,KAAK,CAAGV,KAAK,CAACW,OAAN,CAAc,YAAd,CAA4B,EAA5B,CAAd,CAEA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACH,KAAD,CAAN,CAAgB,GAA9B,CAEAH,aAAa,CAACR,iBAAiB,CAACa,KAAD,CAAlB,CAAb,CACAd,KAAK,CAACgB,QAAN,EAAkBhB,KAAK,CAACgB,QAAN,CAAeN,CAAf,CAAkBI,KAAlB,CAAlB,CACD,CAbH,GADF,CAiBD","sourcesContent":["import React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react';\n\ntype CurrencyInputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'onChange'\n> & {\n  onChange: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    reals: number\n  ) => any;\n};\nexport default function CurrencyInput(\n  props: CurrencyInputProps\n) {\n  const convertValueToBrl = useCallback((value: number) => {\n    return value.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL',\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n  }, []);\n\n  const [inputValue, setInputValue] = useState(\n    typeof props.value === 'number'\n      ? convertValueToBrl(props.value)\n      : props.value\n  );\n\n  return (\n    <input\n      className={'ant-input'}\n      {...props}\n      value={inputValue}\n      onChange={(e) => {\n        const { value } = e.currentTarget;\n\n        const cents = value.replace(/[^(0-9)]/gi, '');\n\n        const reals = Number(cents) / 100;\n\n        setInputValue(convertValueToBrl(reals));\n        props.onChange && props.onChange(e, reals);\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}