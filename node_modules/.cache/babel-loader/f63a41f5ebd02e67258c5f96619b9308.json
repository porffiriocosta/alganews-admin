{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\EntryCRUD.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Divider, notification, Row, Space, Tooltip, Typography } from 'antd';\nimport { InfoCircleFilled, TagOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EntriesList from '../features/EntriesList';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport EntryCategoryManager from '../features/EntryCategoryManager';\nimport EntryForm from '../features/EntryForm';\nimport EntryDetails from '../features/EntryDetails';\nimport moment from 'moment';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nexport default function EntryCRUD({\n  type\n}) {\n  _s();\n\n  const {\n    selected,\n    removeEntries,\n    query\n  } = useCashFlow(type);\n  const {\n    xs\n  } = useBreakpoint();\n  const [editingEntry, setEditingEntry] = useState(undefined);\n  const [detailedEntry, setDetailedEntry] = useState(undefined);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const openCategoryModal = useCallback(() => setShowCategoryModal(true), []);\n  const closeCategoryModal = useCallback(() => setShowCategoryModal(false), []);\n  const openFormModal = useCallback(() => setShowFormModal(true), []);\n  const closeFormModal = useCallback(() => setShowFormModal(false), []);\n  const openDetailsModal = useCallback(() => setShowDetailsModal(true), []);\n  const closeDetailsModal = useCallback(() => setShowDetailsModal(false), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      closeIcon: null,\n      visible: showCategoryModal,\n      onCancel: closeCategoryModal,\n      footer: null,\n      title: 'Gerenciar categorias',\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(EntryCategoryManager, {\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeIcon: null,\n      visible: showFormModal,\n      onCancel: () => {\n        closeFormModal();\n        setEditingEntry(undefined);\n      },\n      footer: null,\n      title: type === 'EXPENSE' ? 'Cadastrar despesa' : 'Cadastrar receita',\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(EntryForm, {\n        type: type,\n        editingEntry: editingEntry,\n        onSuccess: () => {\n          closeFormModal();\n          notification.success({\n            message: type === 'EXPENSE' ? 'Despesa cadastrada com sucesso' : 'Receita cadastrada com sucesso'\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeIcon: null,\n      visible: showDetailsModal,\n      onCancel: () => {\n        closeDetailsModal();\n      },\n      footer: null,\n      title: 'Detalhes da despesa',\n      destroyOnClose: true,\n      children: detailedEntry && /*#__PURE__*/_jsxDEV(EntryDetails, {\n        entryId: detailedEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: 'space-between',\n      style: {\n        marginBottom: 16,\n        flexDirection: xs ? 'column-reverse' : 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        style: { ...(xs && {\n            marginTop: 16\n          })\n        },\n        children: /*#__PURE__*/_jsxDEV(DoubleConfirm, {\n          popConfirmTitle: `Remover ${selected.length > 1 ? type === 'EXPENSE' ? 'despesas selecionadas?' : 'receitas selecionadas?' : type === 'EXPENSE' ? 'despesa selecionada?' : 'receita selecionada?'}`,\n          modalTitle: type === 'EXPENSE' ? 'Remover despesas' : 'Remover receitas',\n          modalContent: type === 'EXPENSE' ? 'Remover uma ou mais despesas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.' : 'Remover uma ou mais receitas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.',\n          onConfirm: async () => {\n            await removeEntries(selected);\n          },\n          disabled: !selected.length,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            danger: xs,\n            type: 'primary',\n            disabled: !selected.length,\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: 'primary',\n          icon: /*#__PURE__*/_jsxDEV(TagOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this),\n          onClick: openCategoryModal,\n          children: \"Categorias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: 'primary',\n          icon: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this),\n          onClick: openFormModal,\n          children: [\"Adicionar \", type === 'EXPENSE' ? 'despesa' : 'receita']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      direction: 'vertical',\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        children: [\"Recuperando \", type === 'EXPENSE' ? 'despesas' : 'receitas', \" do m\\xEAs de\", ' ', moment(query.yearMonth).format('MMMM \\\\d\\\\e YYYY')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"\\xC9 poss\\xEDvel filtrar \", type === 'EXPENSE' ? 'despesas' : 'receitas', ' ', \"por m\\xEAs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: 'right',\n          title: 'Use a coluna Data para filtrar',\n          children: /*#__PURE__*/_jsxDEV(InfoCircleFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntriesList, {\n      type: type,\n      onEdit: id => {\n        setEditingEntry(id);\n        openFormModal();\n      },\n      onDetail: id => {\n        setDetailedEntry(id);\n        openDetailsModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EntryCRUD, \"J733A8UHxUvydG6RoNsXPA95fhM=\", false, function () {\n  return [useCashFlow, useBreakpoint];\n});\n\n_c = EntryCRUD;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryCRUD\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/EntryCRUD.tsx"],"names":["Button","Divider","notification","Row","Space","Tooltip","Typography","InfoCircleFilled","TagOutlined","PlusCircleOutlined","EntriesList","useCashFlow","DoubleConfirm","Modal","useState","useCallback","EntryCategoryManager","EntryForm","EntryDetails","moment","useBreakpoint","Title","Text","EntryCRUD","type","selected","removeEntries","query","xs","editingEntry","setEditingEntry","undefined","detailedEntry","setDetailedEntry","showCategoryModal","setShowCategoryModal","showFormModal","setShowFormModal","showDetailsModal","setShowDetailsModal","openCategoryModal","closeCategoryModal","openFormModal","closeFormModal","openDetailsModal","closeDetailsModal","success","message","marginBottom","flexDirection","marginTop","length","yearMonth","format","id"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Divider,\n  notification,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport {\n  InfoCircleFilled,\n  TagOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport EntriesList from '../features/EntriesList';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport EntryCategoryManager from '../features/EntryCategoryManager';\nimport EntryForm from '../features/EntryForm';\nimport EntryDetails from '../features/EntryDetails';\nimport moment from 'moment';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nconst { Title, Text } = Typography;\n\ninterface EntryCRUDProps {\n  type: 'EXPENSE' | 'REVENUE';\n}\n\nexport default function EntryCRUD({ type }: EntryCRUDProps) {\n  const { selected, removeEntries, query } = useCashFlow(type);\n  const { xs } = useBreakpoint();\n\n  const [editingEntry, setEditingEntry] = useState<number | undefined>(\n    undefined\n  );\n\n  const [detailedEntry, setDetailedEntry] = useState<number | undefined>(\n    undefined\n  );\n\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n\n  const openCategoryModal = useCallback(() => setShowCategoryModal(true), []);\n  const closeCategoryModal = useCallback(() => setShowCategoryModal(false), []);\n\n  const openFormModal = useCallback(() => setShowFormModal(true), []);\n  const closeFormModal = useCallback(() => setShowFormModal(false), []);\n\n  const openDetailsModal = useCallback(() => setShowDetailsModal(true), []);\n  const closeDetailsModal = useCallback(() => setShowDetailsModal(false), []);\n\n  return (\n    <>\n      <Modal\n        closeIcon={null}\n        visible={showCategoryModal}\n        onCancel={closeCategoryModal}\n        footer={null}\n        title={'Gerenciar categorias'}\n        destroyOnClose\n      >\n        <EntryCategoryManager type={type} />\n      </Modal>\n      <Modal\n        closeIcon={null}\n        visible={showFormModal}\n        onCancel={() => {\n          closeFormModal();\n          setEditingEntry(undefined);\n        }}\n        footer={null}\n        title={type === 'EXPENSE' ? 'Cadastrar despesa' : 'Cadastrar receita'}\n        destroyOnClose\n      >\n        <EntryForm\n          type={type}\n          editingEntry={editingEntry}\n          onSuccess={() => {\n            closeFormModal();\n            notification.success({\n              message:\n                type === 'EXPENSE'\n                  ? 'Despesa cadastrada com sucesso'\n                  : 'Receita cadastrada com sucesso',\n            });\n          }}\n        />\n      </Modal>\n      <Modal\n        closeIcon={null}\n        visible={showDetailsModal}\n        onCancel={() => {\n          closeDetailsModal();\n        }}\n        footer={null}\n        title={'Detalhes da despesa'}\n        destroyOnClose\n      >\n        {detailedEntry && <EntryDetails entryId={detailedEntry} />}\n      </Modal>\n      <Row\n        justify={'space-between'}\n        style={{\n          marginBottom: 16,\n          flexDirection: xs ? 'column-reverse' : 'row',\n        }}\n      >\n        <Space style={{ ...(xs && { marginTop: 16 }) }}>\n          <DoubleConfirm\n            popConfirmTitle={`Remover ${\n              selected.length > 1\n                ? type === 'EXPENSE'\n                  ? 'despesas selecionadas?'\n                  : 'receitas selecionadas?'\n                : type === 'EXPENSE'\n                ? 'despesa selecionada?'\n                : 'receita selecionada?'\n            }`}\n            modalTitle={\n              type === 'EXPENSE' ? 'Remover despesas' : 'Remover receitas'\n            }\n            modalContent={\n              type === 'EXPENSE'\n                ? 'Remover uma ou mais despesas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.'\n                : 'Remover uma ou mais receitas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.'\n            }\n            onConfirm={async () => {\n              await removeEntries(selected as number[]);\n            }}\n            disabled={!selected.length}\n          >\n            <Button danger={xs} type={'primary'} disabled={!selected.length}>\n              Remover\n            </Button>\n          </DoubleConfirm>\n        </Space>\n        <Space>\n          <Button\n            type={'primary'}\n            icon={<TagOutlined />}\n            onClick={openCategoryModal}\n          >\n            Categorias\n          </Button>\n          <Button\n            type={'primary'}\n            icon={<PlusCircleOutlined />}\n            onClick={openFormModal}\n          >\n            Adicionar {type === 'EXPENSE' ? 'despesa' : 'receita'}\n          </Button>\n        </Space>\n      </Row>\n      <Space direction={'vertical'}>\n        <Title level={3}>\n          Recuperando {type === 'EXPENSE' ? 'despesas' : 'receitas'} do mês de{' '}\n          {moment(query.yearMonth).format('MMMM \\\\d\\\\e YYYY')}\n        </Title>\n        <Space>\n          <Text>\n            É possível filtrar {type === 'EXPENSE' ? 'despesas' : 'receitas'}{' '}\n            por mês\n          </Text>\n          <Tooltip placement={'right'} title={'Use a coluna Data para filtrar'}>\n            <InfoCircleFilled />\n          </Tooltip>\n        </Space>\n      </Space>\n\n      <Divider />\n\n      <EntriesList\n        type={type}\n        onEdit={(id) => {\n          setEditingEntry(id);\n          openFormModal();\n        }}\n        onDetail={(id) => {\n          setDetailedEntry(id);\n          openDetailsModal();\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}