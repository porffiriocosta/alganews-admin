{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\views\\\\UserDetails.view.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Col, Row, Skeleton, Space, Typography, Progress, Descriptions, Divider, Popconfirm, Table, Switch, Tooltip } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport confirm from 'antd/lib/modal/confirm';\nimport { useEffect } from 'react';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport useUser from '../../core/hooks/useUser';\nimport { WarningFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport usePosts from '../../core/hooks/usePosts';\nimport NotFoundError from '../components/NotFoundError';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport { useState } from 'react';\nimport formatPhone from '../../core/utils/formatPhone';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserDetailsView() {\n  _s();\n\n  var _user$skills, _user$skills2;\n\n  usePageTitle('Detalhes do usuário');\n  const params = useParams();\n  const [page, setPage] = useState(0);\n  const {\n    lg\n  } = useBreakpoint();\n  const {\n    user,\n    fetchUser,\n    notFound,\n    toggleUserStatus\n  } = useUser();\n  useBreadcrumb(`Usuários/${(user === null || user === void 0 ? void 0 : user.name) || 'Detalhes'}`);\n  const {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle\n  } = usePosts();\n  useEffect(() => {\n    if (!isNaN(Number(params.id))) fetchUser(Number(params.id));\n  }, [fetchUser, params.id]);\n  useEffect(() => {\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'EDITOR') fetchUserPosts(user.id, page);\n  }, [fetchUserPosts, user, page]);\n  if (isNaN(Number(params.id))) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/usuarios'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 40\n  }, this);\n  if (notFound) return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(NotFoundError, {\n      title: 'Usuário não encontrado',\n      actionDestination: '/usuarios',\n      actionTitle: 'Voltar para lista de usuários'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: 24,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: 'center',\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          size: 120,\n          src: user.avatarUrls.small\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      lg: 20,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          width: '100%'\n        },\n        direction: 'vertical',\n        align: lg ? 'start' : 'center',\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 2,\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography.Paragraph, {\n          style: {\n            textAlign: lg ? 'left' : 'center'\n          },\n          ellipsis: {\n            rows: 2\n          },\n          children: user.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/usuarios/edicao/${user.id}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: 'primary',\n              children: \"Editar perfil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            disabled: user.active && !user.canBeDeactivated || !user.active && !user.canBeActivated,\n            title: user.active ? `Desabilitar ${user.name}` : `Habilitar ${user.name}`,\n            onConfirm: () => {\n              confirm({\n                icon: /*#__PURE__*/_jsxDEV(WarningFilled, {\n                  style: {\n                    color: '#09f'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this),\n                title: `Tem certeza que deseja ${user.active ? `desabilitar ${user.name}?` : `habilitar ${user.name}?`}`,\n\n                onOk() {\n                  toggleUserStatus(user).then(() => {\n                    fetchUser(Number(params.id));\n                  });\n                },\n\n                content: user.active ? 'Desabilitar um usuário fará com que ele seja automaticamente desligado da plataforma, podendo causar prejuízos em seus ganhos.' : 'Habilitar um usuário fará com que ele ganhe acesso a plataforma novamente, possibilitando criação e publicação de posts.'\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: user.active && !user.canBeDeactivated || !user.active && !user.canBeActivated,\n              type: 'primary',\n              children: user.active ? 'Desabilitar' : 'Habilitar'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), !!((_user$skills = user.skills) === null || _user$skills === void 0 ? void 0 : _user$skills.length) && /*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      lg: 12,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        children: (_user$skills2 = user.skills) === null || _user$skills2 === void 0 ? void 0 : _user$skills2.map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            percent: skill.percentage,\n            success: {\n              percent: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, skill.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      lg: 12,\n      children: /*#__PURE__*/_jsxDEV(Descriptions, {\n        column: 1,\n        bordered: true,\n        size: 'small',\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: 'País',\n          children: user.location.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: 'Estado',\n          children: user.location.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: 'Cidade',\n          children: user.location.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: 'Telefone',\n          children: formatPhone(user.phone)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), user.role === 'EDITOR' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: posts === null || posts === void 0 ? void 0 : posts.content,\n          rowKey: 'id',\n          loading: loadingFetch,\n          pagination: {\n            onChange: page => setPage(page - 1),\n            total: posts === null || posts === void 0 ? void 0 : posts.totalElements,\n            pageSize: 10\n          },\n          columns: [{\n            responsive: ['xs'],\n            title: 'Posts',\n\n            render(element) {\n              return /*#__PURE__*/_jsxDEV(Descriptions, {\n                column: 1,\n                children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                  label: 'Título',\n                  children: element.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                  label: 'Criação',\n                  children: moment(element.createdAt).format('DD/MM/YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                  label: 'Atualização',\n                  children: moment(element.updatedAt).format('DD/MM/YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                  label: 'Publicado',\n                  children: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: element.published\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this);\n            }\n\n          }, {\n            dataIndex: 'title',\n            title: 'Título',\n            ellipsis: true,\n            width: 300,\n            responsive: ['sm'],\n\n            render(title) {\n              return /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: title,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 28\n              }, this);\n            }\n\n          }, {\n            dataIndex: 'createdAt',\n            title: 'Criação',\n            width: 180,\n            align: 'center',\n            responsive: ['sm'],\n            render: item => moment(item).format('DD/MM/YYYY')\n          }, {\n            dataIndex: 'updatedAt',\n            title: 'Última atualização',\n            width: 200,\n            align: 'center',\n            responsive: ['sm'],\n            render: item => moment(item).format('DD/MM/YYYY \\\\à\\\\s hh:mm')\n          }, {\n            dataIndex: 'published',\n            title: 'Publicado',\n            align: 'center',\n            width: 120,\n            responsive: ['sm'],\n\n            render(published, post) {\n              return /*#__PURE__*/_jsxDEV(Switch, {\n                checked: published,\n                loading: loadingToggle,\n                onChange: () => {\n                  togglePostStatus(post).then(() => {\n                    fetchUserPosts(user.id);\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this);\n            }\n\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserDetailsView, \"sGgNt5MTNQFGJtw4jRdVS6KUCy0=\", false, function () {\n  return [usePageTitle, useParams, useBreakpoint, useUser, useBreadcrumb, usePosts];\n});\n\n_c = UserDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetailsView\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/views/UserDetails.view.tsx"],"names":["Button","Card","Col","Row","Skeleton","Space","Typography","Progress","Descriptions","Divider","Popconfirm","Table","Switch","Tooltip","Avatar","useBreakpoint","confirm","useEffect","Link","Redirect","useParams","useUser","WarningFilled","moment","usePosts","NotFoundError","usePageTitle","useState","formatPhone","useBreadcrumb","UserDetailsView","params","page","setPage","lg","user","fetchUser","notFound","toggleUserStatus","name","fetchUserPosts","posts","togglePostStatus","loadingFetch","loadingToggle","isNaN","Number","id","role","avatarUrls","small","width","textAlign","rows","bio","active","canBeDeactivated","canBeActivated","icon","color","title","onOk","then","content","skills","length","map","skill","percentage","percent","location","country","state","city","phone","onChange","total","totalElements","pageSize","responsive","render","element","createdAt","format","updatedAt","published","dataIndex","ellipsis","align","item","post"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n  Progress,\n  Descriptions,\n  Divider,\n  Popconfirm,\n  Table,\n  Switch,\n  Tooltip,\n} from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport confirm from 'antd/lib/modal/confirm';\nimport { useEffect } from 'react';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport useUser from '../../core/hooks/useUser';\nimport { WarningFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Post } from 'danielbonifacio-sdk';\nimport usePosts from '../../core/hooks/usePosts';\nimport NotFoundError from '../components/NotFoundError';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport { useState } from 'react';\nimport formatPhone from '../../core/utils/formatPhone';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\n\nexport default function UserDetailsView() {\n  usePageTitle('Detalhes do usuário');\n\n  const params = useParams<{ id: string }>();\n  const [page, setPage] = useState(0);\n  const { lg } = useBreakpoint();\n\n  const { user, fetchUser, notFound, toggleUserStatus } = useUser();\n\n  useBreadcrumb(`Usuários/${user?.name || 'Detalhes'}`);\n  const {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle,\n  } = usePosts();\n\n  useEffect(() => {\n    if (!isNaN(Number(params.id))) fetchUser(Number(params.id));\n  }, [fetchUser, params.id]);\n\n  useEffect(() => {\n    if (user?.role === 'EDITOR') fetchUserPosts(user.id, page);\n  }, [fetchUserPosts, user, page]);\n\n  if (isNaN(Number(params.id))) return <Redirect to={'/usuarios'} />;\n\n  if (notFound)\n    return (\n      <Card>\n        <NotFoundError\n          title={'Usuário não encontrado'}\n          actionDestination={'/usuarios'}\n          actionTitle={'Voltar para lista de usuários'}\n        />\n      </Card>\n    );\n\n  if (!user) return <Skeleton />;\n\n  return (\n    <Row gutter={24}>\n      <Col xs={24} lg={4}>\n        <Row justify={'center'}>\n          <Avatar size={120} src={user.avatarUrls.small} />\n        </Row>\n      </Col>\n      <Col xs={24} lg={20}>\n        <Space\n          style={{ width: '100%' }}\n          direction={'vertical'}\n          align={lg ? 'start' : 'center'}\n        >\n          <Typography.Title level={2}>{user.name}</Typography.Title>\n          <Typography.Paragraph\n            style={{\n              textAlign: lg ? 'left' : 'center',\n            }}\n            ellipsis={{\n              rows: 2,\n            }}\n          >\n            {user.bio}\n          </Typography.Paragraph>\n          <Space>\n            <Link to={`/usuarios/edicao/${user.id}`}>\n              <Button type={'primary'}>Editar perfil</Button>\n            </Link>\n            <Popconfirm\n              disabled={\n                (user.active && !user.canBeDeactivated) ||\n                (!user.active && !user.canBeActivated)\n              }\n              title={\n                user.active\n                  ? `Desabilitar ${user.name}`\n                  : `Habilitar ${user.name}`\n              }\n              onConfirm={() => {\n                confirm({\n                  icon: <WarningFilled style={{ color: '#09f' }} />,\n                  title: `Tem certeza que deseja ${\n                    user.active\n                      ? `desabilitar ${user.name}?`\n                      : `habilitar ${user.name}?`\n                  }`,\n                  onOk() {\n                    toggleUserStatus(user).then(() => {\n                      fetchUser(Number(params.id));\n                    });\n                  },\n                  content: user.active\n                    ? 'Desabilitar um usuário fará com que ele seja automaticamente desligado da plataforma, podendo causar prejuízos em seus ganhos.'\n                    : 'Habilitar um usuário fará com que ele ganhe acesso a plataforma novamente, possibilitando criação e publicação de posts.',\n                });\n              }}\n            >\n              <Button\n                disabled={\n                  (user.active && !user.canBeDeactivated) ||\n                  (!user.active && !user.canBeActivated)\n                }\n                type={'primary'}\n              >\n                {user.active ? 'Desabilitar' : 'Habilitar'}\n              </Button>\n            </Popconfirm>\n          </Space>\n        </Space>\n      </Col>\n      <Divider />\n      {!!user.skills?.length && (\n        <Col xs={24} lg={12}>\n          <Space direction='vertical' style={{ width: '100%' }}>\n            {user.skills?.map((skill) => (\n              <div key={skill.name}>\n                <Typography.Text>{skill.name}</Typography.Text>\n                <Progress percent={skill.percentage} success={{ percent: 0 }} />\n              </div>\n            ))}\n          </Space>\n        </Col>\n      )}\n      <Col xs={24} lg={12}>\n        <Descriptions column={1} bordered size={'small'}>\n          <Descriptions.Item label={'País'}>\n            {user.location.country}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Estado'}>\n            {user.location.state}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Cidade'}>\n            {user.location.city}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Telefone'}>\n            {formatPhone(user.phone)}\n          </Descriptions.Item>\n        </Descriptions>\n      </Col>\n      {user.role === 'EDITOR' && (\n        <>\n          <Divider />\n          <Col xs={24}>\n            <Table<Post.Summary>\n              dataSource={posts?.content}\n              rowKey={'id'}\n              loading={loadingFetch}\n              pagination={{\n                onChange: (page) => setPage(page - 1),\n                total: posts?.totalElements,\n                pageSize: 10,\n              }}\n              columns={[\n                {\n                  responsive: ['xs'],\n                  title: 'Posts',\n                  render(element) {\n                    return (\n                      <Descriptions column={1}>\n                        <Descriptions.Item label={'Título'}>\n                          {element.title}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Criação'}>\n                          {moment(element.createdAt).format('DD/MM/YYYY')}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Atualização'}>\n                          {moment(element.updatedAt).format('DD/MM/YYYY')}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Publicado'}>\n                          <Switch checked={element.published} />\n                        </Descriptions.Item>\n                      </Descriptions>\n                    );\n                  },\n                },\n                {\n                  dataIndex: 'title',\n                  title: 'Título',\n                  ellipsis: true,\n                  width: 300,\n                  responsive: ['sm'],\n                  render(title: string) {\n                    return <Tooltip title={title}>{title}</Tooltip>;\n                  },\n                },\n                {\n                  dataIndex: 'createdAt',\n                  title: 'Criação',\n                  width: 180,\n                  align: 'center',\n                  responsive: ['sm'],\n                  render: (item) => moment(item).format('DD/MM/YYYY'),\n                },\n                {\n                  dataIndex: 'updatedAt',\n                  title: 'Última atualização',\n                  width: 200,\n                  align: 'center',\n                  responsive: ['sm'],\n                  render: (item) =>\n                    moment(item).format('DD/MM/YYYY \\\\à\\\\s hh:mm'),\n                },\n                {\n                  dataIndex: 'published',\n                  title: 'Publicado',\n                  align: 'center',\n                  width: 120,\n                  responsive: ['sm'],\n                  render(published: boolean, post) {\n                    return (\n                      <Switch\n                        checked={published}\n                        loading={loadingToggle}\n                        onChange={() => {\n                          togglePostStatus(post).then(() => {\n                            fetchUserPosts(user.id);\n                          });\n                        }}\n                      />\n                    );\n                  },\n                },\n              ]}\n            />\n          </Col>\n        </>\n      )}\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}