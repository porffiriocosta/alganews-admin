{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\routes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport HomeView from './views/Home.view';\nimport UserCreateView from './views/UserCreate.view';\nimport UserEditView from './views/UserEdit.view';\nimport UserListView from './views/UserList.view';\nimport PaymentListView from './views/PaymentList.view';\nimport PaymentCreateView from './views/PaymentCreate.view';\nimport CashFlowRevenuesView from './views/CashFlowRevenues.view';\nimport CashFlowExpensesView from './views/CashFlowExpenses.view';\nimport { useEffect } from 'react';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport { message, notification } from 'antd';\nimport UserDetailsView from './views/UserDetails.view';\nimport PaymentDetailsView from './views/PaymentDetails.view';\nimport AuthService from '../auth/Authorization.service';\nimport jwtDecode from 'jwt-decode';\nimport useAuth from '../core/hooks/useAuth';\nimport { useMemo } from 'react';\nimport GlobalLoading from './components/GlobalLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\nexport default function Routes() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    fetchUser,\n    user\n  } = useAuth();\n  useEffect(() => {\n    window.onunhandledrejection = ({\n      reason\n    }) => {\n      if (reason instanceof CustomError) {\n        var _reason$data;\n\n        if ((_reason$data = reason.data) === null || _reason$data === void 0 ? void 0 : _reason$data.objects) {\n          reason.data.objects.forEach(error => {\n            message.error(error.userMessage);\n          });\n        } else {\n          var _reason$data2, _reason$data3;\n\n          notification.error({\n            message: reason.message,\n            description: ((_reason$data2 = reason.data) === null || _reason$data2 === void 0 ? void 0 : _reason$data2.detail) === 'Network Error' ? 'Erro na rede' : (_reason$data3 = reason.data) === null || _reason$data3 === void 0 ? void 0 : _reason$data3.detail\n          });\n        }\n      } else {\n        var _reason$data4, _reason$data4$objects;\n\n        reason === null || reason === void 0 ? void 0 : (_reason$data4 = reason.data) === null || _reason$data4 === void 0 ? void 0 : (_reason$data4$objects = _reason$data4.objects) === null || _reason$data4$objects === void 0 ? void 0 : _reason$data4$objects.forEach(object => {\n          message.error(object.userMessage);\n        });\n        notification.error({\n          message: (reason === null || reason === void 0 ? void 0 : reason.message) || 'Houve um erro'\n        });\n      }\n    };\n\n    return () => {\n      window.onunhandledrejection = null;\n    };\n  }, []);\n  useEffect(() => {\n    async function identify() {\n      const isInAuthorizationRoute = window.location.pathname === '/authorize';\n      const code = new URLSearchParams(window.location.search).get('code');\n      const codeVerifier = AuthService.getCodeVerifier();\n      const accessToken = AuthService.getAccessToken();\n\n      if (!accessToken && !isInAuthorizationRoute) {\n        AuthService.imperativelySendToLoginScreen();\n      }\n\n      if (isInAuthorizationRoute) {\n        if (!code) {\n          notification.error({\n            message: 'Código não foi informado'\n          });\n          AuthService.imperativelySendToLoginScreen();\n          return;\n        }\n\n        if (!codeVerifier) {\n          AuthService.imperativelySendToLogout();\n          return;\n        } // busca o primeiro token de acesso\n\n\n        const {\n          access_token,\n          refresh_token\n        } = await AuthService.getFirstAccessTokens({\n          code,\n          codeVerifier,\n          redirectUri: `${APP_BASE_URL}/authorize`\n        });\n        AuthService.setAccessToken(access_token);\n        AuthService.setRefreshToken(refresh_token);\n        const decodedToken = jwtDecode(access_token);\n        fetchUser(decodedToken['alganews:user_id']);\n        history.push('/');\n      }\n\n      if (accessToken) {\n        const decodedToken = jwtDecode(accessToken);\n        fetchUser(decodedToken['alganews:user_id']);\n      }\n    }\n\n    identify();\n  }, [history, fetchUser]);\n  const isAuthorizationRoute = useMemo(() => location.pathname === '/authorize', [location.pathname]);\n  if (isAuthorizationRoute || !user) return /*#__PURE__*/_jsxDEV(GlobalLoading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 45\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: '/',\n      exact: true,\n      component: HomeView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/usuarios/cadastro',\n      exact: true,\n      component: UserCreateView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/usuarios/edicao/:id',\n      exact: true,\n      component: UserEditView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/usuarios/:id',\n      exact: true,\n      component: UserDetailsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/usuarios',\n      exact: true,\n      component: UserListView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/pagamentos',\n      exact: true,\n      component: PaymentListView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/pagamentos/cadastro',\n      exact: true,\n      component: PaymentCreateView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/pagamentos/:id',\n      exact: true,\n      component: PaymentDetailsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/fluxo-de-caixa/despesas',\n      exact: true,\n      component: CashFlowExpensesView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/fluxo-de-caixa/receitas',\n      exact: true,\n      component: CashFlowRevenuesView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Routes, \"dP/O+5RxOzTd3n4Arsldh3FzNt8=\", false, function () {\n  return [useHistory, useLocation, useAuth];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/routes.tsx"],"names":["Route","Switch","useHistory","useLocation","HomeView","UserCreateView","UserEditView","UserListView","PaymentListView","PaymentCreateView","CashFlowRevenuesView","CashFlowExpensesView","useEffect","CustomError","message","notification","UserDetailsView","PaymentDetailsView","AuthService","jwtDecode","useAuth","useMemo","GlobalLoading","APP_BASE_URL","process","env","REACT_APP_BASE_URL","Routes","history","location","fetchUser","user","window","onunhandledrejection","reason","data","objects","forEach","error","userMessage","description","detail","object","identify","isInAuthorizationRoute","pathname","code","URLSearchParams","search","get","codeVerifier","getCodeVerifier","accessToken","getAccessToken","imperativelySendToLoginScreen","imperativelySendToLogout","access_token","refresh_token","getFirstAccessTokens","redirectUri","setAccessToken","setRefreshToken","decodedToken","push","isAuthorizationRoute"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,WAApC,QAAuD,kBAAvD;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,MAAtC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAGA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAjC;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,OAAO,GAAG1B,UAAU,EAA1B;AACA,QAAM2B,QAAQ,GAAG1B,WAAW,EAA5B;AAEA,QAAM;AAAE2B,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBX,OAAO,EAAnC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,MAAM,CAACC,oBAAP,GAA8B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC5C,UAAIA,MAAM,YAAYrB,WAAtB,EAAmC;AAAA;;AACjC,4BAAIqB,MAAM,CAACC,IAAX,iDAAI,aAAaC,OAAjB,EAA0B;AACxBF,UAAAA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,OAApB,CAA6BC,KAAD,IAAW;AACrCxB,YAAAA,OAAO,CAACwB,KAAR,CAAcA,KAAK,CAACC,WAApB;AACD,WAFD;AAGD,SAJD,MAIO;AAAA;;AACLxB,UAAAA,YAAY,CAACuB,KAAb,CAAmB;AACjBxB,YAAAA,OAAO,EAAEoB,MAAM,CAACpB,OADC;AAEjB0B,YAAAA,WAAW,EACT,kBAAAN,MAAM,CAACC,IAAP,gEAAaM,MAAb,MAAwB,eAAxB,GACI,cADJ,oBAEIP,MAAM,CAACC,IAFX,kDAEI,cAAaM;AALF,WAAnB;AAOD;AACF,OAdD,MAcO;AAAA;;AACLP,QAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEC,IAAR,yFAAcC,OAAd,gFAAuBC,OAAvB,CAAgCK,MAAD,IAAqC;AAClE5B,UAAAA,OAAO,CAACwB,KAAR,CAAcI,MAAM,CAACH,WAArB;AACD,SAFD;AAIAxB,QAAAA,YAAY,CAACuB,KAAb,CAAmB;AACjBxB,UAAAA,OAAO,EAAE,CAAAoB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEpB,OAAR,KAAmB;AADX,SAAnB;AAGD;AACF,KAxBD;;AA0BA,WAAO,MAAM;AACXkB,MAAAA,MAAM,CAACC,oBAAP,GAA8B,IAA9B;AACD,KAFD;AAGD,GA9BQ,EA8BN,EA9BM,CAAT;AAgCArB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe+B,QAAf,GAA0B;AACxB,YAAMC,sBAAsB,GAAGZ,MAAM,CAACH,QAAP,CAAgBgB,QAAhB,KAA6B,YAA5D;AACA,YAAMC,IAAI,GAAG,IAAIC,eAAJ,CAAoBf,MAAM,CAACH,QAAP,CAAgBmB,MAApC,EAA4CC,GAA5C,CAAgD,MAAhD,CAAb;AAEA,YAAMC,YAAY,GAAGhC,WAAW,CAACiC,eAAZ,EAArB;AACA,YAAMC,WAAW,GAAGlC,WAAW,CAACmC,cAAZ,EAApB;;AAEA,UAAI,CAACD,WAAD,IAAgB,CAACR,sBAArB,EAA6C;AAC3C1B,QAAAA,WAAW,CAACoC,6BAAZ;AACD;;AAED,UAAIV,sBAAJ,EAA4B;AAC1B,YAAI,CAACE,IAAL,EAAW;AACT/B,UAAAA,YAAY,CAACuB,KAAb,CAAmB;AACjBxB,YAAAA,OAAO,EAAE;AADQ,WAAnB;AAGAI,UAAAA,WAAW,CAACoC,6BAAZ;AACA;AACD;;AAED,YAAI,CAACJ,YAAL,EAAmB;AACjBhC,UAAAA,WAAW,CAACqC,wBAAZ;AACA;AACD,SAZyB,CAc1B;;;AACA,cAAM;AAAEC,UAAAA,YAAF;AAAgBC,UAAAA;AAAhB,YACJ,MAAMvC,WAAW,CAACwC,oBAAZ,CAAiC;AACrCZ,UAAAA,IADqC;AAErCI,UAAAA,YAFqC;AAGrCS,UAAAA,WAAW,EAAG,GAAEpC,YAAa;AAHQ,SAAjC,CADR;AAOAL,QAAAA,WAAW,CAAC0C,cAAZ,CAA2BJ,YAA3B;AACAtC,QAAAA,WAAW,CAAC2C,eAAZ,CAA4BJ,aAA5B;AAEA,cAAMK,YAAmD,GACvD3C,SAAS,CAACqC,YAAD,CADX;AAEA1B,QAAAA,SAAS,CAACgC,YAAY,CAAC,kBAAD,CAAb,CAAT;AACAlC,QAAAA,OAAO,CAACmC,IAAR,CAAa,GAAb;AACD;;AAED,UAAIX,WAAJ,EAAiB;AACf,cAAMU,YAAmD,GACvD3C,SAAS,CAACiC,WAAD,CADX;AAEAtB,QAAAA,SAAS,CAACgC,YAAY,CAAC,kBAAD,CAAb,CAAT;AACD;AACF;;AAEDnB,IAAAA,QAAQ;AACT,GAnDQ,EAmDN,CAACf,OAAD,EAAUE,SAAV,CAnDM,CAAT;AAqDA,QAAMkC,oBAAoB,GAAG3C,OAAO,CAClC,MAAMQ,QAAQ,CAACgB,QAAT,KAAsB,YADM,EAElC,CAAChB,QAAQ,CAACgB,QAAV,CAFkC,CAApC;AAKA,MAAImB,oBAAoB,IAAI,CAACjC,IAA7B,EAAmC,oBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEnC,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,GAAb;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,SAAS,EAAE3B;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,oBAAb;AAAmC,MAAA,KAAK,MAAxC;AAAyC,MAAA,SAAS,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,sBAAb;AAAqC,MAAA,KAAK,MAA1C;AAA2C,MAAA,SAAS,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,eAAb;AAA8B,MAAA,KAAK,MAAnC;AAAoC,MAAA,SAAS,EAAEU;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,WAAb;AAA0B,MAAA,KAAK,MAA/B;AAAgC,MAAA,SAAS,EAAET;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,aAAb;AAA4B,MAAA,KAAK,MAAjC;AAAkC,MAAA,SAAS,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,sBADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,iBAAb;AAAgC,MAAA,KAAK,MAArC;AAAsC,MAAA,SAAS,EAAEQ;AAAjD;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,0BADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,EAAEN;AAHb;AAAA;AAAA;AAAA;AAAA,YAbF,eAkBE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,0BADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,EAAED;AAHb;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA5HuBiB,M;UACNzB,U,EACCC,W,EAEWiB,O;;;KAJNO,M","sourcesContent":["import { Route, Switch, useHistory, useLocation } from 'react-router-dom';\n\nimport HomeView from './views/Home.view';\nimport UserCreateView from './views/UserCreate.view';\nimport UserEditView from './views/UserEdit.view';\nimport UserListView from './views/UserList.view';\nimport PaymentListView from './views/PaymentList.view';\nimport PaymentCreateView from './views/PaymentCreate.view';\nimport CashFlowRevenuesView from './views/CashFlowRevenues.view';\nimport CashFlowExpensesView from './views/CashFlowExpenses.view';\nimport { useEffect } from 'react';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport { message, notification } from 'antd';\nimport UserDetailsView from './views/UserDetails.view';\nimport PaymentDetailsView from './views/PaymentDetails.view';\nimport AuthService from '../auth/Authorization.service';\nimport jwtDecode from 'jwt-decode';\nimport useAuth from '../core/hooks/useAuth';\nimport { useMemo } from 'react';\nimport GlobalLoading from './components/GlobalLoading';\nimport { Authentication } from '../auth/Auth';\n\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\n\nexport default function Routes() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { fetchUser, user } = useAuth();\n\n  useEffect(() => {\n    window.onunhandledrejection = ({ reason }) => {\n      if (reason instanceof CustomError) {\n        if (reason.data?.objects) {\n          reason.data.objects.forEach((error) => {\n            message.error(error.userMessage);\n          });\n        } else {\n          notification.error({\n            message: reason.message,\n            description:\n              reason.data?.detail === 'Network Error'\n                ? 'Erro na rede'\n                : reason.data?.detail,\n          });\n        }\n      } else {\n        reason?.data?.objects?.forEach((object: { userMessage: string }) => {\n          message.error(object.userMessage);\n        });\n\n        notification.error({\n          message: reason?.message || 'Houve um erro',\n        });\n      }\n    };\n\n    return () => {\n      window.onunhandledrejection = null;\n    };\n  }, []);\n\n  useEffect(() => {\n    async function identify() {\n      const isInAuthorizationRoute = window.location.pathname === '/authorize';\n      const code = new URLSearchParams(window.location.search).get('code');\n\n      const codeVerifier = AuthService.getCodeVerifier();\n      const accessToken = AuthService.getAccessToken();\n\n      if (!accessToken && !isInAuthorizationRoute) {\n        AuthService.imperativelySendToLoginScreen();\n      }\n\n      if (isInAuthorizationRoute) {\n        if (!code) {\n          notification.error({\n            message: 'Código não foi informado',\n          });\n          AuthService.imperativelySendToLoginScreen();\n          return;\n        }\n\n        if (!codeVerifier) {\n          AuthService.imperativelySendToLogout();\n          return;\n        }\n\n        // busca o primeiro token de acesso\n        const { access_token, refresh_token } =\n          await AuthService.getFirstAccessTokens({\n            code,\n            codeVerifier,\n            redirectUri: `${APP_BASE_URL}/authorize`,\n          });\n\n        AuthService.setAccessToken(access_token);\n        AuthService.setRefreshToken(refresh_token);\n\n        const decodedToken: Authentication.AccessTokenDecodedBody =\n          jwtDecode(access_token);\n        fetchUser(decodedToken['alganews:user_id']);\n        history.push('/');\n      }\n\n      if (accessToken) {\n        const decodedToken: Authentication.AccessTokenDecodedBody =\n          jwtDecode(accessToken);\n        fetchUser(decodedToken['alganews:user_id']);\n      }\n    }\n\n    identify();\n  }, [history, fetchUser]);\n\n  const isAuthorizationRoute = useMemo(\n    () => location.pathname === '/authorize',\n    [location.pathname]\n  );\n\n  if (isAuthorizationRoute || !user) return <GlobalLoading />;\n\n  return (\n    <Switch>\n      <Route path={'/'} exact component={HomeView} />\n      <Route path={'/usuarios/cadastro'} exact component={UserCreateView} />\n      <Route path={'/usuarios/edicao/:id'} exact component={UserEditView} />\n      <Route path={'/usuarios/:id'} exact component={UserDetailsView} />\n      <Route path={'/usuarios'} exact component={UserListView} />\n      <Route path={'/pagamentos'} exact component={PaymentListView} />\n      <Route\n        path={'/pagamentos/cadastro'}\n        exact\n        component={PaymentCreateView}\n      />\n      <Route path={'/pagamentos/:id'} exact component={PaymentDetailsView} />\n      <Route\n        path={'/fluxo-de-caixa/despesas'}\n        exact\n        component={CashFlowExpensesView}\n      />\n      <Route\n        path={'/fluxo-de-caixa/receitas'}\n        exact\n        component={CashFlowRevenuesView}\n      />\n    </Switch>\n  );\n}"]},"metadata":{},"sourceType":"module"}