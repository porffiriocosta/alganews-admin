{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { PostService } from 'danielbonifacio-sdk';\nimport { useCallback, useState } from 'react';\nexport default function usePosts() {\n  _s();\n\n  const [loadingFetch, setLoadingFetch] = useState(false);\n  const [loadingToggle, setLoadingToggle] = useState(false);\n  const [posts, setPosts] = useState();\n  const fetchUserPosts = useCallback(async (userId, page = 0) => {\n    setLoadingFetch(true);\n\n    try {\n      const posts = await PostService.getAllPosts({\n        editorId: userId,\n        showAll: true,\n        page,\n        size: 10\n      });\n      setPosts(posts);\n    } finally {\n      setLoadingFetch(false);\n    }\n  }, []);\n  const togglePostStatus = useCallback(async post => {\n    setLoadingToggle(true);\n\n    try {\n      post.published ? await PostService.deactivateExistingPost(post.id) : await PostService.publishExistingPost(post.id);\n    } finally {\n      setLoadingToggle(false);\n    }\n  }, []);\n  return {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle\n  };\n}\n\n_s(usePosts, \"Jh5DwGW9wAH00Cp7/qh1TFRbn6s=\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/hooks/usePosts.ts"],"names":["PostService","useCallback","useState","usePosts","loadingFetch","setLoadingFetch","loadingToggle","setLoadingToggle","posts","setPosts","fetchUserPosts","userId","page","getAllPosts","editorId","showAll","size","togglePostStatus","post","published","deactivateExistingPost","id","publishExistingPost"],"mappings":";;AAAA,SAASA,WAAT,QAAkC,qBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AAEA,QAAMQ,cAAc,GAAGT,WAAW,CAChC,OAAOU,MAAP,EAAuBC,IAAI,GAAG,CAA9B,KAAoC;AAClCP,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACF,YAAMG,KAAK,GAAG,MAAMR,WAAW,CAACa,WAAZ,CAAwB;AAC1CC,QAAAA,QAAQ,EAAEH,MADgC;AAE1CI,QAAAA,OAAO,EAAE,IAFiC;AAG1CH,QAAAA,IAH0C;AAI1CI,QAAAA,IAAI,EAAE;AAJoC,OAAxB,CAApB;AAMAP,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KARD,SAQU;AACRH,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAd+B,EAehC,EAfgC,CAAlC;AAkBA,QAAMY,gBAAgB,GAAGhB,WAAW,CAClC,MAAOiB,IAAP,IAA8C;AAC5CX,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAI;AACFW,MAAAA,IAAI,CAACC,SAAL,GACI,MAAMnB,WAAW,CAACoB,sBAAZ,CACJF,IAAI,CAACG,EADD,CADV,GAII,MAAMrB,WAAW,CAACsB,mBAAZ,CAAgCJ,IAAI,CAACG,EAArC,CAJV;AAKD,KAND,SAMU;AACRd,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAZiC,EAalC,EAbkC,CAApC;AAgBA,SAAO;AACLG,IAAAA,cADK;AAELF,IAAAA,KAFK;AAGLS,IAAAA,gBAHK;AAILb,IAAAA,YAJK;AAKLE,IAAAA;AALK,GAAP;AAOD;;GA9CuBH,Q","sourcesContent":["import { PostService, Post } from 'danielbonifacio-sdk';\nimport { useCallback, useState } from 'react';\n\nexport default function usePosts() {\n  const [loadingFetch, setLoadingFetch] = useState(false);\n  const [loadingToggle, setLoadingToggle] = useState(false);\n  const [posts, setPosts] = useState<Post.Paginated>();\n\n  const fetchUserPosts = useCallback(\n    async (userId: number, page = 0) => {\n      setLoadingFetch(true);\n      try {\n        const posts = await PostService.getAllPosts({\n          editorId: userId,\n          showAll: true,\n          page,\n          size: 10,\n        });\n        setPosts(posts);\n      } finally {\n        setLoadingFetch(false);\n      }\n    },\n    []\n  );\n\n  const togglePostStatus = useCallback(\n    async (post: Post.Summary | Post.Detailed) => {\n      setLoadingToggle(true);\n      try {\n        post.published\n          ? await PostService.deactivateExistingPost(\n              post.id\n            )\n          : await PostService.publishExistingPost(post.id);\n      } finally {\n        setLoadingToggle(false);\n      }\n    },\n    []\n  );\n\n  return {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}