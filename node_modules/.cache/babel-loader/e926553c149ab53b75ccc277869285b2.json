{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{UserService}from'danielbonifacio-sdk';var initialState={user:null,fetching:false};export var fetchUser=createAsyncThunk('auth/fetchUser',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId,_ref){var rejectWithValue,dispatch,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:rejectWithValue=_ref.rejectWithValue,dispatch=_ref.dispatch;_context.prev=1;_context.next=4;return UserService.getDetailedUser(userId);case 4:user=_context.sent;dispatch(storeUser(user));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue(_objectSpread({},_context.t0)));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());var authSlice=createSlice({initialState:initialState,name:'auth',reducers:{storeUser:function storeUser(state,action){state.user=action.payload;},clearUser:function clearUser(state){state.user=null;}}});var _authSlice$actions=authSlice.actions,storeUser=_authSlice$actions.storeUser,clearUser=_authSlice$actions.clearUser;export{storeUser,clearUser};var authReducer=authSlice.reducer;export default authReducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/store/Auth.slice.ts"],"names":["createAsyncThunk","createSlice","UserService","initialState","user","fetching","fetchUser","userId","rejectWithValue","dispatch","getDetailedUser","storeUser","authSlice","name","reducers","state","action","payload","clearUser","actions","authReducer","reducer"],"mappings":"8bAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA6D,kBAA7D,CACA,OAAeC,WAAf,KAAkC,qBAAlC,CASA,GAAMC,CAAAA,YAAuB,CAAG,CAC9BC,IAAI,CAAE,IADwB,CAE9BC,QAAQ,CAAE,KAFoB,CAAhC,CAKA,MAAO,IAAMC,CAAAA,SAAS,CAAGN,gBAAgB,CACvC,gBADuC,2FAEvC,iBAAOO,MAAP,yJAAyBC,eAAzB,MAAyBA,eAAzB,CAA0CC,QAA1C,MAA0CA,QAA1C,uCAEuBP,CAAAA,WAAW,CAACQ,eAAZ,CAA4BH,MAA5B,CAFvB,QAEUH,IAFV,eAGIK,QAAQ,CAACE,SAAS,CAACP,IAAD,CAAV,CAAR,CAHJ,+GAKWI,eAAe,+BAL1B,sEAFuC,oEAAlC,CAYP,GAAMI,CAAAA,SAAS,CAAGX,WAAW,CAAC,CAC5BE,YAAY,CAAZA,YAD4B,CAE5BU,IAAI,CAAE,MAFsB,CAG5BC,QAAQ,CAAE,CACRH,SADQ,oBACEI,KADF,CACSC,MADT,CACoC,CAC1CD,KAAK,CAACX,IAAN,CAAaY,MAAM,CAACC,OAApB,CACD,CAHO,CAIRC,SAJQ,oBAIEH,KAJF,CAIS,CACfA,KAAK,CAACX,IAAN,CAAa,IAAb,CACD,CANO,CAHkB,CAAD,CAA7B,C,uBAawCQ,SAAS,CAACO,O,CAAnCR,S,oBAAAA,S,CAAWO,S,oBAAAA,S,6BAE1B,GAAME,CAAAA,WAAW,CAAGR,SAAS,CAACS,OAA9B,CACA,cAAeD,CAAAA,WAAf","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User, UserService } from 'danielbonifacio-sdk';\n\ntype PA<T> = PayloadAction<T>;\n\ninterface AuthState {\n  user: User.Detailed | null;\n  fetching: boolean;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  fetching: false,\n};\n\nexport const fetchUser = createAsyncThunk(\n  'auth/fetchUser',\n  async (userId: number, { rejectWithValue, dispatch }) => {\n    try {\n      const user = await UserService.getDetailedUser(userId);\n      dispatch(storeUser(user));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  initialState,\n  name: 'auth',\n  reducers: {\n    storeUser(state, action: PA<User.Detailed>) {\n      state.user = action.payload;\n    },\n    clearUser(state) {\n      state.user = null;\n    },\n  },\n});\n\nexport const { storeUser, clearUser } = authSlice.actions;\n\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}