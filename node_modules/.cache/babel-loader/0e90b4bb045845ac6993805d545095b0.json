{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\PaymentHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { Descriptions, Divider, Skeleton, Space, Tag, Typography } from 'antd';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentHeader(props) {\n  _s();\n\n  var _props$postsEarnings, _props$totalEarnings;\n\n  const {\n    xs\n  } = useBreakpoint();\n  if (props.loading) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      children: \"Pagamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n      children: \"A base do pagamento \\xE9 calculada pela quantidade de palavras escritas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n      column: xs ? 1 : 2,\n      size: xs ? 'small' : 'default',\n      children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: 'Editor',\n        children: props.editorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: 'Período',\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          size: 8,\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            style: {\n              margin: 0\n            },\n            children: props.periodStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: 'à'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tag, {\n            children: props.periodEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: 'Ganhos por posts',\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          children: (_props$postsEarnings = props.postsEarnings) === null || _props$postsEarnings === void 0 ? void 0 : _props$postsEarnings.toLocaleString('pt-br', {\n            style: 'currency',\n            currency: 'BRL',\n            maximumFractionDigits: 2\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n        label: 'Total',\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          children: (_props$totalEarnings = props.totalEarnings) === null || _props$totalEarnings === void 0 ? void 0 : _props$totalEarnings.toLocaleString('pt-br', {\n            style: 'currency',\n            currency: 'BRL',\n            maximumFractionDigits: 2\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PaymentHeader, \"qA+0lsAUw8TgtW/+baaGpZAcKRQ=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = PaymentHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentHeader\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/PaymentHeader.tsx"],"names":["Descriptions","Divider","Skeleton","Space","Tag","Typography","useBreakpoint","PaymentHeader","props","xs","loading","editorName","margin","periodStart","periodEnd","postsEarnings","toLocaleString","style","currency","maximumFractionDigits","totalEarnings"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsDC,UAAtD,QAAwE,MAAxE;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;AAYA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA;;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAASH,aAAa,EAA5B;AACA,MAAIE,KAAK,CAACE,OAAV,EAAmB,oBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,sBACE;AAAA,4BACE,QAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,YAAD;AAAc,MAAA,MAAM,EAAED,EAAE,GAAG,CAAH,GAAO,CAA/B;AAAkC,MAAA,IAAI,EAAEA,EAAE,GAAG,OAAH,GAAa,SAAvD;AAAA,8BACE,QAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAE,QAA1B;AAAA,kBACGD,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAE,SAA1B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,sBAA4BJ,KAAK,CAACK;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAO;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,GAAD;AAAA,sBAAML,KAAK,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAE,kBAA1B;AAAA,+BACE,QAAC,GAAD;AAAA,4CACGN,KAAK,CAACO,aADT,yDACG,qBAAqBC,cAArB,CAAoC,OAApC,EAA6C;AAC5CC,YAAAA,KAAK,EAAE,UADqC;AAE5CC,YAAAA,QAAQ,EAAE,KAFkC;AAG5CC,YAAAA,qBAAqB,EAAE;AAHqB,WAA7C;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAoBE,QAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,KAAK,EAAE,OAA1B;AAAA,+BACE,QAAC,GAAD;AAAA,4CACGX,KAAK,CAACY,aADT,yDACG,qBAAqBJ,cAArB,CAAoC,OAApC,EAA6C;AAC5CC,YAAAA,KAAK,EAAE,UADqC;AAE5CC,YAAAA,QAAQ,EAAE,KAFkC;AAG5CC,YAAAA,qBAAqB,EAAE;AAHqB,WAA7C;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAuCD;;GA1CuBZ,a;UACPD,a;;;KADOC,a","sourcesContent":["import { Descriptions, Divider, Skeleton, Space, Tag, Typography } from 'antd';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\n\ninterface PaymentHeaderProps {\n  loading?: boolean;\n  editorId?: number;\n  editorName?: string;\n  periodStart?: string;\n  periodEnd?: string;\n  postsEarnings?: number;\n  totalEarnings?: number;\n}\n\nexport default function PaymentHeader(props: PaymentHeaderProps) {\n  const { xs } = useBreakpoint();\n  if (props.loading) return <Skeleton />;\n  return (\n    <>\n      <Typography.Title>Pagamento</Typography.Title>\n      <Typography.Text>\n        A base do pagamento é calculada pela quantidade de palavras escritas\n      </Typography.Text>\n      <Divider />\n      <Descriptions column={xs ? 1 : 2} size={xs ? 'small' : 'default'}>\n        <Descriptions.Item label={'Editor'}>\n          {props.editorName}\n        </Descriptions.Item>\n        <Descriptions.Item label={'Período'}>\n          <Space size={8}>\n            <Tag style={{ margin: 0 }}>{props.periodStart}</Tag>\n            <span>{'à'}</span>\n            <Tag>{props.periodEnd}</Tag>\n          </Space>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Ganhos por posts'}>\n          <Tag>\n            {props.postsEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Total'}>\n          <Tag>\n            {props.totalEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}