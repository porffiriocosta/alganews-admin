{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\PaymentPosts.tsx\";\nimport { Descriptions, Table, Tooltip } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentPosts(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: props.loading,\n      dataSource: props.posts,\n      pagination: false,\n      rowKey: 'id',\n      columns: [{\n        responsive: ['xs'],\n        title: 'Posts',\n\n        render(post) {\n          return /*#__PURE__*/_jsxDEV(Descriptions, {\n            column: 1,\n            children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Título',\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Preço por palavra',\n              children: post.earnings.pricePerWord.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL',\n                maximumFractionDigits: 2\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Palavras no post',\n              children: post.earnings.words\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n              label: 'Ganho no post',\n              children: post.earnings.totalAmount.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL',\n                maximumFractionDigits: 2\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this);\n        }\n\n      }, {\n        dataIndex: 'title',\n        title: 'Post',\n        ellipsis: true,\n        width: 300,\n        responsive: ['sm'],\n\n        render(value) {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: value,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this);\n        }\n\n      }, {\n        dataIndex: 'earnings.pricePerWord'.split('.'),\n        title: 'Preço por palavra',\n        align: 'right',\n        width: 150,\n        responsive: ['sm'],\n\n        render(price) {\n          return price.toLocaleString('pt-br', {\n            style: 'currency',\n            currency: 'BRL',\n            maximumFractionDigits: 2\n          });\n        }\n\n      }, {\n        dataIndex: 'earnings.words'.split('.'),\n        title: 'Palavras no post',\n        width: 150,\n        align: 'right',\n        responsive: ['sm']\n      }, {\n        dataIndex: 'earnings.totalAmount'.split('.'),\n        title: 'Total ganho neste post',\n        align: 'right',\n        responsive: ['sm'],\n        width: 170\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = PaymentPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPosts\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/PaymentPosts.tsx"],"names":["Descriptions","Table","Tooltip","PaymentPosts","props","loading","posts","responsive","title","render","post","earnings","pricePerWord","toLocaleString","style","currency","maximumFractionDigits","words","totalAmount","dataIndex","ellipsis","width","value","split","align","price"],"mappings":"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","sourcesContent":["import { Descriptions, Table, Tooltip } from 'antd';\nimport { Payment, Post } from 'danielbonifacio-sdk';\n\ninterface PaymentPostsProps {\n  loading?: boolean;\n  posts: Payment.PostWithEarnings[];\n}\n\nexport default function PaymentPosts(props: PaymentPostsProps) {\n  return (\n    <>\n      <Table<Post.WithEarnings>\n        loading={props.loading}\n        dataSource={props.posts}\n        pagination={false}\n        rowKey={'id'}\n        columns={[\n          {\n            responsive: ['xs'],\n            title: 'Posts',\n            render(post: Post.WithEarnings) {\n              return (\n                <Descriptions column={1}>\n                  <Descriptions.Item label={'Título'}>\n                    {post.title}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Preço por palavra'}>\n                    {post.earnings.pricePerWord.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Palavras no post'}>\n                    {post.earnings.words}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ganho no post'}>\n                    {post.earnings.totalAmount.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'title',\n            title: 'Post',\n            ellipsis: true,\n            width: 300,\n            responsive: ['sm'],\n            render(value: string) {\n              return <Tooltip title={value}>{value}</Tooltip>;\n            },\n          },\n          {\n            dataIndex: 'earnings.pricePerWord'.split('.'),\n            title: 'Preço por palavra',\n            align: 'right',\n            width: 150,\n            responsive: ['sm'],\n            render(price: number) {\n              return price.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL',\n                maximumFractionDigits: 2,\n              });\n            },\n          },\n          {\n            dataIndex: 'earnings.words'.split('.'),\n            title: 'Palavras no post',\n            width: 150,\n            align: 'right',\n            responsive: ['sm'],\n          },\n          {\n            dataIndex: 'earnings.totalAmount'.split('.'),\n            title: 'Total ganho neste post',\n            align: 'right',\n            responsive: ['sm'],\n            width: 170,\n          },\n        ]}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}