{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-admin\\\\src\\\\app\\\\features\\\\CompanyMetrics.tsx\",\n    _s = $RefreshSig$();\n\nimport { Area } from '@ant-design/charts';\nimport { MetricService } from 'danielbonifacio-sdk';\nimport { ForbiddenError } from 'danielbonifacio-sdk/dist/errors';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport ptBR from 'date-fns/esm/locale/pt-BR';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport transformDataIntoAntdChart from '../../core/utils/transformDataIntoAntdChart';\nimport Forbidden from '../components/Forbidden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompanyMetrics() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [forbidden, setForbidden] = useState(false);\n  useEffect(() => {\n    MetricService.getMonthlyRevenuesExpenses().then(transformDataIntoAntdChart).then(setData).catch(err => {\n      if (err instanceof ForbiddenError) {\n        setForbidden(true);\n        return;\n      }\n\n      throw err;\n    });\n  }, []);\n  if (forbidden) return /*#__PURE__*/_jsxDEV(Forbidden, {\n    minHeight: 256\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  const config = {\n    data,\n    height: 256,\n    color: ['#0099ff', '#274060'],\n    areaStyle: {\n      fillOpacity: 1\n    },\n    xField: 'yearMonth',\n    yField: 'value',\n    seriesField: 'category',\n    legend: {\n      itemName: {\n        formatter(legend) {\n          return legend === 'totalRevenues' ? 'Receitas' : 'Despesas';\n        }\n\n      }\n    },\n    tooltip: {\n      title(title) {\n        return format(parseISO(title), 'MMMM yyyy', {\n          locale: ptBR\n        });\n      },\n\n      formatter(data) {\n        return {\n          name: data.category === 'totalRevenues' ? 'Receitas' : 'Despesas',\n          value: data.value.toLocaleString('pt-BR', {\n            currency: 'BRL',\n            style: 'currency',\n            maximumFractionDigits: 2\n          })\n        };\n      }\n\n    },\n    yAxis: false,\n    xAxis: {\n      label: {\n        formatter(item) {\n          return format(parseISO(item), 'MM/yyyy');\n        }\n\n      }\n    },\n    point: {\n      size: 5,\n      shape: 'circle'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Area, { ...config\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CompanyMetrics, \"dBLElJlHMU7f3dSdXcQa2PPE1e0=\");\n\n_c = CompanyMetrics;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyMetrics\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/app/features/CompanyMetrics.tsx"],"names":["Area","MetricService","ForbiddenError","format","parseISO","ptBR","useEffect","useState","transformDataIntoAntdChart","Forbidden","CompanyMetrics","data","setData","forbidden","setForbidden","getMonthlyRevenuesExpenses","then","catch","err","config","height","color","areaStyle","fillOpacity","xField","yField","seriesField","legend","itemName","formatter","tooltip","title","locale","name","category","value","toLocaleString","currency","style","maximumFractionDigits","yAxis","xAxis","label","item","point","size","shape"],"mappings":"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","sourcesContent":["import { Area, AreaConfig } from '@ant-design/charts';\nimport { MetricService } from 'danielbonifacio-sdk';\nimport { ForbiddenError } from 'danielbonifacio-sdk/dist/errors';\nimport format from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO';\nimport ptBR from 'date-fns/esm/locale/pt-BR';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport transformDataIntoAntdChart from '../../core/utils/transformDataIntoAntdChart';\nimport Forbidden from '../components/Forbidden';\n\nexport default function CompanyMetrics() {\n  const [data, setData] = useState<\n    {\n      yearMonth: string;\n      value: number;\n      category: 'totalRevenues' | 'totalExpenses';\n    }[]\n  >([]);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    MetricService.getMonthlyRevenuesExpenses()\n      .then(transformDataIntoAntdChart)\n      .then(setData)\n      .catch((err) => {\n        if (err instanceof ForbiddenError) {\n          setForbidden(true);\n          return;\n        }\n        throw err;\n      });\n  }, []);\n\n  if (forbidden) return <Forbidden minHeight={256} />;\n\n  const config: AreaConfig = {\n    data,\n    height: 256,\n    color: ['#0099ff', '#274060'],\n    areaStyle: { fillOpacity: 1 },\n    xField: 'yearMonth',\n    yField: 'value',\n    seriesField: 'category',\n    legend: {\n      itemName: {\n        formatter(legend) {\n          return legend === 'totalRevenues' ? 'Receitas' : 'Despesas';\n        },\n      },\n    },\n    tooltip: {\n      title(title) {\n        return format(parseISO(title), 'MMMM yyyy', {\n          locale: ptBR,\n        });\n      },\n      formatter(data) {\n        return {\n          name: data.category === 'totalRevenues' ? 'Receitas' : 'Despesas',\n          value: (data.value as number).toLocaleString('pt-BR', {\n            currency: 'BRL',\n            style: 'currency',\n            maximumFractionDigits: 2,\n          }),\n        };\n      },\n    },\n    yAxis: false,\n    xAxis: {\n      label: {\n        formatter(item) {\n          return format(parseISO(item), 'MM/yyyy');\n        },\n      },\n    },\n    point: {\n      size: 5,\n      shape: 'circle',\n    },\n  };\n  return <Area {...config} />;\n}\n"]},"metadata":{},"sourceType":"module"}