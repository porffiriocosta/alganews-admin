{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{CashFlowService}from'danielbonifacio-sdk';import getThunkStatus from'../utils/getThunkStatus';var initialState={fetching:false,expenses:[],revenues:[]};export var getCategories=createAsyncThunk('cash-flow/categories/getCategories',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_,_ref){var dispatch,rejectWithValue,categories,expensesCategories,revenuesCategories;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref.dispatch,rejectWithValue=_ref.rejectWithValue;_context.prev=1;_context.next=4;return CashFlowService.getAllCategories({sort:['id','desc']});case 4:categories=_context.sent;/**\n       * utilizando filtro local por que a API não prove uma forma\n       * de recuperar as categorias separadamente por tipo\n       *\n       * @todo: melhorar isso assim que a API prover um endpoint\n       */expensesCategories=categories.filter(function(c){return c.type==='EXPENSE';});revenuesCategories=categories.filter(function(c){return c.type==='REVENUE';});_context.next=9;return dispatch(storeExpenses(expensesCategories));case 9:_context.next=11;return dispatch(storeRevenues(revenuesCategories));case 11:_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue(_objectSpread({},_context.t0)));case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var createCategory=createAsyncThunk('cash-flow/categories/createCategory',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(category,_ref3){var dispatch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch;_context2.next=3;return CashFlowService.insertNewCategory(category);case 3:_context2.next=5;return dispatch(getCategories());case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());export var deleteCategory=createAsyncThunk('cash-flow/categories/deleteCategory',/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(categoryId,_ref5){var dispatch;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch=_ref5.dispatch;_context3.next=3;return CashFlowService.removeExistingCategory(categoryId);case 3:_context3.next=5;return dispatch(getCategories());case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref6.apply(this,arguments);};}());var entriesCategorySlice=createSlice({initialState:initialState,name:'cash-flow/categories',reducers:{storeExpenses:function storeExpenses(state,action){state.expenses=action.payload;},storeRevenues:function storeRevenues(state,action){state.revenues=action.payload;},storeFetching:function storeFetching(state,action){state.fetching=action.payload;}},extraReducers:function extraReducers(builder){var _getThunkStatus=getThunkStatus([getCategories,createCategory,deleteCategory]),error=_getThunkStatus.error,loading=_getThunkStatus.loading,success=_getThunkStatus.success;builder.addMatcher(error,function(state){state.fetching=false;}).addMatcher(success,function(state){state.fetching=false;}).addMatcher(loading,function(state){state.fetching=true;});}});var _entriesCategorySlice=entriesCategorySlice.actions,storeExpenses=_entriesCategorySlice.storeExpenses,storeFetching=_entriesCategorySlice.storeFetching,storeRevenues=_entriesCategorySlice.storeRevenues;export{storeExpenses,storeFetching,storeRevenues};var entriesCategoryReducer=entriesCategorySlice.reducer;export default entriesCategoryReducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/store/EntriesCategory.slice.ts"],"names":["createAsyncThunk","createSlice","CashFlowService","getThunkStatus","initialState","fetching","expenses","revenues","getCategories","_","dispatch","rejectWithValue","getAllCategories","sort","categories","expensesCategories","filter","c","type","revenuesCategories","storeExpenses","storeRevenues","createCategory","category","insertNewCategory","deleteCategory","categoryId","removeExistingCategory","entriesCategorySlice","name","reducers","state","action","payload","storeFetching","extraReducers","builder","error","loading","success","addMatcher","actions","entriesCategoryReducer","reducer"],"mappings":"8bAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA6D,kBAA7D,CACA,OAAmBC,eAAnB,KAA0C,qBAA1C,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CAQA,GAAMC,CAAAA,YAAkC,CAAG,CACzCC,QAAQ,CAAE,KAD+B,CAEzCC,QAAQ,CAAE,EAF+B,CAGzCC,QAAQ,CAAE,EAH+B,CAA3C,CAMA,MAAO,IAAMC,CAAAA,aAAa,CAAGR,gBAAgB,CAC3C,oCAD2C,2FAE3C,iBAAOS,CAAP,qMAAYC,QAAZ,MAAYA,QAAZ,CAAsBC,eAAtB,MAAsBA,eAAtB,uCAE6BT,CAAAA,eAAe,CAACU,gBAAhB,CAAiC,CACxDC,IAAI,CAAE,CAAC,IAAD,CAAO,MAAP,CADkD,CAAjC,CAF7B,QAEUC,UAFV,eAMI;AACN;AACA;AACA;AACA;AACA,SACYC,kBAZV,CAY+BD,UAAU,CAACE,MAAX,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,GAAW,SAAlB,EAAlB,CAZ/B,CAaUC,kBAbV,CAa+BL,UAAU,CAACE,MAAX,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,GAAW,SAAlB,EAAlB,CAb/B,uBAeUR,CAAAA,QAAQ,CAACU,aAAa,CAACL,kBAAD,CAAd,CAflB,+BAgBUL,CAAAA,QAAQ,CAACW,aAAa,CAACF,kBAAD,CAAd,CAhBlB,0HAkBWR,eAAe,+BAlB1B,uEAF2C,oEAAtC,CAyBP,MAAO,IAAMW,CAAAA,cAAc,CAAGtB,gBAAgB,CAC5C,qCAD4C,2FAE5C,kBAAOuB,QAAP,yIAA2Cb,QAA3C,OAA2CA,QAA3C,wBACQR,CAAAA,eAAe,CAACsB,iBAAhB,CAAkCD,QAAlC,CADR,+BAEQb,CAAAA,QAAQ,CAACF,aAAa,EAAd,CAFhB,yDAF4C,qEAAvC,CAQP,MAAO,IAAMiB,CAAAA,cAAc,CAAGzB,gBAAgB,CAC5C,qCAD4C,2FAE5C,kBAAO0B,UAAP,yIAA6BhB,QAA7B,OAA6BA,QAA7B,wBACQR,CAAAA,eAAe,CAACyB,sBAAhB,CAAuCD,UAAvC,CADR,+BAEQhB,CAAAA,QAAQ,CAACF,aAAa,EAAd,CAFhB,yDAF4C,qEAAvC,CAQP,GAAMoB,CAAAA,oBAAoB,CAAG3B,WAAW,CAAC,CACvCG,YAAY,CAAZA,YADuC,CAEvCyB,IAAI,CAAE,sBAFiC,CAGvCC,QAAQ,CAAE,CACRV,aADQ,wBACMW,KADN,CACaC,MADb,CACgE,CACtED,KAAK,CAACzB,QAAN,CAAiB0B,MAAM,CAACC,OAAxB,CACD,CAHO,CAIRZ,aAJQ,wBAIMU,KAJN,CAIaC,MAJb,CAIgE,CACtED,KAAK,CAACxB,QAAN,CAAiByB,MAAM,CAACC,OAAxB,CACD,CANO,CAORC,aAPQ,wBAOMH,KAPN,CAOaC,MAPb,CAO6C,CACnDD,KAAK,CAAC1B,QAAN,CAAiB2B,MAAM,CAACC,OAAxB,CACD,CATO,CAH6B,CAcvCE,aAduC,wBAczBC,OAdyB,CAchB,qBACejC,cAAc,CAAC,CACjDK,aADiD,CAEjDc,cAFiD,CAGjDG,cAHiD,CAAD,CAD7B,CACbY,KADa,iBACbA,KADa,CACNC,OADM,iBACNA,OADM,CACGC,OADH,iBACGA,OADH,CAOrBH,OAAO,CACJI,UADH,CACcH,KADd,CACqB,SAACN,KAAD,CAAW,CAC5BA,KAAK,CAAC1B,QAAN,CAAiB,KAAjB,CACD,CAHH,EAIGmC,UAJH,CAIcD,OAJd,CAIuB,SAACR,KAAD,CAAW,CAC9BA,KAAK,CAAC1B,QAAN,CAAiB,KAAjB,CACD,CANH,EAOGmC,UAPH,CAOcF,OAPd,CAOuB,SAACP,KAAD,CAAW,CAC9BA,KAAK,CAAC1B,QAAN,CAAiB,IAAjB,CACD,CATH,EAUD,CA/BsC,CAAD,CAAxC,C,0BAmCEuB,oBAAoB,CAACa,O,CADRrB,a,uBAAAA,a,CAAec,a,uBAAAA,a,CAAeb,a,uBAAAA,a,mDAG7C,GAAMqB,CAAAA,sBAAsB,CAAGd,oBAAoB,CAACe,OAApD,CACA,cAAeD,CAAAA,sBAAf","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface EntriesCategoryState {\n  fetching: boolean;\n  expenses: CashFlow.CategorySummary[];\n  revenues: CashFlow.CategorySummary[];\n}\n\nconst initialState: EntriesCategoryState = {\n  fetching: false,\n  expenses: [],\n  revenues: [],\n};\n\nexport const getCategories = createAsyncThunk(\n  'cash-flow/categories/getCategories',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      const categories = await CashFlowService.getAllCategories({\n        sort: ['id', 'desc'],\n      });\n\n      /**\n       * utilizando filtro local por que a API não prove uma forma\n       * de recuperar as categorias separadamente por tipo\n       *\n       * @todo: melhorar isso assim que a API prover um endpoint\n       */\n      const expensesCategories = categories.filter((c) => c.type === 'EXPENSE');\n      const revenuesCategories = categories.filter((c) => c.type === 'REVENUE');\n\n      await dispatch(storeExpenses(expensesCategories));\n      await dispatch(storeRevenues(revenuesCategories));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const createCategory = createAsyncThunk(\n  'cash-flow/categories/createCategory',\n  async (category: CashFlow.CategoryInput, { dispatch }) => {\n    await CashFlowService.insertNewCategory(category);\n    await dispatch(getCategories());\n  }\n);\n\nexport const deleteCategory = createAsyncThunk(\n  'cash-flow/categories/deleteCategory',\n  async (categoryId: number, { dispatch }) => {\n    await CashFlowService.removeExistingCategory(categoryId);\n    await dispatch(getCategories());\n  }\n);\n\nconst entriesCategorySlice = createSlice({\n  initialState,\n  name: 'cash-flow/categories',\n  reducers: {\n    storeExpenses(state, action: PayloadAction<CashFlow.CategorySummary[]>) {\n      state.expenses = action.payload;\n    },\n    storeRevenues(state, action: PayloadAction<CashFlow.CategorySummary[]>) {\n      state.revenues = action.payload;\n    },\n    storeFetching(state, action: PayloadAction<boolean>) {\n      state.fetching = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { error, loading, success } = getThunkStatus([\n      getCategories,\n      createCategory,\n      deleteCategory,\n    ]);\n\n    builder\n      .addMatcher(error, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const { storeExpenses, storeFetching, storeRevenues } =\n  entriesCategorySlice.actions;\n\nconst entriesCategoryReducer = entriesCategorySlice.reducer;\nexport default entriesCategoryReducer;\n"]},"metadata":{},"sourceType":"module"}