{"ast":null,"code":"import _regeneratorRuntime from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/ReactProjetos/alganews-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{CashFlowService}from'danielbonifacio-sdk';import moment from'moment';import getThunkStatus from'../utils/getThunkStatus';var params=new URLSearchParams(window.location.search);var yearMonth=params.get('yearMonth');var initialState={list:[],fetching:false,query:{type:'EXPENSE',sort:['transactedOn','desc'],yearMonth:yearMonth||moment().format('YYYY-MM')},selected:[]};export var getExpenses=createAsyncThunk('cash-flow/expenses/getExpenses',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_,_ref){var getState,dispatch,rejectWithValue,query,expenses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getState=_ref.getState,dispatch=_ref.dispatch,rejectWithValue=_ref.rejectWithValue;_context.prev=1;query=getState().cashFlow.expense.query;_context.next=5;return CashFlowService.getAllEntries(query);case 5:expenses=_context.sent;_context.next=8;return dispatch(storeList(expenses));case 8:_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue(_objectSpread({},_context.t0)));case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var createExpense=createAsyncThunk('cash-flow/expenses/createExpense',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(expense,_ref3){var dispatch,rejectWithValue;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch=_ref3.dispatch,rejectWithValue=_ref3.rejectWithValue;_context2.prev=1;_context2.next=4;return CashFlowService.insertNewEntry(expense);case 4:_context2.next=6;return dispatch(getExpenses());case 6:_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);return _context2.abrupt(\"return\",rejectWithValue(_objectSpread({},_context2.t0)));case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());export var updateExpense=createAsyncThunk('cash-flow/expenses/updateExpense',/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5,_ref6){var entry,entryId,dispatch,rejectWithValue;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:entry=_ref5.entry,entryId=_ref5.entryId;dispatch=_ref6.dispatch,rejectWithValue=_ref6.rejectWithValue;_context3.prev=2;_context3.next=5;return CashFlowService.updateExistingEntry(entryId,entry);case 5:_context3.next=7;return dispatch(getExpenses());case 7:_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](2);return _context3.abrupt(\"return\",rejectWithValue(_objectSpread({},_context3.t0)));case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[2,9]]);}));return function(_x5,_x6){return _ref7.apply(this,arguments);};}());export var removeExpense=createAsyncThunk('cash-flow/expenses/removeExpense',/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(expenseId,_ref8){var dispatch,rejectWithValue;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch=_ref8.dispatch,rejectWithValue=_ref8.rejectWithValue;_context4.prev=1;_context4.next=4;return CashFlowService.removeExistingEntry(expenseId);case 4:_context4.next=6;return dispatch(getExpenses());case 6:_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](1);return _context4.abrupt(\"return\",rejectWithValue(_objectSpread({},_context4.t0)));case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[1,8]]);}));return function(_x7,_x8){return _ref9.apply(this,arguments);};}());export var removeEntriesInBatch=createAsyncThunk('cash-flow/expenses/removeEntriesInBatch',/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(ids,_ref10){var dispatch;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch=_ref10.dispatch;_context5.next=3;return CashFlowService.removeEntriesBatch(ids);case 3:_context5.next=5;return dispatch(getExpenses());case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9,_x10){return _ref11.apply(this,arguments);};}());export var setQuery=createAsyncThunk('cash-flow/expenses/setQuery',/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(query,_ref12){var dispatch;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch=_ref12.dispatch;_context6.next=3;return dispatch(_setQuery(query));case 3:_context6.next=5;return dispatch(getExpenses());case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x11,_x12){return _ref13.apply(this,arguments);};}());var expenseSlice=createSlice({initialState:initialState,name:'cash-flow/expenses',reducers:{storeList:function storeList(state,action){state.list=action.payload;},setSelectedExpenses:function setSelectedExpenses(state,action){state.selected=action.payload;},setQuery:function setQuery(state,action){state.query=_objectSpread(_objectSpread({},state.query),action.payload);},setFetching:function setFetching(state,action){state.fetching=action.payload;}},extraReducers:function extraReducers(builder){var _getThunkStatus=getThunkStatus([getExpenses,removeEntriesInBatch,createExpense,updateExpense]),error=_getThunkStatus.error,loading=_getThunkStatus.loading,success=_getThunkStatus.success;builder.addMatcher(error,function(state){state.fetching=false;}).addMatcher(success,function(state){state.fetching=false;}).addMatcher(loading,function(state){state.fetching=true;});}});var _expenseSlice$actions=expenseSlice.actions,storeList=_expenseSlice$actions.storeList,setSelectedExpenses=_expenseSlice$actions.setSelectedExpenses,_setQuery=_expenseSlice$actions.setQuery,setFetching=_expenseSlice$actions.setFetching;export{storeList,setSelectedExpenses,_setQuery,setFetching};var expenseReducer=expenseSlice.reducer;export default expenseReducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-admin/src/core/store/Expense.slice.ts"],"names":["createAsyncThunk","createSlice","CashFlowService","moment","getThunkStatus","params","URLSearchParams","window","location","search","yearMonth","get","initialState","list","fetching","query","type","sort","format","selected","getExpenses","_","getState","dispatch","rejectWithValue","cashFlow","expense","getAllEntries","expenses","storeList","createExpense","insertNewEntry","updateExpense","entry","entryId","updateExistingEntry","removeExpense","expenseId","removeExistingEntry","removeEntriesInBatch","ids","removeEntriesBatch","setQuery","_setQuery","expenseSlice","name","reducers","state","action","payload","setSelectedExpenses","setFetching","extraReducers","builder","error","loading","success","addMatcher","actions","expenseReducer","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Key } from 'antd/lib/table/interface';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { RootState } from '.';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface ExpenseState {\n  list: CashFlow.EntrySummary[];\n  fetching: boolean;\n  query: CashFlow.Query;\n  selected: Key[];\n}\n\nconst params = new URLSearchParams(window.location.search);\nconst yearMonth = params.get('yearMonth');\n\nconst initialState: ExpenseState = {\n  list: [],\n  fetching: false,\n  query: {\n    type: 'EXPENSE',\n    sort: ['transactedOn', 'desc'],\n    yearMonth: yearMonth || moment().format('YYYY-MM'),\n  },\n  selected: [],\n};\n\nexport const getExpenses = createAsyncThunk(\n  'cash-flow/expenses/getExpenses',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    try {\n      const { query } = (getState() as RootState).cashFlow.expense;\n      const expenses = await CashFlowService.getAllEntries(query);\n      await dispatch(storeList(expenses));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const createExpense = createAsyncThunk(\n  'cash-flow/expenses/createExpense',\n  async (expense: CashFlow.EntryInput, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.insertNewEntry(expense);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const updateExpense = createAsyncThunk(\n  'cash-flow/expenses/updateExpense',\n  async (\n    { entry, entryId }: { entry: CashFlow.EntryInput; entryId: number },\n    { dispatch, rejectWithValue }\n  ) => {\n    try {\n      await CashFlowService.updateExistingEntry(entryId, entry);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeExpense = createAsyncThunk(\n  'cash-flow/expenses/removeExpense',\n  async (expenseId: number, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.removeExistingEntry(expenseId);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeEntriesInBatch = createAsyncThunk(\n  'cash-flow/expenses/removeEntriesInBatch',\n  async (ids: number[], { dispatch }) => {\n    await CashFlowService.removeEntriesBatch(ids);\n    await dispatch(getExpenses());\n  }\n);\n\nexport const setQuery = createAsyncThunk(\n  'cash-flow/expenses/setQuery',\n  async (query: Partial<CashFlow.Query>, { dispatch }) => {\n    await dispatch(_setQuery(query));\n    await dispatch(getExpenses());\n  }\n);\n\nconst expenseSlice = createSlice({\n  initialState,\n  name: 'cash-flow/expenses',\n  reducers: {\n    storeList(state, action: PayloadAction<CashFlow.EntrySummary[]>) {\n      state.list = action.payload;\n    },\n    setSelectedExpenses(state, action: PayloadAction<Key[]>) {\n      state.selected = action.payload;\n    },\n    setQuery(state, action: PayloadAction<Partial<CashFlow.Query>>) {\n      state.query = {\n        ...state.query,\n        ...action.payload,\n      };\n    },\n    setFetching(state, action: PayloadAction<boolean>) {\n      state.fetching = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { error, loading, success } = getThunkStatus([\n      getExpenses,\n      removeEntriesInBatch,\n      createExpense,\n      updateExpense,\n    ]);\n\n    builder\n      .addMatcher(error, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const {\n  storeList,\n  setSelectedExpenses,\n  setQuery: _setQuery,\n  setFetching,\n} = expenseSlice.actions;\n\nconst expenseReducer = expenseSlice.reducer;\nexport default expenseReducer;\n"]},"metadata":{},"sourceType":"module"}