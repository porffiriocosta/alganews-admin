{"version":3,"sources":["reportWebVitals.ts","core/utils/getThunkStatus.ts","core/store/Payment.slice.ts","core/store/User.reducer.ts","core/store/Expense.slice.ts","core/store/Revenue.slice.ts","core/store/EntriesCategory.slice.ts","core/store/Auth.slice.ts","core/store/UI.slice.ts","core/store/index.ts","core/hooks/useBreadcrumb.ts","app/layouts/Default/Breadcrumb.tsx","app/layouts/Default/Content.tsx","assets/logo.svg","core/hooks/useAuth.ts","auth/Authorization.service.ts","app/layouts/Default/Header.tsx","app/layouts/Default/Sidebar.tsx","app/layouts/Default/Default.layout.tsx","core/hooks/usePageTitle.tsx","core/utils/transformDataIntoAntdChart.ts","app/components/Forbidden.tsx","app/features/CompanyMetrics.tsx","app/features/LatestPosts.tsx","core/hooks/useLatestPosts.tsx","app/views/Home.view.tsx","app/components/CurrencyInput.tsx","app/features/UserForm.tsx","app/views/UserCreate.view.tsx","core/hooks/useUser.ts","app/components/NotFoundError.tsx","app/views/UserEdit.view.tsx","core/hooks/useUsers.ts","app/features/UserList.tsx","app/views/UserList.view.tsx","app/components/DoubleConfirm.tsx","app/views/PaymentList.view.tsx","core/hooks/usePayments.ts","core/hooks/usePayment.ts","core/utils/transformIntoBrl.ts","assets/illustrations/tax.svg","assets/illustrations/confusing.svg","app/features/AskForPaymentPreview.tsx","app/features/PaymentForm.tsx","app/views/PaymentCreate.view.tsx","core/hooks/useCashFlow.tsx","app/features/EntriesList.tsx","core/hooks/useEntriesCategories.ts","app/features/EntryCategoryManager.tsx","app/features/EntryForm.tsx","app/features/EntryDetails.tsx","app/features/EntryCRUD.tsx","app/views/CashFlowRevenues.view.tsx","app/views/CashFlowExpenses.view.tsx","core/utils/formatPhone.ts","app/views/UserDetails.view.tsx","core/hooks/usePosts.ts","app/features/PaymentBonuses.tsx","app/features/PaymentHeader.tsx","app/features/PaymentPosts.tsx","app/views/PaymentDetails.view.tsx","app/components/GlobalLoading.tsx","app/routes.tsx","auth/httpConfig.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getThunkStatus","thunks","success","isFulfilled","error","isRejected","loading","isPending","getAllPayments","createAsyncThunk","_","a","getState","dispatch","rejectWithValue","query","payment","PaymentService","paymentPaginated","storeList","approvePaymentsInBatch","paymentIds","approvePaymentsBatch","storeSelectedKeys","deleteExistingPayment","paymentId","removeExistingPayment","setQuery","storeQuery","PaymentSlice","createSlice","initialState","fetching","selected","sort","page","size","paginated","totalPages","totalElements","content","name","reducers","state","action","payload","extraReducers","builder","addMatcher","actions","PaymentReducer","reducer","getAllUsers","UserService","toggleUserStatus","user","active","deactivateExistingUser","id","activateExistingUser","createReducer","list","addCase","fulfilled","type","yearMonth","URLSearchParams","window","location","search","get","moment","format","getExpenses","cashFlow","expense","CashFlowService","getAllEntries","expenses","createExpense","insertNewEntry","updateExpense","entry","entryId","updateExistingEntry","removeExpense","expenseId","removeExistingEntry","removeEntriesInBatch","ids","removeEntriesBatch","_setQuery","expenseSlice","setSelectedExpenses","setFetching","expenseReducer","getRevenues","revenue","revenues","createRevenue","updateRevenue","removeRevenue","revenueId","revenueSlice","setSelectedRevenues","revenueReducer","getCategories","getAllCategories","categories","expensesCategories","filter","c","revenuesCategories","storeExpenses","storeRevenues","createCategory","category","insertNewCategory","deleteCategory","categoryId","removeExistingCategory","entriesCategorySlice","storeFetching","entriesCategoryReducer","fetchUser","userId","getDetailedUser","storeUser","authSlice","clearUser","authReducer","uiSlice","breadcrumb","setBreadcrumb","uiReducer","observeActions","next","shouldNotify","includes","message","meta","rejectedWithValue","notification","cashFlowReducer","combineReducers","store","configureStore","UserReducer","auth","ui","middleware","getDefaultMiddlewares","concat","useBreadcrumb","newBreadcrumb","useDispatch","useSelector","s","useEffect","split","Breadcrumb","className","style","margin","map","bc","index","Item","Content","Layout","DefaultLayoutContent","props","minHeight","children","useAuth","useCallback","AuthActions","unwrap","AUTH_BASE_URL","process","authServer","axios","create","baseURL","interceptors","response","use","undefined","status","AuthService","imperativelySendToLogout","Promise","reject","localStorage","clear","href","config","formUrlEncoded","qs","stringify","refresh_token","refreshToken","code_verifier","codeVerifier","grant_type","client_id","post","headers","res","data","code","redirect_uri","redirectUri","encodedData","codeChallenge","response_type","origin","code_challenge","code_challenge_method","pkceChallenge","this","setCodeVerifier","loginUrl","getLoginScreenUrl","getItem","token","setItem","getCodeVerifier","Header","DefaultLayoutHeader","justify","height","maxWidth","align","src","logo","alt","placement","overlay","width","bordered","title","description","color","role","icon","UserOutlined","to","LogoutOutlined","onClick","confirm","onOk","closable","okButtonProps","danger","okText","cancelText","avatarUrls","small","Sider","SubMenu","Menu","DefaultLayoutSidebar","lg","useBreakpoint","history","useHistory","useLocation","useState","show","setShow","SidebarWrapper","useMemo","Drawer","siderProps","drawerProps","visible","headerStyle","bodyStyle","padding","onClose","sidebarProps","MenuOutlined","position","top","left","zIndex","mode","defaultSelectedKeys","pathname","defaultOpenKeys","borderRight","HomeOutlined","push","TableOutlined","PlusCircleOutlined","LaptopOutlined","DiffOutlined","FallOutlined","RiseOutlined","DefaultLayout","usePageTitle","document","transformDataIntoAntdChart","item","value","totalRevenues","totalExpenses","flat","Forbidden","display","alignItems","direction","LockFilled","fontSize","Title","Paragraph","CompanyMetrics","setData","forbidden","setForbidden","MetricService","getMonthlyRevenuesExpenses","catch","err","ForbiddenError","areaStyle","fillOpacity","xField","yField","seriesField","legend","itemName","formatter","tooltip","parseISO","locale","ptBR","toLocaleString","currency","maximumFractionDigits","yAxis","xAxis","label","point","shape","LatestPosts","posts","setPosts","fetchPosts","PostService","getAllPosts","useLatestPosts","gutter","xs","md","cover","imageUrls","objectFit","Meta","avatar","editor","Typography","HomeView","span","level","CurrencyInput","convertValueToBrl","minimumFractionDigits","inputValue","setInputValue","onChange","e","cents","currentTarget","replace","reals","Number","TabPane","Tabs","UserForm","Form","useForm","form","setLoading","default","setAvatar","activeTab","setActiveTab","authenticatedUser","isEditorRole","setIsEditorRole","handleAvatarUpload","file","FileService","upload","avatarSource","setFieldsValue","avatarUrl","autoComplete","layout","onFinishFailed","fields","bankAccountErrors","personalDataErrors","errorFields","forEach","onFinish","console","log","userDTO","phone","taxpayerId","onUpdate","finally","insertNewUser","CustomError","objects","setFields","str","isNaN","errors","userMessage","detail","initialValues","rotate","grid","aspect","maxCount","onRemove","beforeUpload","fileList","uid","cursor","hidden","rules","required","max","placeholder","min","TextArea","rows","enum","disabled","canSensitiveDataBeUpdated","Option","sm","defaultActiveKey","activeKey","tab","mask","pricePerWord","Fragment","validator","field","Error","forceRender","htmlType","UserCreateView","useUser","setUser","notFound","setNotFound","ResourceNotFoundError","NotFoundError","justifyContent","flexDirection","gap","WarningFilled","Text","actionDestination","actionTitle","UserEditView","params","useParams","transformUserData","createdAt","updatedAt","birthdate","updateExistingUser","useUsers","users","editors","fetchUsers","UserActions","UserList","_fetchUsers","getColumnSearchProps","dataIndex","displayName","filterDropdown","selectedKeys","setSelectedKeys","clearFilters","marginBottom","target","onPressEnter","SearchOutlined","filterIcon","filtered","onFilter","record","toString","toLowerCase","ReloadOutlined","dataSource","pagination","rowKey","columns","responsive","render","column","email","EyeOutlined","EditOutlined","fixed","ellipsis","sorter","b","localeCompare","Date","canBeDeactivated","canBeActivated","checked","UserListView","DoubleConfirm","popConfirmTitle","onConfirm","modalTitle","modalContent","PaymentListView","payments","PaymentActions","fetchPayments","setSelected","keys","usePayments","length","block","MonthPicker","date","scheduledToYearMonth","p","f","order","current","total","pageSize","rowSelection","selectedRowKeys","getCheckboxProps","canBeApproved","payee","scheduledTo","starts","accountingPeriod","startsOn","ends","endsOn","approvedAt","canBeDeleted","DeleteOutlined","period","approvalDate","formattedApprovalDate","usePayment","setPayment","paymentPreview","setPaymentPreview","fetchingPosts","setFetchingPosts","fetchingPayment","setFetchingPayment","approvingPayment","setApprovingPayment","fetchingPaymentPreview","setFetchingPaymentPreview","schedulingPayment","setSchedulingPayment","paymentNotFound","setPaymentNotFound","postsNotFound","setPostsNotFound","fetchPayment","getExistingPayment","approvePayment","getExistingPaymentPosts","fetchPaymentPreview","getPaymentPreview","preview","schedulePayment","paymentInput","insertNewPayment","clearPaymentPreview","transformIntoBrl","AskForPaymentPreview","textAlign","confusing","tax","PaymentForm","setScheduledTo","paymentPreviewError","setPaymentPreviewError","updateScheduleDate","getFieldsValue","clearPaymentPreviewError","bonuses","BusinessError","handleFormChange","Array","isArray","debouncedHandleFormChange","debounce","handleFormSubmit","paymentDto","onFieldsChange","showSearch","filterOption","input","option","normalize","indexOf","RangePicker","disabledDate","isBefore","isAfter","add","labelStyle","earnings","words","grandTotalAmount","bonus","InfoCircleFilled","amount","totalAmount","bankAccount","bankCode","number","digit","agency","List","remove","initialValue","PlusOutlined","PaymentCreateView","useCashFlow","entries","fetchEntries","ExpensesActions","RevenuesActions","createEntry","updateEntry","removeEntry","removeEntries","EntriesList","didMount","useRef","transactedOn","onEdit","onDetail","allowClear","canBeEdited","useEntriesCategories","fetchCategories","CategoryActions","EntryCategoryManager","showCreationModal","setShowCreationModal","openCreationModal","closeCreationModal","footer","onCancel","destroyOnClose","CategoryForm","onSuccess","newCategoryDTO","CheckCircleOutlined","EntryForm","editingEntry","fetchingEntries","getExistingEntry","newEntryDTO","defaultValue","marginTop","EntryDetails","setEntry","fetchEntry","createdBy","updatedBy","EntryCRUD","setEditingEntry","detailedEntry","setDetailedEntry","showCategoryModal","setShowCategoryModal","showFormModal","setShowFormModal","showDetailsModal","setShowDetailsModal","openCategoryModal","closeCategoryModal","openFormModal","closeFormModal","openDetailsModal","closeDetailsModal","closeIcon","TagOutlined","CashFlowRevenuesView","CashFlowExpensesView","formatPhone","phoneNumber","numberArray","ddd","slice","join","firstSlice","lastSlice","UserDetailsView","setPage","loadingFetch","setLoadingFetch","loadingToggle","setLoadingToggle","fetchUserPosts","editorId","showAll","togglePostStatus","published","deactivateExistingPost","publishExistingPost","usePosts","bio","skills","skill","percent","percentage","country","city","element","PaymentBonuses","PaymentHeader","editorName","periodStart","periodEnd","postsEarnings","totalEarnings","PaymentPosts","price","PaymentDetailsView","PrinterOutlined","print","GlobalLoading","APP_BASE_URL","Routes","onunhandledrejection","reason","object","isInAuthorizationRoute","accessToken","getAccessToken","imperativelySendToLoginScreen","getFirstAccessTokens","access_token","setAccessToken","setRefreshToken","decodedToken","jwtDecode","identify","path","exact","component","REACT_APP_API_BASE_URL","Service","setBaseUrl","setRequestInterceptors","request","setResponseInterceptors","originalRequest","_retry","storage","getRefreshToken","getNewToken","tokens","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77fc0391.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { isFulfilled, isPending, isRejected } from '@reduxjs/toolkit';\nimport { AnyAsyncThunk } from '@reduxjs/toolkit/dist/matchers';\n\nexport default function getThunkStatus(\n  thunks: [AnyAsyncThunk, ...AnyAsyncThunk[]]\n) {\n  const success = isFulfilled(...thunks);\n  const error = isRejected(...thunks);\n  const loading = isPending(...thunks);\n\n  return { success, error, loading };\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Key } from 'antd/lib/table/interface';\nimport { Payment, PaymentService } from 'danielbonifacio-sdk';\nimport { RootState } from '.';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface PaymentState {\n  paginated: Payment.Paginated;\n  fetching: boolean;\n  query: Payment.Query;\n  selected: Key[];\n}\n\nconst initialState: PaymentState = {\n  fetching: false,\n  selected: [],\n  query: {\n    sort: ['scheduledTo', 'desc'],\n    page: 0,\n    size: 7,\n  },\n  paginated: {\n    page: 0,\n    size: 7,\n    totalPages: 1,\n    totalElements: 0,\n    content: [],\n  },\n};\n\nexport const getAllPayments = createAsyncThunk(\n  'payment/getAllPayments',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    try {\n      const {\n        payment: { query },\n      } = getState() as RootState;\n      const paymentPaginated = await PaymentService.getAllPayments(query);\n      await dispatch(storeList(paymentPaginated));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const approvePaymentsInBatch = createAsyncThunk(\n  'payment/approvePaymentsInBatch',\n  async (paymentIds: number[], { dispatch }) => {\n    await PaymentService.approvePaymentsBatch(paymentIds);\n    await dispatch(getAllPayments());\n    await dispatch(storeSelectedKeys([]));\n  }\n);\n\nexport const deleteExistingPayment = createAsyncThunk(\n  'payment/deleteExistingPayment',\n  async (paymentId: number, { dispatch }) => {\n    await PaymentService.removeExistingPayment(paymentId);\n    await dispatch(getAllPayments());\n    await dispatch(storeSelectedKeys([]));\n  }\n);\n\nexport const setQuery = createAsyncThunk(\n  'payment/setQuery',\n  async (query: Payment.Query, { dispatch }) => {\n    await dispatch(storeQuery(query));\n    await dispatch(getAllPayments());\n  }\n);\n\nconst PaymentSlice = createSlice({\n  initialState,\n  name: 'payment',\n  reducers: {\n    storeList(state, action: PayloadAction<Payment.Paginated>) {\n      state.paginated = action.payload;\n    },\n    storeQuery(state, action: PayloadAction<Payment.Query>) {\n      state.query = {\n        ...state.query,\n        ...action.payload,\n      };\n    },\n    storeSelectedKeys(state, action: PayloadAction<Key[]>) {\n      state.selected = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { success, error, loading } = getThunkStatus([\n      getAllPayments,\n      approvePaymentsInBatch,\n      deleteExistingPayment,\n    ]);\n\n    builder\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(error, (state, action) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const { storeQuery, storeList, storeSelectedKeys } =\n  PaymentSlice.actions;\n\nconst PaymentReducer = PaymentSlice.reducer;\nexport default PaymentReducer;\n","import {\n  createAsyncThunk,\n  createReducer,\n  isFulfilled,\n  isPending,\n  isRejected,\n} from '@reduxjs/toolkit';\nimport { User, UserService } from 'danielbonifacio-sdk';\n\ninterface UserState {\n  list: User.Summary[];\n  fetching: boolean;\n}\n\nconst initialState: UserState = {\n  fetching: false,\n  list: [],\n};\n\nexport const getAllUsers = createAsyncThunk(\n  'user/getAllUsers',\n  async (_, { rejectWithValue }) => {\n    try {\n      return await UserService.getAllUsers();\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const toggleUserStatus = createAsyncThunk(\n  'user/toggleUserStatus',\n  async (user: User.Summary | User.Detailed) => {\n    user.active\n      ? await UserService.deactivateExistingUser(user.id)\n      : await UserService.activateExistingUser(user.id);\n\n    return user;\n  }\n);\n\nexport default createReducer(initialState, (builder) => {\n  const success = isFulfilled(getAllUsers, toggleUserStatus);\n  const error = isRejected(getAllUsers, toggleUserStatus);\n  const loading = isPending(getAllUsers, toggleUserStatus);\n\n  builder\n    .addCase(getAllUsers.fulfilled, (state, action) => {\n      state.list = action.payload;\n    })\n    .addMatcher(success, (state) => {\n      state.fetching = false;\n    })\n    .addMatcher(error, (state, action) => {\n      state.fetching = false;\n    })\n    .addMatcher(loading, (state) => {\n      state.fetching = true;\n    });\n});\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Key } from 'antd/lib/table/interface';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { RootState } from '.';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface ExpenseState {\n  list: CashFlow.EntrySummary[];\n  fetching: boolean;\n  query: CashFlow.Query;\n  selected: Key[];\n}\n\nconst params = new URLSearchParams(window.location.search);\nconst yearMonth = params.get('yearMonth');\n\nconst initialState: ExpenseState = {\n  list: [],\n  fetching: false,\n  query: {\n    type: 'EXPENSE',\n    sort: ['transactedOn', 'desc'],\n    yearMonth: yearMonth || moment().format('YYYY-MM'),\n  },\n  selected: [],\n};\n\nexport const getExpenses = createAsyncThunk(\n  'cash-flow/expenses/getExpenses',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    try {\n      const { query } = (getState() as RootState).cashFlow.expense;\n      const expenses = await CashFlowService.getAllEntries(query);\n      await dispatch(storeList(expenses));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const createExpense = createAsyncThunk(\n  'cash-flow/expenses/createExpense',\n  async (expense: CashFlow.EntryInput, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.insertNewEntry(expense);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const updateExpense = createAsyncThunk(\n  'cash-flow/expenses/updateExpense',\n  async (\n    { entry, entryId }: { entry: CashFlow.EntryInput; entryId: number },\n    { dispatch, rejectWithValue }\n  ) => {\n    try {\n      await CashFlowService.updateExistingEntry(entryId, entry);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeExpense = createAsyncThunk(\n  'cash-flow/expenses/removeExpense',\n  async (expenseId: number, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.removeExistingEntry(expenseId);\n      await dispatch(getExpenses());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeEntriesInBatch = createAsyncThunk(\n  'cash-flow/expenses/removeEntriesInBatch',\n  async (ids: number[], { dispatch }) => {\n    await CashFlowService.removeEntriesBatch(ids);\n    await dispatch(getExpenses());\n  }\n);\n\nexport const setQuery = createAsyncThunk(\n  'cash-flow/expenses/setQuery',\n  async (query: Partial<CashFlow.Query>, { dispatch }) => {\n    await dispatch(_setQuery(query));\n    await dispatch(getExpenses());\n  }\n);\n\nconst expenseSlice = createSlice({\n  initialState,\n  name: 'cash-flow/expenses',\n  reducers: {\n    storeList(state, action: PayloadAction<CashFlow.EntrySummary[]>) {\n      state.list = action.payload;\n    },\n    setSelectedExpenses(state, action: PayloadAction<Key[]>) {\n      state.selected = action.payload;\n    },\n    setQuery(state, action: PayloadAction<Partial<CashFlow.Query>>) {\n      state.query = {\n        ...state.query,\n        ...action.payload,\n      };\n    },\n    setFetching(state, action: PayloadAction<boolean>) {\n      state.fetching = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { error, loading, success } = getThunkStatus([\n      getExpenses,\n      removeEntriesInBatch,\n      createExpense,\n      updateExpense,\n    ]);\n\n    builder\n      .addMatcher(error, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const {\n  storeList,\n  setSelectedExpenses,\n  setQuery: _setQuery,\n  setFetching,\n} = expenseSlice.actions;\n\nconst expenseReducer = expenseSlice.reducer;\nexport default expenseReducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Key } from 'antd/lib/table/interface';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { RootState } from '.';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface RevenueState {\n  list: CashFlow.EntrySummary[];\n  fetching: boolean;\n  query: CashFlow.Query;\n  selected: Key[];\n}\n\nconst initialState: RevenueState = {\n  list: [],\n  fetching: false,\n  query: {\n    type: 'REVENUE',\n    sort: ['transactedOn', 'desc'],\n    yearMonth: moment().format('YYYY-MM'),\n  },\n  selected: [],\n};\n\nexport const getRevenues = createAsyncThunk(\n  'cash-flow/revenues/getRevenues',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    try {\n      const { query } = (getState() as RootState).cashFlow.revenue;\n      const revenues = await CashFlowService.getAllEntries(query);\n      await dispatch(storeList(revenues));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const createRevenue = createAsyncThunk(\n  'cash-flow/revenues/createRevenue',\n  async (revenue: CashFlow.EntryInput, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.insertNewEntry(revenue);\n      await dispatch(getRevenues());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const updateRevenue = createAsyncThunk(\n  'cash-flow/revenues/updateRevenue',\n  async (\n    { entry, entryId }: { entry: CashFlow.EntryInput; entryId: number },\n    { dispatch, rejectWithValue }\n  ) => {\n    try {\n      await CashFlowService.updateExistingEntry(entryId, entry);\n      await dispatch(getRevenues());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeRevenue = createAsyncThunk(\n  'cash-flow/revenues/removeRevenue',\n  async (revenueId: number, { dispatch, rejectWithValue }) => {\n    try {\n      await CashFlowService.removeExistingEntry(revenueId);\n      await dispatch(getRevenues());\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const removeEntriesInBatch = createAsyncThunk(\n  'cash-flow/revenues/removeEntriesInBatch',\n  async (ids: number[], { dispatch }) => {\n    await CashFlowService.removeEntriesBatch(ids);\n    await dispatch(getRevenues());\n  }\n);\n\nexport const setQuery = createAsyncThunk(\n  'cash-flow/revenues/setQuery',\n  async (query: Partial<CashFlow.Query>, { dispatch }) => {\n    await dispatch(_setQuery(query));\n    await dispatch(getRevenues());\n  }\n);\n\nconst revenueSlice = createSlice({\n  initialState,\n  name: 'cash-flow/revenues',\n  reducers: {\n    storeList(state, action: PayloadAction<CashFlow.EntrySummary[]>) {\n      state.list = action.payload;\n    },\n    setSelectedRevenues(state, action: PayloadAction<Key[]>) {\n      state.selected = action.payload;\n    },\n    setQuery(state, action: PayloadAction<Partial<CashFlow.Query>>) {\n      state.query = {\n        ...state.query,\n        ...action.payload,\n      };\n    },\n    setFetching(state, action: PayloadAction<boolean>) {\n      state.fetching = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { error, loading, success } = getThunkStatus([\n      getRevenues,\n      removeEntriesInBatch,\n      createRevenue,\n    ]);\n\n    builder\n      .addMatcher(error, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const {\n  storeList,\n  setSelectedRevenues,\n  setQuery: _setQuery,\n  setFetching,\n} = revenueSlice.actions;\n\nconst revenueReducer = revenueSlice.reducer;\nexport default revenueReducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport getThunkStatus from '../utils/getThunkStatus';\n\ninterface EntriesCategoryState {\n  fetching: boolean;\n  expenses: CashFlow.CategorySummary[];\n  revenues: CashFlow.CategorySummary[];\n}\n\nconst initialState: EntriesCategoryState = {\n  fetching: false,\n  expenses: [],\n  revenues: [],\n};\n\nexport const getCategories = createAsyncThunk(\n  'cash-flow/categories/getCategories',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      const categories = await CashFlowService.getAllCategories({\n        sort: ['id', 'desc'],\n      });\n\n      /**\n       * utilizando filtro local por que a API não prove uma forma\n       * de recuperar as categorias separadamente por tipo\n       *\n       * @todo: melhorar isso assim que a API prover um endpoint\n       */\n      const expensesCategories = categories.filter((c) => c.type === 'EXPENSE');\n      const revenuesCategories = categories.filter((c) => c.type === 'REVENUE');\n\n      await dispatch(storeExpenses(expensesCategories));\n      await dispatch(storeRevenues(revenuesCategories));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nexport const createCategory = createAsyncThunk(\n  'cash-flow/categories/createCategory',\n  async (category: CashFlow.CategoryInput, { dispatch }) => {\n    await CashFlowService.insertNewCategory(category);\n    await dispatch(getCategories());\n  }\n);\n\nexport const deleteCategory = createAsyncThunk(\n  'cash-flow/categories/deleteCategory',\n  async (categoryId: number, { dispatch }) => {\n    await CashFlowService.removeExistingCategory(categoryId);\n    await dispatch(getCategories());\n  }\n);\n\nconst entriesCategorySlice = createSlice({\n  initialState,\n  name: 'cash-flow/categories',\n  reducers: {\n    storeExpenses(state, action: PayloadAction<CashFlow.CategorySummary[]>) {\n      state.expenses = action.payload;\n    },\n    storeRevenues(state, action: PayloadAction<CashFlow.CategorySummary[]>) {\n      state.revenues = action.payload;\n    },\n    storeFetching(state, action: PayloadAction<boolean>) {\n      state.fetching = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    const { error, loading, success } = getThunkStatus([\n      getCategories,\n      createCategory,\n      deleteCategory,\n    ]);\n\n    builder\n      .addMatcher(error, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(success, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(loading, (state) => {\n        state.fetching = true;\n      });\n  },\n});\n\nexport const { storeExpenses, storeFetching, storeRevenues } =\n  entriesCategorySlice.actions;\n\nconst entriesCategoryReducer = entriesCategorySlice.reducer;\nexport default entriesCategoryReducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User, UserService } from 'danielbonifacio-sdk';\n\ntype PA<T> = PayloadAction<T>;\n\ninterface AuthState {\n  user: User.Detailed | null;\n  fetching: boolean;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  fetching: false,\n};\n\nexport const fetchUser = createAsyncThunk(\n  'auth/fetchUser',\n  async (userId: number, { rejectWithValue, dispatch }) => {\n    try {\n      const user = await UserService.getDetailedUser(userId);\n      dispatch(storeUser(user));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  initialState,\n  name: 'auth',\n  reducers: {\n    storeUser(state, action: PA<User.Detailed>) {\n      state.user = action.payload;\n    },\n    clearUser(state) {\n      state.user = null;\n    },\n  },\n});\n\nexport const { storeUser, clearUser } = authSlice.actions;\n\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface UIState {\n  breadcrumb: string[];\n}\n\nconst initialState: UIState = {\n  breadcrumb: [],\n};\n\nconst uiSlice = createSlice({\n  initialState,\n  name: 'ui',\n  reducers: {\n    setBreadcrumb(state, action: PayloadAction<string[]>) {\n      state.breadcrumb = action.payload;\n    },\n  },\n});\n\nexport const { setBreadcrumb } = uiSlice.actions;\n\nconst uiReducer = uiSlice.reducer;\nexport default uiReducer;\n","import {\n  combineReducers,\n  configureStore,\n  isRejected,\n  Middleware,\n} from '@reduxjs/toolkit';\nimport { notification } from 'antd';\nimport PaymentReducer from './Payment.slice';\nimport UserReducer from './User.reducer';\nimport expenseReducer from './Expense.slice';\nimport revenueReducer from './Revenue.slice';\nimport entriesCategoryReducer from './EntriesCategory.slice';\nimport authReducer from './Auth.slice';\nimport uiReducer from './UI.slice';\n\nconst observeActions: Middleware = () => (next) => (action) => {\n  if (isRejected(action)) {\n    const ignoredActions = [\n      'cash-flow/categories/createCategory/rejected',\n      'cash-flow/categories/deleteCategory/rejected',\n      'cash-flow/expenses/createExpense/rejected',\n      'cash-flow/revenues/createRevenue/rejected',\n      'user/getAllUsers/rejected',\n    ];\n\n    const shouldNotify = !ignoredActions.includes(action.type);\n    const message = action.meta.rejectedWithValue\n      ? action.payload.message\n      : action.error.message;\n\n    if (shouldNotify) {\n      notification.error({\n        message,\n      });\n    }\n  }\n\n  next(action);\n};\n\nconst cashFlowReducer = combineReducers({\n  expense: expenseReducer,\n  revenue: revenueReducer,\n  category: entriesCategoryReducer,\n});\n\nexport const store = configureStore({\n  reducer: {\n    user: UserReducer,\n    payment: PaymentReducer,\n    cashFlow: cashFlowReducer,\n    auth: authReducer,\n    ui: uiReducer,\n  },\n  middleware: function (getDefaultMiddlewares) {\n    return getDefaultMiddlewares().concat(observeActions);\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store';\nimport { setBreadcrumb } from '../store/UI.slice';\n\nexport default function useBreadcrumb(newBreadcrumb?: string) {\n  const dispatch = useDispatch();\n  const breadcrumb = useSelector((s: RootState) => s.ui.breadcrumb);\n\n  useEffect(() => {\n    if (newBreadcrumb) dispatch(setBreadcrumb(newBreadcrumb.split('/')));\n  }, [dispatch, newBreadcrumb]);\n\n  return {\n    breadcrumb,\n  };\n}\n","import { Breadcrumb as AntdBreadcrumb } from 'antd';\nimport useBreadcrumb from '../../../core/hooks/useBreadcrumb';\n\nexport default function Breadcrumb() {\n  const { breadcrumb } = useBreadcrumb();\n  return (\n    <AntdBreadcrumb className='no-print' style={{ margin: '16px 0' }}>\n      {breadcrumb.map((bc, index) => (\n        <AntdBreadcrumb.Item key={index}>{bc}</AntdBreadcrumb.Item>\n      ))}\n    </AntdBreadcrumb>\n  );\n}\n","import { Layout } from 'antd';\n\nconst { Content } = Layout;\n\ninterface DefaultLayoutContentProps {\n  children: React.ReactNode;\n}\nexport default function DefaultLayoutContent(props: DefaultLayoutContentProps) {\n  return (\n    <Content\n      className='site-layout-background'\n      style={{\n        margin: 0,\n        minHeight: 280,\n      }}\n    >\n      {props.children}\n    </Content>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.3315c961.svg\";","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as AuthActions from '../store/Auth.slice';\n\nexport default function useAuth() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const user = useSelector((s: RootState) => s.auth.user);\n  const fetching = useSelector((s: RootState) => s.auth.fetching);\n\n  const fetchUser = useCallback(\n    (userId: number) => {\n      return dispatch(AuthActions.fetchUser(userId)).unwrap();\n    },\n    [dispatch]\n  );\n\n  return {\n    user,\n    fetching,\n    fetchUser,\n  };\n}\n","import axios from 'axios';\nimport qs from 'qs';\nimport pkceChallenge from 'pkce-challenge';\n\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\nconst AUTH_BASE_URL = process.env.REACT_APP_AUTH_SERVER_BASE_URL;\n\nconst authServer = axios.create({\n  baseURL: AUTH_BASE_URL,\n});\n\nauthServer.interceptors.response.use(undefined, async (error) => {\n  if (error?.response?.status === 401) {\n    AuthService.imperativelySendToLogout();\n  }\n\n  return Promise.reject(error);\n});\n\nexport interface OAuthAuthorizationTokenResponse {\n  access_token: string;\n  refresh_token: string;\n  token_type: 'bearer' | string;\n  expires_in: number;\n  scope: string;\n  [key: string]: string | number;\n}\n\nexport default class AuthService {\n  public static imperativelySendToLogout() {\n    window.localStorage.clear();\n    window.location.href = `${AUTH_BASE_URL}/logout?redirect=${APP_BASE_URL}`;\n  }\n\n  public static async getNewToken(config: {\n    refreshToken: string;\n    codeVerifier: string;\n  }) {\n    const formUrlEncoded = qs.stringify({\n      refresh_token: config.refreshToken,\n      code_verifier: config.codeVerifier,\n      grant_type: 'refresh_token',\n      client_id: 'alganews-admin',\n    });\n\n    return authServer\n      .post<OAuthAuthorizationTokenResponse>('/oauth/token', formUrlEncoded, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .then((res) => res.data);\n  }\n\n  public static async getFirstAccessTokens(config: {\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n  }) {\n    const data = {\n      code: config.code,\n      code_verifier: config.codeVerifier,\n      redirect_uri: config.redirectUri,\n      grant_type: 'authorization_code',\n      client_id: 'alganews-admin',\n    };\n\n    const encodedData = qs.stringify(data);\n\n    return authServer\n      .post<OAuthAuthorizationTokenResponse>('/oauth/token', encodedData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      })\n      .then((res) => res.data);\n  }\n\n  public static getLoginScreenUrl(codeChallenge: string) {\n    const config = qs.stringify({\n      response_type: 'code',\n      client_id: 'alganews-admin',\n      redirect_uri: `${window.location.origin}/authorize`,\n      code_challenge: codeChallenge,\n      code_challenge_method: 'S256',\n    });\n\n    return `${AUTH_BASE_URL}/oauth/authorize?${config}`;\n  }\n\n  public static async imperativelySendToLoginScreen() {\n    const { code_challenge, code_verifier } = await pkceChallenge();\n    this.setCodeVerifier(code_verifier);\n\n    const loginUrl = this.getLoginScreenUrl(code_challenge);\n\n    // imperativo\n    // gera efeito colateral\n    window.location.href = loginUrl;\n  }\n\n  public static getAccessToken() {\n    return window.localStorage.getItem('accessToken');\n  }\n  public static setAccessToken(token: string) {\n    return window.localStorage.setItem('accessToken', token);\n  }\n\n  public static getRefreshToken() {\n    return window.localStorage.getItem('refreshToken');\n  }\n  public static setRefreshToken(token: string) {\n    return window.localStorage.setItem('refreshToken', token);\n  }\n\n  public static getCodeVerifier() {\n    return window.localStorage.getItem('codeVerifier');\n  }\n  public static setCodeVerifier(getCodeVerifier: string) {\n    return window.localStorage.setItem('codeVerifier', getCodeVerifier);\n  }\n}","import { Card, Dropdown, Layout, Menu, Row, Tag } from 'antd';\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport Meta from 'antd/lib/card/Meta';\nimport logo from '../../../assets/logo.svg';\nimport useAuth from '../../../core/hooks/useAuth';\nimport { Link } from 'react-router-dom';\nimport confirm from 'antd/lib/modal/confirm';\nimport AuthService from '../../../auth/Authorization.service';\n\nconst { Header } = Layout;\n\nexport default function DefaultLayoutHeader() {\n  const { user } = useAuth();\n\n  return (\n    <Header className='header no-print'>\n      <Row\n        justify='space-between'\n        style={{\n          height: '100%',\n          maxWidth: 1190,\n          margin: '0 auto',\n        }}\n        align='middle'\n      >\n        <img src={logo} alt={'AlgaNews Admin'} />\n        <Dropdown\n          placement={'bottomRight'}\n          overlay={\n            <Menu style={{ width: 220 }}>\n              <Card bordered={false}>\n                <Meta\n                  title={user?.name}\n                  description={\n                    <Tag color={user?.role === 'MANAGER' ? 'red' : 'blue'}>\n                      {user?.role === 'EDITOR'\n                        ? 'Editor'\n                        : user?.role === 'MANAGER'\n                        ? 'Gerente'\n                        : 'Assistente'}\n                    </Tag>\n                  }\n                />\n              </Card>\n              <Menu.Item icon={<UserOutlined />}>\n                <Link to={`/usuarios/${user?.id}`}>Meu perfil</Link>\n              </Menu.Item>\n              <Menu.Item\n                icon={<LogoutOutlined />}\n                onClick={() =>\n                  confirm({\n                    title: 'Fazer logout',\n                    content:\n                      'Deseja realmente fazer o logout? Será necessário inserir as credenciais novamente.',\n                    onOk() {\n                      AuthService.imperativelySendToLogout();\n                    },\n                    closable: true,\n                    okButtonProps: { danger: true },\n                    okText: 'Fazer logout',\n                    cancelText: 'Permanecer logado',\n                  })\n                }\n                danger\n              >\n                Fazer logout\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Avatar src={user?.avatarUrls.small} />\n        </Dropdown>\n      </Row>\n    </Header>\n  );\n}\n","import { Menu, Layout, Drawer, DrawerProps, Button } from 'antd';\nimport {\n  UserOutlined,\n  LaptopOutlined,\n  DiffOutlined,\n  HomeOutlined,\n  TableOutlined,\n  PlusCircleOutlined,\n  FallOutlined,\n  RiseOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport { useState } from 'react';\nimport { useMemo } from 'react';\nimport { SiderProps } from 'antd/lib/layout';\n\nimport logo from '../../../assets/logo.svg';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function DefaultLayoutSidebar() {\n  const { lg } = useBreakpoint();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [show, setShow] = useState(true);\n\n  const SidebarWrapper: React.FC = useMemo(() => (lg ? Sider : Drawer), [lg]);\n\n  const siderProps = useMemo((): SiderProps => {\n    return {\n      width: 200,\n      className: 'site-layout-background no-print',\n    };\n  }, []);\n\n  const drawerProps = useMemo((): DrawerProps => {\n    return {\n      visible: show,\n      closable: true,\n      title: (\n        <>\n          <img src={logo} alt={'logo alga news'} />\n        </>\n      ),\n      headerStyle: {\n        height: 64,\n      },\n      bodyStyle: {\n        padding: 0,\n      },\n      onClose() {\n        setShow(false);\n      },\n      placement: 'left',\n    };\n  }, [show]);\n\n  const sidebarProps = useMemo(() => {\n    return lg ? siderProps : drawerProps;\n  }, [lg, siderProps, drawerProps]);\n\n  return (\n    <>\n      {!lg && (\n        <Button\n          icon={<MenuOutlined />}\n          onClick={() => setShow(true)}\n          type={'text'}\n          style={{ position: 'fixed', top: 0, left: 0, height: 64, zIndex: 99 }}\n        />\n      )}\n      <SidebarWrapper {...sidebarProps}>\n        <Menu\n          mode='inline'\n          defaultSelectedKeys={[location.pathname]}\n          defaultOpenKeys={[location.pathname.split('/')[1]]}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <Menu.Item key={'/'} icon={<HomeOutlined />}>\n            <Link to={'/'}>Home</Link>\n          </Menu.Item>\n          <SubMenu key='usuarios' icon={<UserOutlined />} title='Usuários'>\n            <Menu.Item\n              key='/usuarios'\n              onClick={() => history.push('/usuarios')}\n              icon={<TableOutlined />}\n            >\n              <Link to={'/usuarios'}>Consulta</Link>\n            </Menu.Item>\n            <Menu.Item\n              key='/usuarios/cadastro'\n              onClick={() => history.push('/usuarios/cadastro')}\n              icon={<PlusCircleOutlined />}\n            >\n              <Link to={'/usuarios/cadastro'}>Cadastro</Link>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key='pagamentos'\n            icon={<LaptopOutlined />}\n            title='Pagamentos'\n          >\n            <Menu.Item\n              key='/pagamentos'\n              onClick={() => history.push('/pagamentos')}\n              icon={<TableOutlined />}\n            >\n              <Link to={'/pagamentos'}>Consulta</Link>\n            </Menu.Item>\n            <Menu.Item\n              key='/pagamentos/cadastro'\n              onClick={() => history.push('/pagamentos/cadastro')}\n              icon={<PlusCircleOutlined />}\n            >\n              <Link to={'/pagamentos/cadastro'}>Cadastro</Link>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key='fluxo-de-caixa'\n            icon={<DiffOutlined />}\n            title='Fluxo de Caixa'\n          >\n            <Menu.Item\n              key='/fluxo-de-caixa/despesas'\n              onClick={() => history.push('/fluxo-de-caixa/despesas')}\n              icon={<FallOutlined />}\n            >\n              <Link to={'/fluxo-de-caixa/despesas'}>Despesa</Link>\n            </Menu.Item>\n            <Menu.Item\n              key='/fluxo-de-caixa/receitas'\n              onClick={() => history.push('/fluxo-de-caixa/receitas')}\n              icon={<RiseOutlined />}\n            >\n              <Link to={'/fluxo-de-caixa/receitas'}>Receita</Link>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </SidebarWrapper>\n    </>\n  );\n}\n","import { Layout } from 'antd';\n\nimport Breadcrumb from './Breadcrumb';\nimport DefaultLayoutContent from './Content';\nimport DefaultLayoutHeader from './Header';\nimport DefaultLayoutSidebar from './Sidebar';\n\ninterface DefaultLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function DefaultLayout(props: DefaultLayoutProps) {\n  return (\n    <Layout>\n      <DefaultLayoutHeader />\n      <Layout id={'PageLayout'}>\n        <DefaultLayoutSidebar />\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Breadcrumb />\n          <DefaultLayoutContent>{props.children}</DefaultLayoutContent>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n","import { useEffect } from 'react';\n\nexport default function usePageTitle(title: string) {\n  const BASE_TITLE = 'AlgaNews';\n  useEffect(() => {\n    document.title = `${title} - ${BASE_TITLE}`;\n  }, []); // eslint-disable-line\n}\n","import { Metric } from 'danielbonifacio-sdk';\n\nexport default function transformDataIntoAntdChart(\n  data: Metric.MonthlyRevenuesExpenses\n) {\n  return data\n    .map((item) => {\n      return [\n        {\n          yearMonth: item.yearMonth,\n          value: item.totalRevenues,\n          category: 'totalRevenues' as\n            | 'totalRevenues'\n            | 'totalExpenses',\n        },\n        {\n          yearMonth: item.yearMonth,\n          value: item.totalExpenses,\n          category: 'totalExpenses' as\n            | 'totalRevenues'\n            | 'totalExpenses',\n        },\n      ];\n    })\n    .flat();\n}\n","import { Card, Space, Typography } from 'antd';\nimport { LockFilled } from '@ant-design/icons';\n\nexport default function Forbidden(props: { minHeight?: number }) {\n  return (\n    <Card\n      style={{\n        minHeight: props.minHeight,\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Space direction={'vertical'}>\n        <Space align={'center'}>\n          <LockFilled style={{ fontSize: 32 }} />\n          <Typography.Title style={{ margin: 0 }}>\n            Acesso negado\n          </Typography.Title>\n        </Space>\n        <Typography.Paragraph>\n          Você não tem permissão para visualizar estes dados\n        </Typography.Paragraph>\n      </Space>\n    </Card>\n  );\n}\n","import { Area, AreaConfig } from '@ant-design/charts';\nimport { MetricService } from 'danielbonifacio-sdk';\nimport { ForbiddenError } from 'danielbonifacio-sdk/dist/errors';\nimport format from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO';\nimport ptBR from 'date-fns/esm/locale/pt-BR';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport transformDataIntoAntdChart from '../../core/utils/transformDataIntoAntdChart';\nimport Forbidden from '../components/Forbidden';\n\nexport default function CompanyMetrics() {\n  const [data, setData] = useState<\n    {\n      yearMonth: string;\n      value: number;\n      category: 'totalRevenues' | 'totalExpenses';\n    }[]\n  >([]);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    MetricService.getMonthlyRevenuesExpenses()\n      .then(transformDataIntoAntdChart)\n      .then(setData)\n      .catch((err) => {\n        if (err instanceof ForbiddenError) {\n          setForbidden(true);\n          return;\n        }\n        throw err;\n      });\n  }, []);\n\n  if (forbidden) return <Forbidden minHeight={256} />;\n\n  const config: AreaConfig = {\n    data,\n    height: 256,\n    color: ['#0099ff', '#274060'],\n    areaStyle: { fillOpacity: 1 },\n    xField: 'yearMonth',\n    yField: 'value',\n    seriesField: 'category',\n    legend: {\n      itemName: {\n        formatter(legend) {\n          return legend === 'totalRevenues' ? 'Receitas' : 'Despesas';\n        },\n      },\n    },\n    tooltip: {\n      title(title) {\n        return format(parseISO(title), 'MMMM yyyy', {\n          locale: ptBR,\n        });\n      },\n      formatter(data) {\n        return {\n          name: data.category === 'totalRevenues' ? 'Receitas' : 'Despesas',\n          value: (data.value as number).toLocaleString('pt-BR', {\n            currency: 'BRL',\n            style: 'currency',\n            maximumFractionDigits: 2,\n          }),\n        };\n      },\n    },\n    yAxis: false,\n    xAxis: {\n      label: {\n        formatter(item) {\n          return format(parseISO(item), 'MM/yyyy');\n        },\n      },\n    },\n    point: {\n      size: 5,\n      shape: 'circle',\n    },\n  };\n  return <Area {...config} />;\n}\n","import { Card, Col, Row, Avatar } from 'antd';\nimport { useEffect } from 'react';\nimport useLatestPosts from '../../core/hooks/useLatestPosts';\n\nexport default function LatestPosts() {\n  const { fetchPosts, posts } = useLatestPosts();\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n\n  return (\n    <Row gutter={16}>\n      {posts?.map((post) => {\n        return (\n          <Col key={post.id} xs={24} md={8}>\n            <Card\n              cover={\n                <img\n                  alt={post.title}\n                  src={post.imageUrls.small}\n                  style={{\n                    height: 168,\n                    objectFit: 'cover',\n                  }}\n                />\n              }\n            >\n              <Card.Meta\n                avatar={\n                  <Avatar\n                    src={post.editor.avatarUrls.small}\n                  />\n                }\n                title={post.title}\n              />\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n}\n","import { Post, PostService } from 'danielbonifacio-sdk';\nimport { useCallback, useState } from 'react';\n\nexport default function useLatestPosts() {\n  const [posts, setPosts] = useState<Post.Paginated>();\n\n  const fetchPosts = useCallback(() => {\n    PostService.getAllPosts({\n      sort: ['createdAt', 'desc'],\n      page: 0,\n      size: 3,\n    }).then(setPosts);\n  }, []);\n\n  return {\n    posts: posts?.content,\n    fetchPosts,\n  };\n}\n","import { Col, Divider, Row, Space, Typography } from 'antd';\nimport useAuth from '../../core/hooks/useAuth';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport CompanyMetrics from '../features/CompanyMetrics';\nimport LatestPosts from '../features/LatestPosts';\n\nconst { Title, Paragraph } = Typography;\n\nfunction HomeView() {\n  usePageTitle('Home');\n  useBreadcrumb('Home');\n  const { user } = useAuth();\n\n  return (\n    <Space direction='vertical' size={'small'} style={{ maxWidth: '100%' }}>\n      <Row>\n        <Col span={24}>\n          <Title level={2}>Olá, {user?.name}</Title>\n          <Paragraph>\n            Este é o resumo da empresa nos últimos doze meses\n          </Paragraph>\n        </Col>\n        <Col span={24}>\n          <CompanyMetrics />\n        </Col>\n      </Row>\n      <Divider />\n      <Row>\n        <Col span={24}>\n          <Title level={3}>Últimos posts</Title>\n        </Col>\n        <Col span={24}>\n          <LatestPosts />\n        </Col>\n      </Row>\n    </Space>\n  );\n}\n\nexport default HomeView;\n","import React from 'react';\nimport { useCallback } from 'react';\nimport { useState } from 'react';\n\ntype CurrencyInputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'onChange'\n> & {\n  onChange: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    reals: number\n  ) => any;\n};\nexport default function CurrencyInput(\n  props: CurrencyInputProps\n) {\n  const convertValueToBrl = useCallback((value: number) => {\n    return value.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL',\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n  }, []);\n\n  const [inputValue, setInputValue] = useState(\n    typeof props.value === 'number'\n      ? convertValueToBrl(props.value)\n      : props.value\n  );\n\n  return (\n    <input\n      className={'ant-input'}\n      {...props}\n      value={inputValue}\n      onChange={(e) => {\n        const { value } = e.currentTarget;\n\n        const cents = value.replace(/[^(0-9)]/gi, '');\n\n        const reals = Number(cents) / 100;\n\n        setInputValue(convertValueToBrl(reals));\n        props.onChange && props.onChange(e, reals);\n      }}\n    />\n  );\n}\n","import {\n  Col,\n  Form,\n  Input,\n  Row,\n  Avatar,\n  DatePicker,\n  Divider,\n  Select,\n  Tabs,\n  Upload,\n  Button,\n  notification,\n} from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FileService, User, UserService } from 'danielbonifacio-sdk';\nimport { UserOutlined } from '@ant-design/icons';\nimport ImageCrop from 'antd-img-crop';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport MaskedInput from 'antd-mask-input';\nimport { Moment } from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport CurrencyInput from '../components/CurrencyInput';\nimport useAuth from '../../core/hooks/useAuth';\nconst { TabPane } = Tabs;\n\ntype UserFormType = {\n  createdAt: Moment;\n  updatedAt: Moment;\n  birthdate: Moment;\n} & Omit<User.Detailed, 'createdAt' | 'updatedAt' | 'birthdate'>;\n\ninterface UserFormProps {\n  user?: UserFormType;\n  onUpdate?: (user: User.Input) => Promise<any>;\n}\n\nexport default function UserForm(props: UserFormProps) {\n  const history = useHistory();\n  const [form] = Form.useForm<User.Input>();\n  const [loading, setLoading] = useState(false);\n\n  const [avatar, setAvatar] = useState(props.user?.avatarUrls.default || '');\n  const [activeTab, setActiveTab] = useState<'personal' | 'bankAccount'>(\n    'personal'\n  );\n\n  const { user: authenticatedUser } = useAuth();\n\n  const [isEditorRole, setIsEditorRole] = useState(\n    props.user?.role === 'EDITOR'\n  );\n\n  const handleAvatarUpload = useCallback(async (file: File) => {\n    const avatarSource = await FileService.upload(file);\n    setAvatar(avatarSource);\n  }, []);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      avatarUrl: avatar || undefined,\n    });\n  }, [avatar, form]);\n\n  return (\n    <Form\n      form={form}\n      autoComplete={'off'}\n      layout={'vertical'}\n      onFinishFailed={(fields) => {\n        let bankAccountErrors = 0;\n        let personalDataErrors = 0;\n\n        fields.errorFields.forEach(({ name }) => {\n          if (name.includes('bankAccount')) bankAccountErrors++;\n          if (\n            name.includes('location') ||\n            name.includes('skills') ||\n            name.includes('phone') ||\n            name.includes('taxpayerId') ||\n            name.includes('pricePerWord')\n          )\n            personalDataErrors++;\n        });\n\n        if (bankAccountErrors > personalDataErrors) {\n          setActiveTab('bankAccount');\n        }\n        if (personalDataErrors > bankAccountErrors) {\n          setActiveTab('personal');\n        }\n      }}\n      onFinish={async (user: User.Input) => {\n        setLoading(true);\n        console.log(user);\n        const userDTO: User.Input = {\n          ...user,\n          phone: user.phone.replace(/\\D/g, ''),\n          taxpayerId: user.taxpayerId.replace(/\\D/g, ''),\n        };\n\n        if (props.user)\n          return (\n            props.onUpdate &&\n            props.onUpdate(userDTO).finally(() => {\n              setLoading(false);\n            })\n          );\n\n        try {\n          await UserService.insertNewUser(userDTO);\n          history.push('/usuarios');\n          notification.success({\n            message: 'Sucesso',\n            description: 'usuário criado com sucesso',\n          });\n        } catch (error) {\n          console.log(error);\n          if (error instanceof CustomError) {\n            if (error.data?.objects) {\n              form.setFields(\n                error.data.objects.map((error) => {\n                  return {\n                    name: error.name\n                      ?.split(/(\\.|\\[|\\])/gi)\n                      .filter(\n                        (str) =>\n                          str !== '.' &&\n                          str !== '[' &&\n                          str !== ']' &&\n                          str !== ''\n                      )\n                      .map((str) =>\n                        isNaN(Number(str)) ? str : Number(str)\n                      ) as string[],\n                    errors: [error.userMessage],\n                  };\n                })\n              );\n            } else {\n              notification.error({\n                message: error.message,\n                description:\n                  error.data?.detail === 'Network Error'\n                    ? 'Erro na rede'\n                    : error.data?.detail,\n              });\n            }\n          } else {\n            notification.error({\n              message: 'Houve um erro',\n            });\n          }\n        } finally {\n          setLoading(false);\n        }\n      }}\n      initialValues={props.user}\n    >\n      <Row gutter={24} align={'middle'}>\n        <Col xs={24} lg={4}>\n          <Row justify={'center'}>\n            <ImageCrop rotate shape={'round'} grid aspect={1}>\n              <Upload\n                maxCount={1}\n                onRemove={() => {\n                  setAvatar('');\n                }}\n                beforeUpload={(file) => {\n                  handleAvatarUpload(file);\n                  return false;\n                }}\n                fileList={[\n                  ...(avatar\n                    ? [\n                        {\n                          name: 'Avatar',\n                          uid: '',\n                        },\n                      ]\n                    : []),\n                ]}\n              >\n                <Avatar\n                  style={{ cursor: 'pointer' }}\n                  icon={<UserOutlined />}\n                  src={avatar}\n                  size={128}\n                />\n              </Upload>\n            </ImageCrop>\n            <Form.Item name={'avatarUrl'} hidden>\n              <Input hidden />\n            </Form.Item>\n          </Row>\n        </Col>\n        <Col xs={24} lg={8}>\n          <Form.Item\n            label={'Nome'}\n            name={'name'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n              {\n                max: 255,\n                message: `O nome não pode ter mais de 255 caracteres`,\n              },\n            ]}\n          >\n            <Input placeholder={'E.g.: João Silva'} />\n          </Form.Item>\n          <Form.Item\n            label={'Data de nascimento'}\n            name={'birthdate'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n            ]}\n          >\n            <DatePicker style={{ width: '100%' }} format={'DD/MM/YYYY'} />\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={'Bio'}\n            name={'bio'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n              {\n                max: 255,\n                message: `A biografia não pode ter mais de 255 caracteres`,\n              },\n              {\n                min: 10,\n                message: `A biografia não pode ter menos de 10 caracteres`,\n              },\n            ]}\n          >\n            <Input.TextArea rows={5} />\n          </Form.Item>\n        </Col>\n        <Col xs={24}>\n          <Divider />\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={'Perfil'}\n            name={'role'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n              {\n                type: 'enum',\n                enum: ['EDITOR', 'ASSISTANT', 'MANAGER'],\n                message: `O Perfil precisar ser editor, assitente ou gerente`,\n              },\n            ]}\n          >\n            <Select\n              disabled={props.user && !props.user?.canSensitiveDataBeUpdated}\n              onChange={(value) => {\n                setIsEditorRole(value === 'EDITOR');\n              }}\n              placeholder={'Selecione um perfil'}\n            >\n              <Select.Option value={'EDITOR'}>Editor</Select.Option>\n              <Select.Option value={'ASSISTANT'}>Assistente</Select.Option>\n              <Select.Option\n                value={'MANAGER'}\n                disabled={authenticatedUser?.role !== 'MANAGER'}\n              >\n                Gerente\n              </Select.Option>\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={'Email'}\n            name={'email'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n              {\n                max: 255,\n                message: `O email não pode ter mais de 255 caracteres`,\n              },\n            ]}\n          >\n            <Input\n              type='email'\n              disabled={props.user && !props.user?.canSensitiveDataBeUpdated}\n              placeholder={'E.g.: contato@joao.silva'}\n            />\n          </Form.Item>\n        </Col>\n        <Col sm={24}>\n          <Divider />\n        </Col>\n\n        <Col sm={24}>\n          <Tabs\n            defaultActiveKey={'personal'}\n            activeKey={activeTab}\n            onChange={(tab) => setActiveTab(tab as 'personal' | 'bankAccount')}\n          >\n            <TabPane key={'personal'} tab={'Dados pessoais'}>\n              <Row gutter={24}>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'País'}\n                    name={['location', 'country']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 50,\n                        message: `O país não pode ter mais de 50 caracteres`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'E.g.: Brasil'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Estado'}\n                    name={['location', 'state']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 50,\n                        message: `O estado não pode ter mais de 50 caracteres`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'E.g.: Espírito Santo'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Cidade'}\n                    name={['location', 'city']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 255,\n                        message: `A cidade não pode ter mais de 255 caracteres`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'E.g.: Vitória'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Telefone'}\n                    name={'phone'}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 20,\n                        message: `O telefone não pode ter mais de 20 caracteres`,\n                      },\n                    ]}\n                  >\n                    <MaskedInput\n                      mask='(11) 11111-1111'\n                      placeholder={'(27) 99999-0000'}\n                      disabled={\n                        props.user && !props.user?.canSensitiveDataBeUpdated\n                      }\n                    />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'CPF'}\n                    name={'taxpayerId'}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 14,\n                        message: `O CPF não pode ter mais de 14 caracteres`,\n                      },\n                    ]}\n                  >\n                    <MaskedInput\n                      mask='111.111.111-11'\n                      placeholder={'111.222.333-44'}\n                    />\n                  </Form.Item>\n                </Col>\n                {isEditorRole && (\n                  <>\n                    <Col xs={24} lg={8}>\n                      <Form.Item\n                        label={'Preço por palavra'}\n                        name={'pricePerWord'}\n                        rules={[\n                          {\n                            required: true,\n                            message: 'O campo é obrigatório',\n                          },\n                          {\n                            type: 'number',\n                            min: 0.01,\n                            message: 'O valor mínimo é 1 centavo',\n                          },\n                        ]}\n                      >\n                        <CurrencyInput\n                          onChange={(e, value) => {\n                            form.setFieldsValue({\n                              pricePerWord: value,\n                            });\n                          }}\n                        />\n                      </Form.Item>\n                    </Col>\n                    {[1, 2, 3].map((_, index) => {\n                      return (\n                        <React.Fragment key={index}>\n                          <Col xs={18} lg={6}>\n                            <Form.Item\n                              label={'Habilidade'}\n                              name={['skills', index, 'name']}\n                              rules={[\n                                {\n                                  required: true,\n                                  message: 'O campo é obrigatório',\n                                },\n                                {\n                                  max: 50,\n                                  message: `A habilidade não pode ter mais de 50 caracteres`,\n                                },\n                              ]}\n                            >\n                              <Input placeholder={'E.g.: JavaScript'} />\n                            </Form.Item>\n                          </Col>\n                          <Col xs={6} lg={2}>\n                            <Form.Item\n                              label={'%'}\n                              name={['skills', index, 'percentage']}\n                              rules={[\n                                {\n                                  required: true,\n                                  message: '',\n                                },\n                                {\n                                  async validator(field, value) {\n                                    if (isNaN(Number(value)))\n                                      throw new Error('Apenas números');\n                                    if (Number(value) > 100)\n                                      throw new Error('Máximo é 100');\n                                    if (Number(value) < 0)\n                                      throw new Error('Mínimo é 0');\n                                  },\n                                },\n                              ]}\n                            >\n                              <Input />\n                            </Form.Item>\n                          </Col>\n                        </React.Fragment>\n                      );\n                    })}\n                  </>\n                )}\n              </Row>\n            </TabPane>\n            <TabPane key={'bankAccount'} tab={'Dados bancários'} forceRender>\n              <Row gutter={24}>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Instituição'}\n                    name={['bankAccount', 'bankCode']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 3,\n                        message: `A instituição precisa ter 3 caracteres`,\n                      },\n                      {\n                        min: 3,\n                        message: `A instituição precisa ter 3 caracteres`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'260'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Agência'}\n                    name={['bankAccount', 'agency']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 10,\n                        message: `A agência precisa ter no máximo 10 caracteres`,\n                      },\n                      {\n                        min: 1,\n                        message: `A agência precisa ter no mínimo 1 caractere`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'0001'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Conta sem dígito'}\n                    name={['bankAccount', 'number']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'12345'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Dígito'}\n                    name={['bankAccount', 'digit']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                      {\n                        max: 1,\n                        message: `O dígito precisa ser único`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder={'1'} />\n                  </Form.Item>\n                </Col>\n                <Col xs={24} lg={8}>\n                  <Form.Item\n                    label={'Tipo de conta'}\n                    name={['bankAccount', 'type']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'O campo é obrigatório',\n                      },\n                    ]}\n                  >\n                    <Select placeholder={'Selecione o tipo de conta'}>\n                      <Select.Option value={'SAVING'}>\n                        Conta poupança\n                      </Select.Option>\n                      <Select.Option value={'CHECKING'}>\n                        Conta corrente\n                      </Select.Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </TabPane>\n          </Tabs>\n        </Col>\n        <Col xs={24}>\n          <Row justify={'end'}>\n            <Button loading={loading} type={'primary'} htmlType={'submit'}>\n              {props.user ? 'Atualizar usuário' : 'Cadastrar usuário'}\n            </Button>\n          </Row>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n","import useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport UserForm from '../features/UserForm';\n\nexport default function UserCreateView() {\n  usePageTitle('Cadastro de usuário');\n  useBreadcrumb('Usuários/Cadastro');\n  return (\n    <>\n      <UserForm />\n    </>\n  );\n}\n","import { User, UserService } from 'danielbonifacio-sdk';\nimport { ResourceNotFoundError } from 'danielbonifacio-sdk/dist/errors';\nimport { useCallback, useState } from 'react';\n\nexport default function useUser() {\n  const [user, setUser] = useState<User.Detailed>();\n  const [notFound, setNotFound] = useState(false);\n\n  const fetchUser = useCallback(async (userId: number) => {\n    try {\n      await UserService.getDetailedUser(userId).then(\n        setUser\n      );\n    } catch (error) {\n      if (error instanceof ResourceNotFoundError) {\n        setNotFound(true);\n      } else {\n        throw error;\n      }\n    }\n  }, []);\n\n  const toggleUserStatus = useCallback(\n    (user: User.Summary | User.Detailed) => {\n      return user.active\n        ? UserService.deactivateExistingUser(user.id)\n        : UserService.activateExistingUser(user.id);\n    },\n    []\n  );\n\n  return {\n    user,\n    fetchUser,\n    notFound,\n    toggleUserStatus,\n  };\n}\n","import { Button, Typography } from 'antd';\nimport { WarningFilled } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\ninterface NotFoundErrorProps {\n  title: string;\n  actionTitle: string;\n  actionDestination: string;\n}\n\nexport default function NotFoundError(\n  props: NotFoundErrorProps\n) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 16,\n      }}\n    >\n      <WarningFilled style={{ fontSize: 32 }} />\n      <Typography.Title style={{ color: '#09f' }} level={1}>\n        {props.title}\n      </Typography.Title>\n      <Typography.Text>\n        O recurso que você está procurando não foi\n        encontrado\n      </Typography.Text>\n      <Link to={props.actionDestination}>\n        <Button type={'primary'}>\n          {props.actionTitle}\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import { Card, notification, Skeleton } from 'antd';\nimport { User, UserService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport useUser from '../../core/hooks/useUser';\nimport NotFoundError from '../components/NotFoundError';\nimport UserForm from '../features/UserForm';\n\nexport default function UserEditView() {\n  usePageTitle('Edição do usuário');\n  useBreadcrumb('Usuários/Edição');\n\n  const params = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const { user, fetchUser, notFound } = useUser();\n\n  useEffect(() => {\n    if (!isNaN(Number(params.id))) fetchUser(Number(params.id));\n  }, [fetchUser, params.id]);\n\n  const transformUserData = useCallback((user: User.Detailed) => {\n    return {\n      ...user,\n      createdAt: moment(user.createdAt),\n      updatedAt: moment(user.updatedAt),\n      birthdate: moment(user.birthdate),\n    };\n  }, []);\n\n  if (isNaN(Number(params.id))) return <Redirect to={'/usuarios'} />;\n\n  if (notFound)\n    return (\n      <Card>\n        <NotFoundError\n          title={'Usuário não encontrado'}\n          actionDestination={'/usuarios'}\n          actionTitle={'Voltar para lista de usuários'}\n        />\n      </Card>\n    );\n\n  async function handleUserUpdate(user: User.Input) {\n    await UserService.updateExistingUser(Number(params.id), user).then(() => {\n      history.push('/usuarios');\n      notification.success({\n        message: 'Usuário foi atualizado com sucesso',\n      });\n    });\n  }\n\n  if (!user) return <Skeleton />;\n\n  return (\n    <>\n      <UserForm onUpdate={handleUserUpdate} user={transformUserData(user)} />\n    </>\n  );\n}\n","import { User } from 'danielbonifacio-sdk';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as UserActions from '../store/User.reducer';\n\nexport default function useUsers() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const users = useSelector((state: RootState) => state.user.list);\n  const editors = useSelector((state: RootState) =>\n    state.user.list.filter((user) => user.role === 'EDITOR')\n  );\n  const fetching = useSelector((state: RootState) => state.user.fetching);\n\n  const fetchUsers = useCallback(() => {\n    return dispatch(UserActions.getAllUsers()).unwrap();\n  }, [dispatch]);\n\n  const toggleUserStatus = useCallback(\n    async (user: User.Detailed | User.Summary) => {\n      await dispatch(UserActions.toggleUserStatus(user));\n      dispatch(UserActions.getAllUsers());\n    },\n    [dispatch]\n  );\n\n  return {\n    fetchUsers,\n    users,\n    editors,\n    fetching,\n    toggleUserStatus,\n  };\n}\n","import {\n  Button,\n  Space,\n  Switch,\n  Table,\n  Tag,\n  Avatar,\n  Card,\n  Input,\n  Descriptions,\n  Tooltip,\n  Row,\n} from 'antd';\nimport { User } from 'danielbonifacio-sdk';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport { useEffect, useState } from 'react';\nimport useUsers from '../../core/hooks/useUsers';\nimport {\n  EyeOutlined,\n  EditOutlined,\n  SearchOutlined,\n  ReloadOutlined,\n} from '@ant-design/icons';\nimport { ColumnProps } from 'antd/lib/table';\nimport { Link } from 'react-router-dom';\nimport Forbidden from '../components/Forbidden';\nimport { useCallback } from 'react';\n\nexport default function UserList() {\n  const { users, fetchUsers, toggleUserStatus, fetching } = useUsers();\n\n  const [forbidden, setForbidden] = useState(false);\n\n  const _fetchUsers = useCallback(() => {\n    fetchUsers().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    _fetchUsers();\n  }, [_fetchUsers]);\n\n  const getColumnSearchProps = (\n    dataIndex: keyof User.Summary,\n    displayName?: string\n  ): ColumnProps<User.Summary> => ({\n    filterDropdown: ({\n      selectedKeys,\n      setSelectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <Card>\n        <Input\n          style={{ marginBottom: 8, display: 'block' }}\n          value={selectedKeys[0]}\n          placeholder={`Buscar ${displayName || dataIndex}`}\n          onChange={(e) => {\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\n          }}\n          onPressEnter={() => confirm()}\n        />\n        <Space>\n          <Button\n            type={'primary'}\n            size={'small'}\n            style={{ width: 90 }}\n            onClick={() => confirm()}\n            icon={<SearchOutlined />}\n          >\n            Buscar\n          </Button>\n          <Button onClick={clearFilters} size={'small'} style={{ width: 90 }}>\n            Limpar\n          </Button>\n        </Space>\n      </Card>\n    ),\n    filterIcon: (filtered: boolean) => (\n      <SearchOutlined style={{ color: filtered ? '#0099ff' : undefined }} />\n    ),\n    // @ts-ignore\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes((value as string).toLowerCase())\n        : '',\n  });\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <>\n      <Row justify='end'>\n        <Button\n          onClick={_fetchUsers}\n          loading={fetching}\n          icon={<ReloadOutlined />}\n        >\n          Atualizar\n        </Button>\n      </Row>\n      <Table<User.Summary>\n        loading={fetching}\n        dataSource={users}\n        pagination={false}\n        rowKey={'id'}\n        columns={[\n          {\n            title: 'Usuários',\n            responsive: ['xs'],\n            render(user: User.Summary) {\n              return (\n                <Descriptions column={1} size={'small'}>\n                  <Descriptions.Item label={'Nome'}>\n                    {user.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Email'}>\n                    {user.email}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Criação'}>\n                    {format(parseISO(user.createdAt), 'dd/MM/yyyy')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Perfil'}>\n                    <Tag color={user.role === 'MANAGER' ? 'red' : 'blue'}>\n                      {user.role === 'EDITOR'\n                        ? 'Editor'\n                        : user.role === 'MANAGER'\n                        ? 'Gerente'\n                        : 'Assistente'}\n                    </Tag>\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ações'}>\n                    <Tooltip title='Visualizar usuário'>\n                      <Link to={`/usuarios/${user.id}`}>\n                        <Button size='small' icon={<EyeOutlined />} />\n                      </Link>\n                    </Tooltip>\n                    <Tooltip title={'Editar usuário'}>\n                      <Link to={`/usuarios/edicao/${user.id}`}>\n                        <Button size='small' icon={<EditOutlined />} />\n                      </Link>\n                    </Tooltip>\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'avatarUrls',\n            title: '',\n            width: 48,\n            fixed: 'left',\n            responsive: ['sm'],\n            render(avatarUrls: User.Summary['avatarUrls']) {\n              return <Avatar size={'small'} src={avatarUrls.small} />;\n            },\n          },\n          {\n            dataIndex: 'name',\n            title: 'Nome',\n            ...getColumnSearchProps('name', 'nome'),\n            width: 160,\n            responsive: ['sm'],\n            ellipsis: true,\n          },\n          {\n            dataIndex: 'email',\n            title: 'Email',\n            responsive: ['md'],\n            ellipsis: true,\n            width: 240,\n            ...getColumnSearchProps('email', 'Email'),\n          },\n          {\n            dataIndex: 'role',\n            title: 'Perfil',\n            align: 'center',\n            responsive: ['sm'],\n            width: 100,\n            sorter(a, b) {\n              return a.role.localeCompare(b.role);\n            },\n            render(role) {\n              return (\n                <Tag color={role === 'MANAGER' ? 'red' : 'blue'}>\n                  {role === 'EDITOR'\n                    ? 'Editor'\n                    : role === 'MANAGER'\n                    ? 'Gerente'\n                    : 'Assistente'}\n                </Tag>\n              );\n            },\n          },\n          {\n            dataIndex: 'createdAt',\n            title: 'Criação',\n            align: 'center',\n            responsive: ['lg'],\n            sorter(a, b) {\n              return new Date(a.createdAt) > new Date(b.createdAt) ? 1 : -1;\n            },\n            width: 120,\n            render(createdAt: string) {\n              return format(parseISO(createdAt), 'dd/MM/yyyy');\n            },\n          },\n          {\n            dataIndex: 'active',\n            title: 'Ativo',\n            align: 'center',\n            width: 100,\n            responsive: ['sm'],\n            render(active: boolean, user) {\n              return (\n                <Switch\n                  disabled={\n                    (active && !user.canBeDeactivated) ||\n                    (!active && !user.canBeActivated)\n                  }\n                  onChange={() => {\n                    toggleUserStatus(user);\n                  }}\n                  checked={active}\n                />\n              );\n            },\n          },\n          {\n            dataIndex: 'id',\n            title: 'Ações',\n            align: 'center',\n            width: 100,\n            responsive: ['sm'],\n            render(id: number) {\n              return (\n                <>\n                  <Tooltip title={'Visualizar usuário'} placement={'left'}>\n                    <Link to={`/usuarios/${id}`}>\n                      <Button size='small' icon={<EyeOutlined />} />\n                    </Link>\n                  </Tooltip>\n                  <Tooltip title={'Editar usuario'} placement={'right'}>\n                    <Link to={`/usuarios/edicao/${id}`}>\n                      <Button size='small' icon={<EditOutlined />} />\n                    </Link>\n                  </Tooltip>\n                </>\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n}\n","import { Col, Row } from 'antd';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport UserList from '../features/UserList';\n\nexport default function UserListView() {\n  usePageTitle('Consulta de usuários');\n  useBreadcrumb('Usuários/Consulta');\n  return (\n    <Row>\n      <Col xs={24}>\n        <UserList />\n      </Col>\n    </Row>\n  );\n}\n","import { Popconfirm } from 'antd';\nimport confirm from 'antd/lib/modal/confirm';\nimport React from 'react';\n\ninterface DoubleConfirmProps {\n  children: React.ReactNode;\n  disabled?: boolean;\n  popConfirmTitle: string;\n  modalTitle: string;\n  modalContent: string;\n  onConfirm?: () => void;\n}\n\nexport default function DoubleConfirm(props: DoubleConfirmProps) {\n  return (\n    <Popconfirm\n      disabled={props.disabled}\n      title={props.popConfirmTitle}\n      onConfirm={() => {\n        confirm({\n          title: props.modalTitle,\n          onOk: props.onConfirm,\n          content: props.modalContent,\n        });\n      }}\n    >\n      {props.children}\n    </Popconfirm>\n  );\n}\n","import {\n  Button,\n  DatePicker,\n  Descriptions,\n  notification,\n  Popconfirm,\n  Row,\n  Space,\n  Table,\n  Tag,\n  Tooltip,\n} from 'antd';\nimport { Payment } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport usePayments from '../../core/hooks/usePayments';\nimport confirm from 'antd/lib/modal/confirm';\nimport { SorterResult } from 'antd/lib/table/interface';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { Link } from 'react-router-dom';\nimport Forbidden from '../components/Forbidden';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\n\nexport default function PaymentListView() {\n  useBreadcrumb('Pagamentos/Consulta');\n  const { xs } = useBreakpoint();\n  const {\n    payments,\n    fetching,\n    query,\n    selected,\n    fetchPayments,\n    setQuery,\n    approvePaymentsInBatch,\n    setSelected,\n    deleteExistingPayment,\n  } = usePayments();\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    fetchPayments().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchPayments]);\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <>\n      <Row justify={'space-between'} gutter={24}>\n        <Space\n          style={{\n            width: '100%',\n            ...(!xs && { justifyContent: 'space-between' }),\n          }}\n          direction={xs ? 'vertical' : 'horizontal'}\n        >\n          <DoubleConfirm\n            popConfirmTitle={\n              selected.length === 1\n                ? 'Você deseja aprovar o agendamento selecionado?'\n                : 'Você deseja aprovar os agendamentos selecionados?'\n            }\n            disabled={selected.length === 0}\n            modalTitle={'Aprovar agendamento'}\n            modalContent={\n              'Esta é uma ação irreversível. Ao aprovar um agendamento, ele não poderá ser removido!'\n            }\n            onConfirm={async () => {\n              await approvePaymentsInBatch(selected as number[]);\n              notification.success({\n                message: 'Os pagamentos selecionados foram aprovados',\n              });\n            }}\n          >\n            <Button\n              block={xs}\n              type={'primary'}\n              disabled={selected.length === 0}\n            >\n              Aprovar agendamentos\n            </Button>\n          </DoubleConfirm>\n          <DatePicker.MonthPicker\n            style={{ width: xs ? '100%' : 240 }}\n            format={'MMMM - YYYY'}\n            placeholder={'Filtrar por mês'}\n            onChange={(date) => {\n              setQuery({\n                scheduledToYearMonth: date ? date.format('YYYY-MM') : undefined,\n              });\n            }}\n          />\n        </Space>\n      </Row>\n      <Table<Payment.Summary>\n        dataSource={payments?.content}\n        rowKey='id'\n        loading={fetching}\n        onChange={(p, f, sorter) => {\n          const { order } = sorter as SorterResult<Payment.Summary>;\n          const direction = order?.replace('end', '');\n          if (direction && direction !== query.sort![1])\n            setQuery({\n              sort: [query.sort![0], direction as 'asc' | 'desc'],\n            });\n        }}\n        pagination={{\n          current: query.page ? query.page + 1 : 1,\n          onChange: (page) => setQuery({ page: page - 1 }),\n          total: payments?.totalElements,\n          pageSize: query.size,\n        }}\n        rowSelection={{\n          selectedRowKeys: selected,\n          onChange: setSelected,\n          getCheckboxProps(payment) {\n            return !payment.canBeApproved ? { disabled: true } : {};\n          },\n        }}\n        columns={[\n          {\n            title: 'Agendamentos',\n            responsive: ['xs'],\n            render(payment: Payment.Summary) {\n              return (\n                <Descriptions column={1} size={'small'}>\n                  <Descriptions.Item label={'Editor'}>\n                    {payment.payee.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Agendamento'}>\n                    {moment(payment.scheduledTo).format('DD/MM/YYYY')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Período'}>\n                    {(() => {\n                      const starts = moment(\n                        payment.accountingPeriod.startsOn\n                      ).format('DD/MM/YYYY');\n                      const ends = moment(\n                        payment.accountingPeriod.endsOn\n                      ).format('DD/MM/YYYY');\n                      return `${starts} - ${ends}`;\n                    })()}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Status'}>\n                    <Tag color={payment.approvedAt ? 'green' : 'warning'}>\n                      {payment.approvedAt\n                        ? `Aprovado em ${moment(payment.approvedAt).format(\n                            'DD/MM/YYYY'\n                          )}`\n                        : 'Aguardando aprovação'}\n                    </Tag>\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ações'}>\n                    <Tooltip title={'Detalhar'} placement={xs ? 'top' : 'left'}>\n                      <Link to={`/pagamentos/${payment.id}`}>\n                        <Button size={'small'} icon={<EyeOutlined />} />\n                      </Link>\n                    </Tooltip>\n                    <Popconfirm\n                      title='Remover agendamento?'\n                      disabled={!payment.canBeDeleted}\n                      onConfirm={() => {\n                        confirm({\n                          title: 'Remover agendamento',\n                          cancelText: 'Cancelar',\n                          onOk() {\n                            deleteExistingPayment(payment.id);\n                          },\n                          content:\n                            'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!',\n                        });\n                      }}\n                    >\n                      <Tooltip\n                        title={\n                          payment.canBeDeleted\n                            ? 'Remover'\n                            : 'Pagamento já aprovado'\n                        }\n                        placement={xs ? 'bottom' : 'right'}\n                      >\n                        <Button\n                          disabled={!payment.canBeDeleted}\n                          icon={<DeleteOutlined />}\n                          size={'small'}\n                        />\n                      </Tooltip>\n                    </Popconfirm>\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'payee',\n            title: 'Editor',\n            responsive: ['sm'],\n            ellipsis: true,\n            width: 180,\n            render(payee: Payment.Summary['payee']) {\n              return <Link to={`/usuarios/${payee.id}`}>{payee.name}</Link>;\n            },\n          },\n          {\n            dataIndex: 'scheduledTo',\n            title: 'Agendamento',\n            align: 'center',\n            width: 140,\n            sorter(a, b) {\n              return 0;\n            },\n            responsive: ['sm'],\n            render(date: string) {\n              return moment(date).format('DD/MM/YYYY');\n            },\n          },\n          {\n            dataIndex: 'accountingPeriod',\n            title: 'Período',\n            align: 'center',\n            responsive: ['sm'],\n            width: 240,\n            render(period: Payment.Summary['accountingPeriod']) {\n              const starts = moment(period.startsOn).format('DD/MM/YYYY');\n              const ends = moment(period.endsOn).format('DD/MM/YYYY');\n              return `${starts} - ${ends}`;\n            },\n          },\n          {\n            dataIndex: 'approvedAt',\n            title: 'Status',\n            align: 'center',\n            width: 180,\n            responsive: ['sm'],\n            render(approvalDate: Payment.Summary['approvedAt']) {\n              const formattedApprovalDate =\n                moment(approvalDate).format('DD/MM/YYYY');\n\n              return (\n                <Tag color={approvalDate ? 'green' : 'warning'}>\n                  {approvalDate\n                    ? `Aprovado em ${formattedApprovalDate}`\n                    : 'Aguardando aprovação'}\n                </Tag>\n              );\n            },\n          },\n          {\n            dataIndex: 'id',\n            title: 'Ações',\n            responsive: ['sm'],\n            width: 100,\n            render(id: number, payment) {\n              return (\n                <>\n                  <Tooltip title={'Detalhar'} placement='left'>\n                    <Link to={`/pagamentos/${id}`}>\n                      <Button size='small' icon={<EyeOutlined />} />\n                    </Link>\n                  </Tooltip>\n                  <Popconfirm\n                    title='Remover agendamento?'\n                    disabled={!payment.canBeDeleted}\n                    onConfirm={() => {\n                      confirm({\n                        title: 'Remover agendamento',\n                        cancelText: 'Cancelar',\n                        onOk() {\n                          deleteExistingPayment(id);\n                        },\n                        content:\n                          'Esta é uma ação irreversível. Ao remover um agendamento, ele não poderá ser recuperado!',\n                      });\n                    }}\n                  >\n                    <Tooltip\n                      title={\n                        payment.canBeDeleted\n                          ? 'Remover'\n                          : 'Pagamento já aprovado'\n                      }\n                      placement='right'\n                    >\n                      <Button\n                        size='small'\n                        disabled={!payment.canBeDeleted}\n                        icon={<DeleteOutlined />}\n                      />\n                    </Tooltip>\n                  </Popconfirm>\n                </>\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n}\n","import { Key } from 'antd/lib/table/interface';\nimport { Payment } from 'danielbonifacio-sdk';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as PaymentActions from '../store/Payment.slice';\n\nexport default function usePayments() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const fetching = useSelector((s: RootState) => s.payment.fetching);\n  const payments = useSelector((s: RootState) => s.payment.paginated);\n  const query = useSelector((s: RootState) => s.payment.query);\n  const selected = useSelector((s: RootState) => s.payment.selected);\n\n  const approvePaymentsInBatch = useCallback(\n    (ids: number[]) => dispatch(PaymentActions.approvePaymentsInBatch(ids)),\n    [dispatch]\n  );\n\n  const deleteExistingPayment = useCallback(\n    (id: number) => dispatch(PaymentActions.deleteExistingPayment(id)),\n    [dispatch]\n  );\n\n  const fetchPayments = useCallback(\n    () => dispatch(PaymentActions.getAllPayments()).unwrap(),\n    [dispatch]\n  );\n\n  const setQuery = useCallback(\n    (query: Payment.Query) => dispatch(PaymentActions.setQuery(query)),\n    [dispatch]\n  );\n\n  const setSelected = useCallback(\n    (keys: Key[]) => dispatch(PaymentActions.storeSelectedKeys(keys)),\n    [dispatch]\n  );\n\n  return {\n    payments,\n    fetching,\n    query,\n    selected,\n    fetchPayments,\n    approvePaymentsInBatch,\n    setQuery,\n    setSelected,\n    deleteExistingPayment,\n  };\n}\n","import { Payment, PaymentService, Post } from 'danielbonifacio-sdk';\nimport { ResourceNotFoundError } from 'danielbonifacio-sdk/dist/errors';\nimport { useCallback } from 'react';\nimport { useState } from 'react';\n\nexport default function usePayment() {\n  const [posts, setPosts] = useState<Post.WithEarnings[]>([]);\n  const [payment, setPayment] = useState<Payment.Detailed>();\n  const [paymentPreview, setPaymentPreview] = useState<Payment.Preview>();\n\n  const [fetchingPosts, setFetchingPosts] = useState(false);\n  const [fetchingPayment, setFetchingPayment] = useState(false);\n  const [approvingPayment, setApprovingPayment] = useState(false);\n  const [fetchingPaymentPreview, setFetchingPaymentPreview] = useState(false);\n  const [schedulingPayment, setSchedulingPayment] = useState(false);\n\n  const [paymentNotFound, setPaymentNotFound] = useState(false);\n  const [postsNotFound, setPostsNotFound] = useState(false);\n\n  const fetchPayment = useCallback(async (paymentId: number) => {\n    try {\n      setFetchingPayment(true);\n      const payment = await PaymentService.getExistingPayment(paymentId);\n      setPayment(payment);\n    } catch (error) {\n      if (error instanceof ResourceNotFoundError) {\n        setPaymentNotFound(true);\n        return;\n      }\n      throw error;\n    } finally {\n      setFetchingPayment(false);\n    }\n  }, []);\n\n  const approvePayment = useCallback(async (paymentId: number) => {\n    try {\n      setApprovingPayment(true);\n      await PaymentService.approvePayment(paymentId);\n    } finally {\n      setApprovingPayment(false);\n    }\n  }, []);\n\n  const fetchPosts = useCallback(async (paymentId: number) => {\n    try {\n      setFetchingPosts(true);\n      const posts = await PaymentService.getExistingPaymentPosts(paymentId);\n      setPosts(posts);\n    } catch (error) {\n      if (error instanceof ResourceNotFoundError) {\n        setPostsNotFound(true);\n        return;\n      }\n      throw error;\n    } finally {\n      setFetchingPosts(false);\n    }\n  }, []);\n\n  const fetchPaymentPreview = useCallback(\n    async (paymentPreview: Payment.PreviewInput) => {\n      try {\n        setFetchingPaymentPreview(true);\n        const preview = await PaymentService.getPaymentPreview(paymentPreview);\n        setPaymentPreview(preview);\n      } finally {\n        setFetchingPaymentPreview(false);\n      }\n    },\n    []\n  );\n\n  const schedulePayment = useCallback(async (paymentInput: Payment.Input) => {\n    try {\n      setSchedulingPayment(true);\n      await PaymentService.insertNewPayment(paymentInput);\n    } finally {\n      setSchedulingPayment(false);\n    }\n  }, []);\n\n  const clearPaymentPreview = useCallback(() => {\n    setPaymentPreview(undefined);\n  }, []);\n\n  return {\n    fetchPayment,\n    fetchPosts,\n    approvePayment,\n    fetchPaymentPreview,\n    fetchingPayment,\n    fetchingPosts,\n    approvingPayment,\n    fetchingPaymentPreview,\n    paymentNotFound,\n    postsNotFound,\n    posts,\n    payment,\n    paymentPreview,\n    clearPaymentPreview,\n    schedulePayment,\n    schedulingPayment,\n  };\n}\n","export default function transformIntoBrl(value?: number) {\n  return value?.toLocaleString('pt-br', {\n    style: 'currency',\n    currency: 'BRL',\n    maximumFractionDigits: 2,\n  });\n}\n","export default __webpack_public_path__ + \"static/media/tax.d0747424.svg\";","export default __webpack_public_path__ + \"static/media/confusing.112a2c6d.svg\";","import { Card, Row, Typography } from 'antd';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport tax from '../../assets/illustrations/tax.svg';\nimport confusing from '../../assets/illustrations/confusing.svg';\n\ninterface AskForPaymentPreviewProps {\n  error?: CustomError;\n}\n\nexport default function AskForPaymentPreview(props: AskForPaymentPreviewProps) {\n  return (\n    <Card bordered={false}>\n      <Row justify='center' style={{ textAlign: 'center' }}>\n        <img\n          width={240}\n          key={props.error ? 'errorImg' : 'img'}\n          src={props.error ? confusing : tax}\n          alt={'tax'}\n        />\n        <Typography.Title level={3} style={{ maxWidth: 360 }}>\n          {props.error\n            ? props.error.message\n            : 'Selecione um editor e um período'}\n        </Typography.Title>\n        <Typography.Text>\n          Para podermos gerar uma prévia do pagamento, por favor, selecione\n          preencha os campos \"Editor\" e \"Período\"\n        </Typography.Text>\n      </Row>\n    </Card>\n  );\n}\n","import { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Col,\n  DatePicker,\n  Descriptions,\n  Divider,\n  Form,\n  Input,\n  notification,\n  Row,\n  Select,\n  Skeleton,\n  Space,\n  Tabs,\n  Tooltip,\n} from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { Payment } from 'danielbonifacio-sdk';\nimport moment, { Moment } from 'moment';\nimport { FieldData } from 'rc-field-form/lib/interface';\nimport { useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport useUsers from '../../core/hooks/useUsers';\nimport CurrencyInput from '../components/CurrencyInput';\nimport usePayment from '../../core/hooks/usePayment';\nimport transformIntoBrl from '../../core/utils/transformIntoBrl';\nimport { useState } from 'react';\nimport AskForPaymentPreview from './AskForPaymentPreview';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport { BusinessError } from 'danielbonifacio-sdk/dist/errors';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function PaymentForm() {\n  const [form] = useForm<Payment.Input>();\n  const { editors, fetchUsers, fetching } = useUsers();\n  const history = useHistory();\n  const {\n    fetchingPaymentPreview,\n    clearPaymentPreview,\n    paymentPreview,\n    fetchPaymentPreview,\n    schedulePayment,\n    schedulingPayment,\n  } = usePayment();\n  const [scheduledTo, setScheduledTo] = useState('');\n  const [paymentPreviewError, setPaymentPreviewError] = useState<CustomError>();\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const updateScheduleDate = useCallback(() => {\n    const { scheduledTo } = form.getFieldsValue();\n    setScheduledTo(scheduledTo);\n  }, [form]);\n\n  const clearPaymentPreviewError = useCallback(() => {\n    setPaymentPreviewError(undefined);\n  }, []);\n\n  const getPaymentPreview = useCallback(async () => {\n    const { accountingPeriod, bonuses, payee } = form.getFieldsValue();\n    if (payee && accountingPeriod) {\n      if (payee.id && accountingPeriod.endsOn && accountingPeriod.startsOn) {\n        try {\n          await fetchPaymentPreview({\n            payee,\n            accountingPeriod,\n            bonuses: bonuses || [],\n          });\n          clearPaymentPreviewError();\n        } catch (err) {\n          clearPaymentPreview();\n          if (err instanceof BusinessError) {\n            setPaymentPreviewError(err);\n          }\n          throw err;\n        }\n      } else {\n        clearPaymentPreview();\n        clearPaymentPreviewError();\n      }\n    }\n  }, [\n    form,\n    fetchPaymentPreview,\n    clearPaymentPreview,\n    clearPaymentPreviewError,\n  ]);\n\n  const handleFormChange = useCallback(\n    ([field]: FieldData[]) => {\n      if (Array.isArray(field?.name)) {\n        if (\n          field.name.includes('payee') ||\n          field.name.includes('_accountingPeriod') ||\n          field.name.includes('bonuses')\n        ) {\n          getPaymentPreview();\n        }\n\n        if (field.name.includes('scheduledTo')) {\n          updateScheduleDate();\n        }\n      }\n    },\n    [getPaymentPreview, updateScheduleDate]\n  );\n\n  const debouncedHandleFormChange = debounce(handleFormChange, 1000);\n\n  const handleFormSubmit = useCallback(\n    async (form: Payment.Input) => {\n      const paymentDto: Payment.Input = {\n        accountingPeriod: form.accountingPeriod,\n        payee: form.payee,\n        bonuses: form.bonuses || [],\n        scheduledTo: moment(form.scheduledTo).format('YYYY-MM-DD'),\n      };\n\n      await schedulePayment(paymentDto);\n\n      notification.success({\n        message: 'Pagamento agendado com sucesso',\n      });\n\n      history.push('/pagamentos');\n    },\n    [schedulePayment, history]\n  );\n\n  return (\n    <Form<Payment.Input>\n      form={form}\n      layout={'vertical'}\n      onFieldsChange={debouncedHandleFormChange}\n      onFinish={handleFormSubmit}\n    >\n      <Row gutter={24}>\n        <Col xs={24} lg={8}>\n          <Form.Item\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n            ]}\n            label={'Editor'}\n            name={['payee', 'id']}\n          >\n            <Select\n              showSearch\n              loading={fetching}\n              placeholder={\n                fetching ? 'Carregando editores...' : 'Selecione um editor'\n              }\n              filterOption={(input, option) => {\n                return (\n                  option?.children\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, '')\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0 ||\n                  (option?.children as string)\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                );\n              }}\n            >\n              {editors.map((editor) => (\n                <Select.Option key={editor.id} value={editor.id}>\n                  {editor.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={8}>\n          <Form.Item hidden name={['accountingPeriod', 'startsOn']}>\n            <Input hidden />\n          </Form.Item>\n          <Form.Item hidden name={['accountingPeriod', 'endsOn']}>\n            <Input hidden />\n          </Form.Item>\n          <Form.Item\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n            ]}\n            label={'Período'}\n            name={'_accountingPeriod'}\n          >\n            <DatePicker.RangePicker\n              style={{ width: '100%' }}\n              format={'DD/MM/YYYY'}\n              onChange={(date) => {\n                if (date !== null) {\n                  const [startsOn, endsOn] = date as Moment[];\n                  form.setFieldsValue({\n                    accountingPeriod: {\n                      startsOn: startsOn.format('YYYY-MM-DD'),\n                      endsOn: endsOn.format('YYYY-MM-DD'),\n                    },\n                  });\n                } else {\n                  form.setFieldsValue({\n                    accountingPeriod: {\n                      startsOn: undefined,\n                      endsOn: undefined,\n                    },\n                  });\n                }\n              }}\n            />\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={8}>\n          <Form.Item\n            label={'Agendamento'}\n            name={'scheduledTo'}\n            rules={[\n              {\n                required: true,\n                message: 'O campo é obrigatório',\n              },\n            ]}\n          >\n            <DatePicker\n              disabledDate={(date) => {\n                return (\n                  date.isBefore(moment()) ||\n                  date.isAfter(moment().add(7, 'days'))\n                );\n              }}\n              style={{ width: '100%' }}\n              format={'DD/MM/YYYY'}\n            />\n          </Form.Item>\n        </Col>\n        <Divider />\n        <Col xs={24} lg={12}>\n          {fetchingPaymentPreview ? (\n            <>\n              <Skeleton />\n              <Skeleton title={false} />\n            </>\n          ) : !paymentPreview ? (\n            <AskForPaymentPreview error={paymentPreviewError} />\n          ) : (\n            <Tabs defaultActiveKey={'payment'}>\n              <Tabs.TabPane tab={'Demonstrativo'} key={'payment'}>\n                <Descriptions\n                  labelStyle={{ width: 160 }}\n                  bordered\n                  size={'small'}\n                  column={1}\n                >\n                  <Descriptions.Item label={'Editor'}>\n                    {paymentPreview?.payee.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Período'}>\n                    <Space>\n                      {moment(paymentPreview?.accountingPeriod.startsOn).format(\n                        'DD/MM/YYYY'\n                      )}\n                      <span>à</span>\n                      {moment(paymentPreview?.accountingPeriod.endsOn).format(\n                        'DD/MM/YYYY'\n                      )}\n                    </Space>\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Agendamento'}>\n                    {scheduledTo && moment(scheduledTo).format('DD/MM/YYYY')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Palavras'}>\n                    {paymentPreview?.earnings.words}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ganhos'}>\n                    {transformIntoBrl(paymentPreview?.grandTotalAmount)}\n                  </Descriptions.Item>\n                  {paymentPreview?.bonuses.map((bonus, index) => (\n                    <Descriptions.Item\n                      key={index}\n                      label={\n                        <Space>\n                          {`Bônus ${index + 1}`}\n                          <Tooltip title={bonus.title}>\n                            <InfoCircleFilled\n                              style={{ color: '#09f', fontSize: 18 }}\n                            />\n                          </Tooltip>\n                        </Space>\n                      }\n                    >\n                      {transformIntoBrl(bonus.amount)}\n                    </Descriptions.Item>\n                  ))}\n                  <Descriptions.Item label={'Ganhos de posts'}>\n                    {transformIntoBrl(paymentPreview?.earnings.totalAmount)}\n                  </Descriptions.Item>\n                </Descriptions>\n              </Tabs.TabPane>\n              <Tabs.TabPane tab={'Dados bancários'} key={'bankAccount'}>\n                <Descriptions\n                  bordered\n                  labelStyle={{ width: 160 }}\n                  size={'small'}\n                  column={1}\n                >\n                  <Descriptions.Item label={'Código do Banco'}>\n                    {paymentPreview?.bankAccount.bankCode}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Número da conta'}>\n                    {paymentPreview?.bankAccount.number}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Dígito da conta'}>\n                    {paymentPreview?.bankAccount.digit}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Agência'}>\n                    {paymentPreview?.bankAccount.agency}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Tipo de conta'}>\n                    {paymentPreview?.bankAccount.type === 'CHECKING'\n                      ? 'Conta corrente'\n                      : 'Conta poupança'}\n                  </Descriptions.Item>\n                </Descriptions>\n              </Tabs.TabPane>\n            </Tabs>\n          )}\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.List name={'bonuses'}>\n            {(fields, { add, remove }) => {\n              return (\n                <>\n                  {fields.map((field) => {\n                    return (\n                      <Row gutter={24} key={field.name}>\n                        <Col xs={24} lg={14}>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, 'title']}\n                            label={'Descrição'}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'O campo é obrigatório',\n                              },\n                            ]}\n                          >\n                            <Input placeholder={'E.g.: 1 milhão de views'} />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} lg={6}>\n                          <Form.Item\n                            initialValue={0}\n                            {...field}\n                            name={[field.name, 'amount']}\n                            label={'Valor'}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'O campo é obrigatório',\n                              },\n                            ]}\n                          >\n                            <CurrencyInput\n                              onChange={(a, amount) => {\n                                const { bonuses } = form.getFieldsValue();\n                                form.setFieldsValue({\n                                  bonuses: bonuses?.map((bonus, index) => {\n                                    return index === field.name\n                                      ? { title: bonus.title, amount }\n                                      : bonus;\n                                  }),\n                                });\n                              }}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} lg={4}>\n                          <Form.Item label={'Remover'}>\n                            <Button\n                              onClick={() => remove(field.name)}\n                              icon={<DeleteOutlined />}\n                              danger\n                              size='small'\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    );\n                  })}\n                  <Button\n                    type='dashed'\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Adicionar bônus\n                  </Button>\n                </>\n              );\n            }}\n          </Form.List>\n        </Col>\n      </Row>\n      <Row justify='end'>\n        <Button type={'primary'} htmlType='submit' loading={schedulingPayment}>\n          Cadastrar agendamento\n        </Button>\n      </Row>\n    </Form>\n  );\n}\n","import useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport PaymentForm from '../features/PaymentForm';\n\nexport default function PaymentCreateView() {\n  useBreadcrumb('Pagamentos/Cadastro');\n  return (\n    <>\n      <PaymentForm />\n    </>\n  );\n}\n","import { Key } from 'antd/lib/table/interface';\nimport { CashFlow } from 'danielbonifacio-sdk';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as ExpensesActions from '../store/Expense.slice';\nimport * as RevenuesActions from '../store/Revenue.slice';\n\ntype CashFlowEntryType = CashFlow.EntrySummary['type'];\n\nexport default function useCashFlow(type: CashFlowEntryType) {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const query = useSelector((s: RootState) =>\n    type === 'EXPENSE' ? s.cashFlow.expense.query : s.cashFlow.revenue.query\n  );\n  const entries = useSelector((s: RootState) =>\n    type === 'EXPENSE' ? s.cashFlow.expense.list : s.cashFlow.revenue.list\n  );\n  const fetching = useSelector((s: RootState) =>\n    type === 'EXPENSE'\n      ? s.cashFlow.expense.fetching\n      : s.cashFlow.revenue.fetching\n  );\n  const selected = useSelector((s: RootState) =>\n    type === 'EXPENSE'\n      ? s.cashFlow.expense.selected\n      : s.cashFlow.revenue.selected\n  );\n\n  const fetchEntries = useCallback(\n    () =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.getExpenses()\n          : RevenuesActions.getRevenues()\n      ).unwrap(),\n    [dispatch, type]\n  );\n\n  const createEntry = useCallback(\n    (entry: CashFlow.EntryInput) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.createExpense(entry)\n          : RevenuesActions.createRevenue(entry)\n      ).unwrap(),\n    [dispatch, type]\n  );\n\n  const updateEntry = useCallback(\n    (entryId: number, entry: CashFlow.EntryInput) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.updateExpense({\n              entryId: entryId,\n              entry: entry,\n            })\n          : RevenuesActions.updateRevenue({\n              entryId: entryId,\n              entry: entry,\n            })\n      ).unwrap(),\n    [dispatch, type]\n  );\n\n  const removeEntry = useCallback(\n    (entryId: number) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.removeExpense(entryId)\n          : RevenuesActions.removeRevenue(entryId)\n      ).unwrap(),\n    [dispatch, type]\n  );\n\n  const removeEntries = useCallback(\n    (ids: number[]) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.removeEntriesInBatch(ids)\n          : RevenuesActions.removeEntriesInBatch(ids)\n      ),\n    [dispatch, type]\n  );\n\n  const setSelected = useCallback(\n    (keys: Key[]) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.setSelectedExpenses(keys)\n          : RevenuesActions.setSelectedRevenues(keys)\n      ),\n    [dispatch, type]\n  );\n\n  const setQuery = useCallback(\n    (query: Partial<CashFlow.Query>) =>\n      dispatch(\n        type === 'EXPENSE'\n          ? ExpensesActions.setQuery(query)\n          : RevenuesActions.setQuery(query)\n      ),\n    [dispatch, type]\n  );\n\n  return {\n    entries,\n    query,\n    selected,\n    fetching,\n    fetchEntries,\n    removeEntries,\n    setQuery,\n    setSelected,\n    createEntry,\n    updateEntry,\n    removeEntry,\n  };\n}\n","import {\n  Button,\n  Card,\n  DatePicker,\n  Descriptions,\n  Space,\n  Table,\n  Tag,\n  Tooltip,\n} from 'antd';\nimport { CashFlow } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { DeleteOutlined, EyeOutlined, EditOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport transformIntoBrl from '../../core/utils/transformIntoBrl';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport Forbidden from '../components/Forbidden';\n\ninterface EntriesListProps {\n  onEdit: (entryId: number) => any;\n  onDetail: (entryId: number) => any;\n  type: 'EXPENSE' | 'REVENUE';\n}\n\nexport default function EntriesList(props: EntriesListProps) {\n  const { type } = props;\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    entries,\n    fetching,\n    fetchEntries,\n    setQuery,\n    selected,\n    setSelected,\n    removeEntry,\n  } = useCashFlow(type);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    fetchEntries().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchEntries]);\n\n  useEffect(() => {\n    if (didMount.current) {\n      const params = new URLSearchParams(location.search);\n      const yearMonth = params.get('yearMonth');\n      if (yearMonth) setQuery({ yearMonth });\n    } else {\n      didMount.current = true;\n    }\n  }, [location.search, setQuery]);\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <Table<CashFlow.EntrySummary>\n      dataSource={entries}\n      loading={fetching}\n      rowKey={'id'}\n      rowSelection={{\n        selectedRowKeys: selected,\n        onChange: setSelected,\n        getCheckboxProps(record) {\n          return !record.canBeDeleted ? { disabled: true } : {};\n        },\n      }}\n      columns={[\n        {\n          dataIndex: 'id',\n          title: type === 'EXPENSE' ? 'Despesas' : 'Receitas',\n          responsive: ['xs'],\n          render(_, record) {\n            return (\n              <>\n                <Descriptions column={1}>\n                  <Descriptions.Item label={'Descrição'}>\n                    {record.description}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Categoria'}>\n                    {record.category.name}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Data'}>\n                    {moment(record.transactedOn).format('DD/MM/YYYY')}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Valor'}>\n                    {transformIntoBrl(record.amount)}\n                  </Descriptions.Item>\n                </Descriptions>\n                <Space>\n                  <DoubleConfirm\n                    popConfirmTitle={\n                      type === 'EXPENSE'\n                        ? 'Remover despesa?'\n                        : 'Remover receita?'\n                    }\n                    modalTitle={\n                      type === 'EXPENSE'\n                        ? 'Deseja mesmo remover essa despesa?'\n                        : 'Deseja mesmo remover esta receita?'\n                    }\n                    modalContent={\n                      type === 'EXPENSE'\n                        ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                        : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                    }\n                    onConfirm={async () => {\n                      await removeEntry(record.id);\n                    }}\n                    disabled={!record.canBeDeleted}\n                  >\n                    <Button\n                      type={'text'}\n                      size={'small'}\n                      icon={<DeleteOutlined />}\n                      danger\n                    />\n                  </DoubleConfirm>\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<EditOutlined />}\n                    onClick={() => props.onEdit(record.id)}\n                  />\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<EyeOutlined />}\n                    onClick={() => {\n                      props.onDetail(record.id);\n                    }}\n                  />\n                </Space>\n              </>\n            );\n          },\n        },\n        {\n          dataIndex: 'description',\n          title: 'Descrição',\n          width: 300,\n          ellipsis: true,\n          responsive: ['sm'],\n          render(description: CashFlow.EntrySummary['description']) {\n            return <Tooltip title={description}>{description}</Tooltip>;\n          },\n        },\n        {\n          dataIndex: 'category',\n          title: 'Categoria',\n          align: 'center',\n          width: 120,\n          responsive: ['sm'],\n          render(category: CashFlow.EntrySummary['category']) {\n            return <Tag>{category.name}</Tag>;\n          },\n        },\n        {\n          dataIndex: 'transactedOn',\n          title: 'Data',\n          align: 'center',\n          responsive: ['sm'],\n          width: 120,\n          filterDropdown() {\n            return (\n              <Card>\n                <DatePicker.MonthPicker\n                  format={'YYYY - MMMM'}\n                  allowClear={false}\n                  onChange={(date) => {\n                    history.push({\n                      search: `yearMonth=${\n                        date?.format('YYYY-MM') || moment().format('YYYY-MM')\n                      }`,\n                    });\n                  }}\n                />\n              </Card>\n            );\n          },\n          render(transactedOn: CashFlow.EntrySummary['transactedOn']) {\n            return moment(transactedOn).format('DD/MM/YYYY');\n          },\n        },\n        {\n          dataIndex: 'amount',\n          title: 'Valor',\n          align: 'right',\n          width: 120,\n          responsive: ['sm'],\n          render: transformIntoBrl,\n        },\n        {\n          dataIndex: 'id',\n          title: 'Ações',\n          align: 'right',\n          responsive: ['sm'],\n          width: 120,\n          render(id: number, record) {\n            return (\n              <Space>\n                <DoubleConfirm\n                  popConfirmTitle={\n                    type === 'EXPENSE' ? 'Remover despesa?' : 'Remover receita?'\n                  }\n                  modalTitle={\n                    type === 'EXPENSE'\n                      ? 'Deseja mesmo remover essa despesa?'\n                      : 'Deseja mesmo remover esta receita?'\n                  }\n                  modalContent={\n                    type === 'EXPENSE'\n                      ? 'Remover uma despesa pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                      : 'Remover uma receita pode gerar um impacto negativo no gráfico de receitas e despesas. Esta ação é irreversível'\n                  }\n                  onConfirm={async () => {\n                    await removeEntry(id);\n                  }}\n                  disabled={!record.canBeDeleted}\n                >\n                  <Button\n                    type={'text'}\n                    size={'small'}\n                    icon={<DeleteOutlined />}\n                    disabled={!record.canBeDeleted}\n                    danger\n                  />\n                </DoubleConfirm>\n                <Button\n                  type={'text'}\n                  size={'small'}\n                  icon={<EditOutlined />}\n                  disabled={!record.canBeEdited}\n                  onClick={() => props.onEdit(id)}\n                />\n                <Button\n                  type={'text'}\n                  size={'small'}\n                  icon={<EyeOutlined />}\n                  onClick={() => {\n                    props.onDetail(id);\n                  }}\n                />\n              </Space>\n            );\n          },\n        },\n      ]}\n    />\n  );\n}\n","import { CashFlow } from 'danielbonifacio-sdk';\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as CategoryActions from '../store/EntriesCategory.slice';\n\nexport default function useEntriesCategories() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const fetching = useSelector((s: RootState) => s.cashFlow.category.fetching);\n  const expenses = useSelector((s: RootState) => s.cashFlow.category.expenses);\n  const revenues = useSelector((s: RootState) => s.cashFlow.category.revenues);\n\n  const fetchCategories = useCallback(\n    () => dispatch(CategoryActions.getCategories()).unwrap(),\n    [dispatch]\n  );\n\n  const createCategory = useCallback(\n    (category: CashFlow.CategoryInput) =>\n      dispatch(CategoryActions.createCategory(category)).unwrap(),\n    [dispatch]\n  );\n\n  const deleteCategory = useCallback(\n    (categoryId: number) =>\n      dispatch(CategoryActions.deleteCategory(categoryId)).unwrap(),\n    [dispatch]\n  );\n\n  return {\n    expenses,\n    revenues,\n    fetching,\n    fetchCategories,\n    createCategory,\n    deleteCategory,\n  };\n}\n","import {\n  Button,\n  Row,\n  Table,\n  Form,\n  Input,\n  Col,\n  notification,\n  Popconfirm,\n} from 'antd';\nimport { CashFlow } from 'danielbonifacio-sdk';\nimport { useEffect } from 'react';\nimport {\n  DeleteOutlined,\n  CheckCircleOutlined,\n  ReloadOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport useEntriesCategories from '../../core/hooks/useEntriesCategories';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport Forbidden from '../components/Forbidden';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\n\nexport default function EntryCategoryManager(props: {\n  type: 'EXPENSE' | 'REVENUE';\n}) {\n  const { xs } = useBreakpoint();\n  const { expenses, fetchCategories, fetching, revenues, deleteCategory } =\n    useEntriesCategories();\n\n  const [showCreationModal, setShowCreationModal] = useState(false);\n\n  const openCreationModal = useCallback(() => setShowCreationModal(true), []);\n  const closeCreationModal = useCallback(() => setShowCreationModal(false), []);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    fetchCategories().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchCategories]);\n\n  if (forbidden) return <Forbidden />;\n\n  return (\n    <>\n      <Modal\n        footer={null}\n        title={'Adicionar categoria'}\n        visible={showCreationModal}\n        onCancel={closeCreationModal}\n        destroyOnClose\n      >\n        <CategoryForm\n          onSuccess={() => {\n            closeCreationModal();\n            notification.success({\n              message: 'Categoria cadastrada com sucesso',\n            });\n          }}\n        />\n      </Modal>\n      <Row justify={'space-between'} style={{ marginBottom: 16 }}>\n        <Button onClick={fetchCategories} icon={<ReloadOutlined />}>\n          {xs ? 'Atualizar' : 'Atualizar categorias'}\n        </Button>\n        <Button\n          onClick={openCreationModal}\n          icon={<PlusCircleOutlined />}\n          type={'primary'}\n        >\n          {xs ? 'Adicionar' : 'Adicionar categoria'}\n        </Button>\n      </Row>\n      <Table<CashFlow.CategorySummary>\n        size='small'\n        rowKey={'id'}\n        loading={fetching}\n        dataSource={props.type === 'EXPENSE' ? expenses : revenues}\n        columns={[\n          {\n            dataIndex: 'name',\n            title: 'Descrição',\n          },\n          {\n            dataIndex: 'totalEntries',\n            title: 'Vínculos',\n            align: 'right',\n          },\n          {\n            dataIndex: 'id',\n            title: 'Ações',\n            align: 'right',\n            render(id: number, record) {\n              return (\n                <Popconfirm\n                  title={'Remover categoria?'}\n                  disabled={!record.canBeDeleted}\n                  onConfirm={async () => {\n                    await deleteCategory(id);\n                    notification.success({\n                      message: 'Categoria removida com sucesso',\n                    });\n                  }}\n                >\n                  <Button\n                    danger\n                    type={'ghost'}\n                    size={'small'}\n                    icon={<DeleteOutlined />}\n                    disabled={!record.canBeDeleted}\n                  />\n                </Popconfirm>\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n}\n\nfunction CategoryForm(props: { onSuccess: () => any }) {\n  const { onSuccess } = props;\n\n  const { createCategory } = useEntriesCategories();\n\n  const handleFormSubmit = useCallback(\n    async (form: CashFlow.CategoryInput) => {\n      const newCategoryDTO: CashFlow.CategoryInput = {\n        ...form,\n        type: 'EXPENSE',\n      };\n\n      await createCategory(newCategoryDTO);\n      onSuccess();\n    },\n    [createCategory, onSuccess]\n  );\n\n  return (\n    <Form layout={'vertical'} onFinish={handleFormSubmit}>\n      <Row justify={'end'}>\n        <Col xs={24}>\n          <Form.Item\n            label={'Categoria'}\n            name={'name'}\n            rules={[\n              { required: true, message: 'O nome da categoria é obrigatório' },\n            ]}\n          >\n            <Input placeholder={'E.g.: Infra'} />\n          </Form.Item>\n        </Col>\n        <Button\n          type={'primary'}\n          htmlType={'submit'}\n          icon={<CheckCircleOutlined />}\n        >\n          Cadastrar categoria\n        </Button>\n      </Row>\n    </Form>\n  );\n}\n","import {\n  Col,\n  Row,\n  Form,\n  Input,\n  DatePicker,\n  Divider,\n  Space,\n  Button,\n  Select,\n  Skeleton,\n} from 'antd';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport moment, { Moment } from 'moment';\nimport { useForm } from 'antd/lib/form/Form';\n\nimport CurrencyInput from '../components/CurrencyInput';\nimport useEntriesCategories from '../../core/hooks/useEntriesCategories';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport Forbidden from '../components/Forbidden';\n\ntype EntryFormSubmit = Omit<CashFlow.EntryInput, 'transactedOn'> & {\n  transactedOn: Moment;\n};\n\ninterface EntryFormProps {\n  type: 'EXPENSE' | 'REVENUE';\n  onSuccess: () => any;\n  editingEntry?: number | undefined;\n}\n\nexport default function EntryForm({\n  type,\n  onSuccess,\n  editingEntry,\n}: EntryFormProps) {\n  const [loading, setLoading] = useState(false);\n\n  const [form] = useForm();\n  const { revenues, expenses, fetching, fetchCategories } =\n    useEntriesCategories();\n\n  const {\n    createEntry,\n    fetching: fetchingEntries,\n    updateEntry,\n  } = useCashFlow(type);\n\n  const [forbidden, setForbidden] = useState(false);\n\n  useEffect(() => {\n    fetchCategories().catch((err) => {\n      if (err?.data?.status === 403) {\n        setForbidden(true);\n        return;\n      }\n      throw err;\n    });\n  }, [fetchCategories]);\n\n  useEffect(() => {\n    if (editingEntry) {\n      setLoading(true);\n      CashFlowService.getExistingEntry(editingEntry)\n        .then((entry) => ({\n          ...entry,\n          transactedOn: moment(entry.transactedOn),\n        }))\n        .then(form.setFieldsValue)\n        .finally(() => setLoading(false));\n    }\n  }, [editingEntry, form]);\n\n  const categories = useMemo(\n    () => (type === 'EXPENSE' ? expenses : revenues),\n    [expenses, revenues, type]\n  );\n\n  const handleFormSubmit = useCallback(\n    async (form: EntryFormSubmit) => {\n      const newEntryDTO: CashFlow.EntryInput = {\n        ...form,\n        transactedOn: form.transactedOn.format('YYYY-MM-DD'),\n        type,\n      };\n\n      editingEntry\n        ? await updateEntry(editingEntry, newEntryDTO)\n        : await createEntry(newEntryDTO);\n      onSuccess();\n    },\n    [type, createEntry, onSuccess, updateEntry, editingEntry]\n  );\n\n  if (forbidden) return <Forbidden />;\n\n  return loading ? (\n    <>\n      <Skeleton />\n      <Skeleton title={false} />\n      <Skeleton title={false} />\n    </>\n  ) : (\n    <Form\n      autoComplete={'off'}\n      form={form}\n      layout={'vertical'}\n      onFinish={handleFormSubmit}\n    >\n      <Row gutter={16}>\n        <Col xs={24}>\n          <Form.Item\n            label={'Descrição'}\n            name={'description'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <Input placeholder={'Pagamento da AWS'} />\n          </Form.Item>\n        </Col>\n        <Col xs={24}>\n          <Form.Item\n            label={'Categoria'}\n            name={['category', 'id']}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <Select loading={fetching} placeholder={'Selecione uma categoria'}>\n              {categories.map((category) => (\n                <Select.Option key={category.id} value={category.id}>\n                  {category.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={'Montante'}\n            name={'amount'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <CurrencyInput\n              defaultValue={'R$ 0,00'}\n              onChange={(_, value) =>\n                form.setFieldsValue({\n                  amount: value,\n                })\n              }\n            />\n          </Form.Item>\n        </Col>\n        <Col xs={24} lg={12}>\n          <Form.Item\n            label={type === 'EXPENSE' ? 'Data da saída' : 'Data da entrada'}\n            name={'transactedOn'}\n            rules={[{ required: true, message: 'Campo obrigatório' }]}\n          >\n            <DatePicker\n              format={'DD/MM/YYYY'}\n              style={{ width: '100%' }}\n              disabledDate={(date) => {\n                return date.isAfter(moment());\n              }}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Divider style={{ marginTop: 0 }} />\n      <Row justify={'end'}>\n        <Space>\n          <Button>Cancelar</Button>\n          <Button\n            loading={fetchingEntries}\n            type={'primary'}\n            htmlType={'submit'}\n          >\n            {editingEntry ? 'Atualizar' : 'Cadastrar'}{' '}\n            {type === 'EXPENSE' ? 'despesa' : 'receita'}\n          </Button>\n        </Space>\n      </Row>\n    </Form>\n  );\n}\n","import { Descriptions, Skeleton } from 'antd';\nimport { CashFlow, CashFlowService } from 'danielbonifacio-sdk';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useCallback, useState } from 'react';\nimport transformIntoBrl from '../../core/utils/transformIntoBrl';\n\ninterface EntryDetailsProps {\n  entryId: number;\n}\n\nexport default function EntryDetails({ entryId }: EntryDetailsProps) {\n  const [entry, setEntry] = useState<CashFlow.EntryDetailed>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchEntry = useCallback((id: number) => {\n    setLoading(true);\n    CashFlowService.getExistingEntry(id)\n      .then(setEntry)\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    fetchEntry(entryId);\n  }, [fetchEntry, entryId]);\n\n  return loading ? (\n    <>\n      <Skeleton />\n      <Skeleton title={false} />\n      <Skeleton title={false} />\n    </>\n  ) : (\n    <Descriptions column={1} bordered size={'small'}>\n      <Descriptions.Item label={'Descrição'}>\n        {entry?.description}\n      </Descriptions.Item>\n      <Descriptions.Item label={'Categoria'}>\n        {entry?.category.name}\n      </Descriptions.Item>\n      <Descriptions.Item label={'Data de entrada'}>\n        {moment(entry?.transactedOn).format('DD/MM/YYYY')}\n      </Descriptions.Item>\n      <Descriptions.Item label={'Valor'}>\n        {transformIntoBrl(entry?.amount)}\n      </Descriptions.Item>\n      <Descriptions.Item label={'Criado em'}>\n        {moment(entry?.createdAt).format('DD/MM/YYYY \\\\à\\\\s HH:mm')}\n      </Descriptions.Item>\n      <Descriptions.Item label={'Criado por'}>\n        {entry?.createdBy.name}\n      </Descriptions.Item>\n      {entry?.createdAt !== entry?.updatedAt && (\n        <>\n          <Descriptions.Item label={'Atualizado em'}>\n            {moment(entry?.updatedAt).format('DD/MM/YYYY \\\\à\\\\s HH:mm')}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Atualizado por'}>\n            {entry?.updatedBy.name}\n          </Descriptions.Item>\n        </>\n      )}\n    </Descriptions>\n  );\n}\n","import {\n  Button,\n  Divider,\n  notification,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport {\n  InfoCircleFilled,\n  TagOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport EntriesList from '../features/EntriesList';\nimport useCashFlow from '../../core/hooks/useCashFlow';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport EntryCategoryManager from '../features/EntryCategoryManager';\nimport EntryForm from '../features/EntryForm';\nimport EntryDetails from '../features/EntryDetails';\nimport moment from 'moment';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nconst { Title, Text } = Typography;\n\ninterface EntryCRUDProps {\n  type: 'EXPENSE' | 'REVENUE';\n}\n\nexport default function EntryCRUD({ type }: EntryCRUDProps) {\n  const { selected, removeEntries, query } = useCashFlow(type);\n  const { xs } = useBreakpoint();\n\n  const [editingEntry, setEditingEntry] = useState<number | undefined>(\n    undefined\n  );\n\n  const [detailedEntry, setDetailedEntry] = useState<number | undefined>(\n    undefined\n  );\n\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n\n  const openCategoryModal = useCallback(() => setShowCategoryModal(true), []);\n  const closeCategoryModal = useCallback(() => setShowCategoryModal(false), []);\n\n  const openFormModal = useCallback(() => setShowFormModal(true), []);\n  const closeFormModal = useCallback(() => setShowFormModal(false), []);\n\n  const openDetailsModal = useCallback(() => setShowDetailsModal(true), []);\n  const closeDetailsModal = useCallback(() => setShowDetailsModal(false), []);\n\n  return (\n    <>\n      <Modal\n        closeIcon={null}\n        visible={showCategoryModal}\n        onCancel={closeCategoryModal}\n        footer={null}\n        title={'Gerenciar categorias'}\n        destroyOnClose\n      >\n        <EntryCategoryManager type={type} />\n      </Modal>\n      <Modal\n        closeIcon={null}\n        visible={showFormModal}\n        onCancel={() => {\n          closeFormModal();\n          setEditingEntry(undefined);\n        }}\n        footer={null}\n        title={type === 'EXPENSE' ? 'Cadastrar despesa' : 'Cadastrar receita'}\n        destroyOnClose\n      >\n        <EntryForm\n          type={type}\n          editingEntry={editingEntry}\n          onSuccess={() => {\n            closeFormModal();\n            notification.success({\n              message:\n                type === 'EXPENSE'\n                  ? 'Despesa cadastrada com sucesso'\n                  : 'Receita cadastrada com sucesso',\n            });\n          }}\n        />\n      </Modal>\n      <Modal\n        closeIcon={null}\n        visible={showDetailsModal}\n        onCancel={() => {\n          closeDetailsModal();\n        }}\n        footer={null}\n        title={'Detalhes da despesa'}\n        destroyOnClose\n      >\n        {detailedEntry && <EntryDetails entryId={detailedEntry} />}\n      </Modal>\n      <Row\n        justify={'space-between'}\n        style={{\n          marginBottom: 16,\n          flexDirection: xs ? 'column-reverse' : 'row',\n        }}\n      >\n        <Space style={{ ...(xs && { marginTop: 16 }) }}>\n          <DoubleConfirm\n            popConfirmTitle={`Remover ${\n              selected.length > 1\n                ? type === 'EXPENSE'\n                  ? 'despesas selecionadas?'\n                  : 'receitas selecionadas?'\n                : type === 'EXPENSE'\n                ? 'despesa selecionada?'\n                : 'receita selecionada?'\n            }`}\n            modalTitle={\n              type === 'EXPENSE' ? 'Remover despesas' : 'Remover receitas'\n            }\n            modalContent={\n              type === 'EXPENSE'\n                ? 'Remover uma ou mais despesas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.'\n                : 'Remover uma ou mais receitas pode gerar impacto negativo no gráfico de receitas e despesas da empresa. Esta é uma ação irreversível.'\n            }\n            onConfirm={async () => {\n              await removeEntries(selected as number[]);\n            }}\n            disabled={!selected.length}\n          >\n            <Button danger={xs} type={'primary'} disabled={!selected.length}>\n              Remover\n            </Button>\n          </DoubleConfirm>\n        </Space>\n        <Space>\n          <Button\n            type={'primary'}\n            icon={<TagOutlined />}\n            onClick={openCategoryModal}\n          >\n            Categorias\n          </Button>\n          <Button\n            type={'primary'}\n            icon={<PlusCircleOutlined />}\n            onClick={openFormModal}\n          >\n            Adicionar {type === 'EXPENSE' ? 'despesa' : 'receita'}\n          </Button>\n        </Space>\n      </Row>\n      <Space direction={'vertical'}>\n        <Title level={3}>\n          Recuperando {type === 'EXPENSE' ? 'despesas' : 'receitas'} do mês de{' '}\n          {moment(query.yearMonth).format('MMMM \\\\d\\\\e YYYY')}\n        </Title>\n        <Space>\n          <Text>\n            É possível filtrar {type === 'EXPENSE' ? 'despesas' : 'receitas'}{' '}\n            por mês\n          </Text>\n          <Tooltip placement={'right'} title={'Use a coluna Data para filtrar'}>\n            <InfoCircleFilled />\n          </Tooltip>\n        </Space>\n      </Space>\n\n      <Divider />\n\n      <EntriesList\n        type={type}\n        onEdit={(id) => {\n          setEditingEntry(id);\n          openFormModal();\n        }}\n        onDetail={(id) => {\n          setDetailedEntry(id);\n          openDetailsModal();\n        }}\n      />\n    </>\n  );\n}\n","import useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport EntryCRUD from '../features/EntryCRUD';\n\nexport default function CashFlowRevenuesView() {\n  useBreadcrumb('Fluxo de caixa/Receitas');\n  return <EntryCRUD type={'REVENUE'} />;\n}\n","import useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport EntryCRUD from '../features/EntryCRUD';\n\nexport default function CashFlowExpensesView() {\n  useBreadcrumb('Fluxo de caixa/Despesas');\n  return <EntryCRUD type={'EXPENSE'} />;\n}\n","export default function formatPhone(phoneNumber: string) {\n  const numberArray = phoneNumber.split('');\n  const ddd = numberArray.slice(0, 2).join('');\n  const firstSlice = numberArray.slice(2, 7).join('');\n  const lastSlice = numberArray.slice(7, 11).join('');\n\n  return `(${ddd}) ${firstSlice}-${lastSlice}`;\n}\n","import {\n  Button,\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n  Progress,\n  Descriptions,\n  Divider,\n  Popconfirm,\n  Table,\n  Switch,\n  Tooltip,\n} from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\nimport confirm from 'antd/lib/modal/confirm';\nimport { useEffect } from 'react';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport useUser from '../../core/hooks/useUser';\nimport { WarningFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Post } from 'danielbonifacio-sdk';\nimport usePosts from '../../core/hooks/usePosts';\nimport NotFoundError from '../components/NotFoundError';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport { useState } from 'react';\nimport formatPhone from '../../core/utils/formatPhone';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\n\nexport default function UserDetailsView() {\n  usePageTitle('Detalhes do usuário');\n\n  const params = useParams<{ id: string }>();\n  const [page, setPage] = useState(0);\n  const { lg } = useBreakpoint();\n\n  const { user, fetchUser, notFound, toggleUserStatus } = useUser();\n\n  useBreadcrumb(`Usuários/${user?.name || 'Detalhes'}`);\n  const {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle,\n  } = usePosts();\n\n  useEffect(() => {\n    if (!isNaN(Number(params.id))) fetchUser(Number(params.id));\n  }, [fetchUser, params.id]);\n\n  useEffect(() => {\n    if (user?.role === 'EDITOR') fetchUserPosts(user.id, page);\n  }, [fetchUserPosts, user, page]);\n\n  if (isNaN(Number(params.id))) return <Redirect to={'/usuarios'} />;\n\n  if (notFound)\n    return (\n      <Card>\n        <NotFoundError\n          title={'Usuário não encontrado'}\n          actionDestination={'/usuarios'}\n          actionTitle={'Voltar para lista de usuários'}\n        />\n      </Card>\n    );\n\n  if (!user) return <Skeleton />;\n\n  return (\n    <Row gutter={24}>\n      <Col xs={24} lg={4}>\n        <Row justify={'center'}>\n          <Avatar size={120} src={user.avatarUrls.small} />\n        </Row>\n      </Col>\n      <Col xs={24} lg={20}>\n        <Space\n          style={{ width: '100%' }}\n          direction={'vertical'}\n          align={lg ? 'start' : 'center'}\n        >\n          <Typography.Title level={2}>{user.name}</Typography.Title>\n          <Typography.Paragraph\n            style={{\n              textAlign: lg ? 'left' : 'center',\n            }}\n            ellipsis={{\n              rows: 2,\n            }}\n          >\n            {user.bio}\n          </Typography.Paragraph>\n          <Space>\n            <Link to={`/usuarios/edicao/${user.id}`}>\n              <Button type={'primary'}>Editar perfil</Button>\n            </Link>\n            <Popconfirm\n              disabled={\n                (user.active && !user.canBeDeactivated) ||\n                (!user.active && !user.canBeActivated)\n              }\n              title={\n                user.active\n                  ? `Desabilitar ${user.name}`\n                  : `Habilitar ${user.name}`\n              }\n              onConfirm={() => {\n                confirm({\n                  icon: <WarningFilled style={{ color: '#09f' }} />,\n                  title: `Tem certeza que deseja ${\n                    user.active\n                      ? `desabilitar ${user.name}?`\n                      : `habilitar ${user.name}?`\n                  }`,\n                  onOk() {\n                    toggleUserStatus(user).then(() => {\n                      fetchUser(Number(params.id));\n                    });\n                  },\n                  content: user.active\n                    ? 'Desabilitar um usuário fará com que ele seja automaticamente desligado da plataforma, podendo causar prejuízos em seus ganhos.'\n                    : 'Habilitar um usuário fará com que ele ganhe acesso a plataforma novamente, possibilitando criação e publicação de posts.',\n                });\n              }}\n            >\n              <Button\n                disabled={\n                  (user.active && !user.canBeDeactivated) ||\n                  (!user.active && !user.canBeActivated)\n                }\n                type={'primary'}\n              >\n                {user.active ? 'Desabilitar' : 'Habilitar'}\n              </Button>\n            </Popconfirm>\n          </Space>\n        </Space>\n      </Col>\n      <Divider />\n      {!!user.skills?.length && (\n        <Col xs={24} lg={12}>\n          <Space direction='vertical' style={{ width: '100%' }}>\n            {user.skills?.map((skill) => (\n              <div key={skill.name}>\n                <Typography.Text>{skill.name}</Typography.Text>\n                <Progress percent={skill.percentage} success={{ percent: 0 }} />\n              </div>\n            ))}\n          </Space>\n        </Col>\n      )}\n      <Col xs={24} lg={12}>\n        <Descriptions column={1} bordered size={'small'}>\n          <Descriptions.Item label={'País'}>\n            {user.location.country}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Estado'}>\n            {user.location.state}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Cidade'}>\n            {user.location.city}\n          </Descriptions.Item>\n          <Descriptions.Item label={'Telefone'}>\n            {formatPhone(user.phone)}\n          </Descriptions.Item>\n        </Descriptions>\n      </Col>\n      {user.role === 'EDITOR' && (\n        <>\n          <Divider />\n          <Col xs={24}>\n            <Table<Post.Summary>\n              dataSource={posts?.content}\n              rowKey={'id'}\n              loading={loadingFetch}\n              pagination={{\n                onChange: (page) => setPage(page - 1),\n                total: posts?.totalElements,\n                pageSize: 10,\n              }}\n              columns={[\n                {\n                  responsive: ['xs'],\n                  title: 'Posts',\n                  render(element) {\n                    return (\n                      <Descriptions column={1}>\n                        <Descriptions.Item label={'Título'}>\n                          {element.title}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Criação'}>\n                          {moment(element.createdAt).format('DD/MM/YYYY')}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Atualização'}>\n                          {moment(element.updatedAt).format('DD/MM/YYYY')}\n                        </Descriptions.Item>\n                        <Descriptions.Item label={'Publicado'}>\n                          <Switch checked={element.published} />\n                        </Descriptions.Item>\n                      </Descriptions>\n                    );\n                  },\n                },\n                {\n                  dataIndex: 'title',\n                  title: 'Título',\n                  ellipsis: true,\n                  width: 300,\n                  responsive: ['sm'],\n                  render(title: string) {\n                    return <Tooltip title={title}>{title}</Tooltip>;\n                  },\n                },\n                {\n                  dataIndex: 'createdAt',\n                  title: 'Criação',\n                  width: 180,\n                  align: 'center',\n                  responsive: ['sm'],\n                  render: (item) => moment(item).format('DD/MM/YYYY'),\n                },\n                {\n                  dataIndex: 'updatedAt',\n                  title: 'Última atualização',\n                  width: 200,\n                  align: 'center',\n                  responsive: ['sm'],\n                  render: (item) =>\n                    moment(item).format('DD/MM/YYYY \\\\à\\\\s hh:mm'),\n                },\n                {\n                  dataIndex: 'published',\n                  title: 'Publicado',\n                  align: 'center',\n                  width: 120,\n                  responsive: ['sm'],\n                  render(published: boolean, post) {\n                    return (\n                      <Switch\n                        checked={published}\n                        loading={loadingToggle}\n                        onChange={() => {\n                          togglePostStatus(post).then(() => {\n                            fetchUserPosts(user.id);\n                          });\n                        }}\n                      />\n                    );\n                  },\n                },\n              ]}\n            />\n          </Col>\n        </>\n      )}\n    </Row>\n  );\n}\n","import { PostService, Post } from 'danielbonifacio-sdk';\nimport { useCallback, useState } from 'react';\n\nexport default function usePosts() {\n  const [loadingFetch, setLoadingFetch] = useState(false);\n  const [loadingToggle, setLoadingToggle] = useState(false);\n  const [posts, setPosts] = useState<Post.Paginated>();\n\n  const fetchUserPosts = useCallback(\n    async (userId: number, page = 0) => {\n      setLoadingFetch(true);\n      try {\n        const posts = await PostService.getAllPosts({\n          editorId: userId,\n          showAll: true,\n          page,\n          size: 10,\n        });\n        setPosts(posts);\n      } finally {\n        setLoadingFetch(false);\n      }\n    },\n    []\n  );\n\n  const togglePostStatus = useCallback(\n    async (post: Post.Summary | Post.Detailed) => {\n      setLoadingToggle(true);\n      try {\n        post.published\n          ? await PostService.deactivateExistingPost(\n              post.id\n            )\n          : await PostService.publishExistingPost(post.id);\n      } finally {\n        setLoadingToggle(false);\n      }\n    },\n    []\n  );\n\n  return {\n    fetchUserPosts,\n    posts,\n    togglePostStatus,\n    loadingFetch,\n    loadingToggle,\n  };\n}\n","import { Descriptions, Skeleton, Typography } from 'antd';\nimport { Payment } from 'danielbonifacio-sdk';\n\ninterface PaymentBonusesProps {\n  loading?: boolean;\n  bonuses?: Payment.Detailed['bonuses'];\n}\n\nexport default function PaymentBonuses(props: PaymentBonusesProps) {\n  if (props.loading) return <Skeleton />;\n  return (\n    <>\n      <Typography.Title level={2}>Bônus</Typography.Title>\n      <Descriptions bordered size={'small'} column={1}>\n        {props.bonuses?.map((bonus, index) => (\n          <Descriptions.Item key={index} label={bonus.title}>\n            {bonus.amount.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Descriptions.Item>\n        ))}\n      </Descriptions>\n    </>\n  );\n}\n","import { Descriptions, Divider, Skeleton, Space, Tag, Typography } from 'antd';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\n\ninterface PaymentHeaderProps {\n  loading?: boolean;\n  editorId?: number;\n  editorName?: string;\n  periodStart?: string;\n  periodEnd?: string;\n  postsEarnings?: number;\n  totalEarnings?: number;\n}\n\nexport default function PaymentHeader(props: PaymentHeaderProps) {\n  const { xs } = useBreakpoint();\n  if (props.loading) return <Skeleton />;\n  return (\n    <>\n      <Typography.Title>Pagamento</Typography.Title>\n      <Typography.Text>\n        A base do pagamento é calculada pela quantidade de palavras escritas\n      </Typography.Text>\n      <Divider />\n      <Descriptions column={xs ? 1 : 2} size={xs ? 'small' : 'default'}>\n        <Descriptions.Item label={'Editor'}>\n          {props.editorName}\n        </Descriptions.Item>\n        <Descriptions.Item label={'Período'}>\n          <Space size={8}>\n            <Tag style={{ margin: 0 }}>{props.periodStart}</Tag>\n            <span>{'à'}</span>\n            <Tag>{props.periodEnd}</Tag>\n          </Space>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Ganhos por posts'}>\n          <Tag>\n            {props.postsEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Total'}>\n          <Tag>\n            {props.totalEarnings?.toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL',\n              maximumFractionDigits: 2,\n            })}\n          </Tag>\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n}\n","import { Descriptions, Table, Tooltip } from 'antd';\nimport { Payment, Post } from 'danielbonifacio-sdk';\n\ninterface PaymentPostsProps {\n  loading?: boolean;\n  posts: Payment.PostWithEarnings[];\n}\n\nexport default function PaymentPosts(props: PaymentPostsProps) {\n  return (\n    <>\n      <Table<Post.WithEarnings>\n        loading={props.loading}\n        dataSource={props.posts}\n        pagination={false}\n        rowKey={'id'}\n        columns={[\n          {\n            responsive: ['xs'],\n            title: 'Posts',\n            render(post: Post.WithEarnings) {\n              return (\n                <Descriptions column={1}>\n                  <Descriptions.Item label={'Título'}>\n                    {post.title}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Preço por palavra'}>\n                    {post.earnings.pricePerWord.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Palavras no post'}>\n                    {post.earnings.words}\n                  </Descriptions.Item>\n                  <Descriptions.Item label={'Ganho no post'}>\n                    {post.earnings.totalAmount.toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                      maximumFractionDigits: 2,\n                    })}\n                  </Descriptions.Item>\n                </Descriptions>\n              );\n            },\n          },\n          {\n            dataIndex: 'title',\n            title: 'Post',\n            ellipsis: true,\n            width: 300,\n            responsive: ['sm'],\n            render(value: string) {\n              return <Tooltip title={value}>{value}</Tooltip>;\n            },\n          },\n          {\n            dataIndex: 'earnings.pricePerWord'.split('.'),\n            title: 'Preço por palavra',\n            align: 'right',\n            width: 150,\n            responsive: ['sm'],\n            render(price: number) {\n              return price.toLocaleString('pt-br', {\n                style: 'currency',\n                currency: 'BRL',\n                maximumFractionDigits: 2,\n              });\n            },\n          },\n          {\n            dataIndex: 'earnings.words'.split('.'),\n            title: 'Palavras no post',\n            width: 150,\n            align: 'right',\n            responsive: ['sm'],\n          },\n          {\n            dataIndex: 'earnings.totalAmount'.split('.'),\n            title: 'Total ganho neste post',\n            align: 'right',\n            responsive: ['sm'],\n            width: 170,\n          },\n        ]}\n      />\n    </>\n  );\n}\n","import { PrinterOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Card, Divider, notification, Space, Tag } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useBreadcrumb from '../../core/hooks/useBreadcrumb';\nimport usePageTitle from '../../core/hooks/usePageTitle';\nimport usePayment from '../../core/hooks/usePayment';\nimport DoubleConfirm from '../components/DoubleConfirm';\nimport NotFoundError from '../components/NotFoundError';\nimport PaymentBonuses from '../features/PaymentBonuses';\nimport PaymentHeader from '../features/PaymentHeader';\nimport PaymentPosts from '../features/PaymentPosts';\n\nexport default function PaymentDetailsView() {\n  usePageTitle('Detalhes do pagamento');\n  useBreadcrumb('Pagamento/Detalhes');\n  const params = useParams<{ id: string }>();\n  const history = useHistory();\n\n  const {\n    fetchPayment,\n    fetchPosts,\n    fetchingPayment,\n    fetchingPosts,\n    paymentNotFound,\n    approvingPayment,\n    approvePayment,\n    payment,\n    posts,\n  } = usePayment();\n\n  useEffect(() => {\n    const paymentId = Number(params.id);\n    if (isNaN(paymentId)) {\n      return history.push('/pagamentos');\n    } else {\n      fetchPosts(paymentId);\n      fetchPayment(paymentId);\n    }\n  }, [fetchPosts, fetchPayment, params.id, history]);\n\n  if (paymentNotFound)\n    return (\n      <NotFoundError\n        title='Pagamento não encontrado'\n        actionDestination='/pagamentos'\n        actionTitle={'Ir para a lista de pagamentos'}\n      />\n    );\n\n  return (\n    <>\n      <Space style={{ marginBottom: 16 }}>\n        <Button\n          className='no-print'\n          disabled={!payment}\n          type={'primary'}\n          icon={<PrinterOutlined />}\n          onClick={window.print}\n        >\n          Imprimir\n        </Button>\n        {payment?.approvedAt ? (\n          <Tag>\n            Pagamento aprovado em{' '}\n            {moment(payment.approvedAt).format('DD/MM/YYYY')}\n          </Tag>\n        ) : (\n          <DoubleConfirm\n            popConfirmTitle={'Deseja aprovar este agendamento?'}\n            modalTitle={'Ação irreversível'}\n            disabled={!payment || !payment.canBeApproved}\n            modalContent={\n              'Aprovar um agendamento de pagamento gera uma despesa que não pode ser removida do fluxo de caixa. Essa ação não poderá ser desfeita.'\n            }\n            onConfirm={async () => {\n              if (payment) {\n                await approvePayment(payment.id);\n                fetchPayment(payment.id);\n                notification.success({\n                  message: 'Pagamento aprovado com sucesso',\n                });\n              }\n            }}\n          >\n            <Button\n              loading={approvingPayment}\n              disabled={!payment || !payment.canBeApproved}\n              icon={<CheckCircleOutlined />}\n              type={'primary'}\n              danger\n            >\n              Aprovar agendamento\n            </Button>\n          </DoubleConfirm>\n        )}\n      </Space>\n      <Card>\n        <PaymentHeader\n          loading={fetchingPayment}\n          editorId={payment?.payee.id}\n          editorName={payment?.payee.name}\n          periodStart={moment(payment?.accountingPeriod.startsOn).format(\n            'DD/MM/YYYY'\n          )}\n          periodEnd={moment(payment?.accountingPeriod.endsOn).format(\n            'DD/MM/YYYY'\n          )}\n          postsEarnings={payment?.earnings.totalAmount}\n          totalEarnings={payment?.grandTotalAmount}\n        />\n        <Divider />\n        <PaymentBonuses loading={fetchingPayment} bonuses={payment?.bonuses} />\n        <Divider />\n        <PaymentPosts loading={fetchingPosts} posts={posts} />\n      </Card>\n    </>\n  );\n}\n","import { Card, Spin } from 'antd';\r\n\r\nexport default function GlobalLoading() {\r\n  return (\r\n    <Card\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100vh',\r\n        zIndex: 100,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Spin />\r\n    </Card>\r\n  );\r\n}","import { Route, Switch, useHistory, useLocation } from 'react-router-dom';\n\nimport HomeView from './views/Home.view';\nimport UserCreateView from './views/UserCreate.view';\nimport UserEditView from './views/UserEdit.view';\nimport UserListView from './views/UserList.view';\nimport PaymentListView from './views/PaymentList.view';\nimport PaymentCreateView from './views/PaymentCreate.view';\nimport CashFlowRevenuesView from './views/CashFlowRevenues.view';\nimport CashFlowExpensesView from './views/CashFlowExpenses.view';\nimport { useEffect } from 'react';\nimport CustomError from 'danielbonifacio-sdk/dist/CustomError';\nimport { message, notification } from 'antd';\nimport UserDetailsView from './views/UserDetails.view';\nimport PaymentDetailsView from './views/PaymentDetails.view';\nimport AuthService from '../auth/Authorization.service';\nimport jwtDecode from 'jwt-decode';\nimport useAuth from '../core/hooks/useAuth';\nimport { useMemo } from 'react';\nimport GlobalLoading from './components/GlobalLoading';\nimport { Authentication } from '../auth/Auth';\n\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\n\nexport default function Routes() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { fetchUser, user } = useAuth();\n\n  useEffect(() => {\n    window.onunhandledrejection = ({ reason }) => {\n      if (reason instanceof CustomError) {\n        if (reason.data?.objects) {\n          reason.data.objects.forEach((error) => {\n            message.error(error.userMessage);\n          });\n        } else {\n          notification.error({\n            message: reason.message,\n            description:\n              reason.data?.detail === 'Network Error'\n                ? 'Erro na rede'\n                : reason.data?.detail,\n          });\n        }\n      } else {\n        reason?.data?.objects?.forEach((object: { userMessage: string }) => {\n          message.error(object.userMessage);\n        });\n\n        notification.error({\n          message: reason?.message || 'Houve um erro',\n        });\n      }\n    };\n\n    return () => {\n      window.onunhandledrejection = null;\n    };\n  }, []);\n\n  useEffect(() => {\n    async function identify() {\n      const isInAuthorizationRoute = window.location.pathname === '/authorize';\n      const code = new URLSearchParams(window.location.search).get('code');\n\n      const codeVerifier = AuthService.getCodeVerifier();\n      const accessToken = AuthService.getAccessToken();\n\n      if (!accessToken && !isInAuthorizationRoute) {\n        AuthService.imperativelySendToLoginScreen();\n      }\n\n      if (isInAuthorizationRoute) {\n        if (!code) {\n          notification.error({\n            message: 'Código não foi informado',\n          });\n          AuthService.imperativelySendToLoginScreen();\n          return;\n        }\n\n        if (!codeVerifier) {\n          AuthService.imperativelySendToLogout();\n          return;\n        }\n\n        // busca o primeiro token de acesso\n        const { access_token, refresh_token } =\n          await AuthService.getFirstAccessTokens({\n            code,\n            codeVerifier,\n            redirectUri: `${APP_BASE_URL}/authorize`,\n          });\n\n        AuthService.setAccessToken(access_token);\n        AuthService.setRefreshToken(refresh_token);\n\n        const decodedToken: Authentication.AccessTokenDecodedBody =\n          jwtDecode(access_token);\n        fetchUser(decodedToken['alganews:user_id']);\n        history.push('/');\n      }\n\n      if (accessToken) {\n        const decodedToken: Authentication.AccessTokenDecodedBody =\n          jwtDecode(accessToken);\n        fetchUser(decodedToken['alganews:user_id']);\n      }\n    }\n\n    identify();\n  }, [history, fetchUser]);\n\n  const isAuthorizationRoute = useMemo(\n    () => location.pathname === '/authorize',\n    [location.pathname]\n  );\n\n  if (isAuthorizationRoute || !user) return <GlobalLoading />;\n\n  return (\n    <Switch>\n      <Route path={'/'} exact component={HomeView} />\n      <Route path={'/usuarios/cadastro'} exact component={UserCreateView} />\n      <Route path={'/usuarios/edicao/:id'} exact component={UserEditView} />\n      <Route path={'/usuarios/:id'} exact component={UserDetailsView} />\n      <Route path={'/usuarios'} exact component={UserListView} />\n      <Route path={'/pagamentos'} exact component={PaymentListView} />\n      <Route\n        path={'/pagamentos/cadastro'}\n        exact\n        component={PaymentCreateView}\n      />\n      <Route path={'/pagamentos/:id'} exact component={PaymentDetailsView} />\n      <Route\n        path={'/fluxo-de-caixa/despesas'}\n        exact\n        component={CashFlowExpensesView}\n      />\n      <Route\n        path={'/fluxo-de-caixa/receitas'}\n        exact\n        component={CashFlowRevenuesView}\n      />\n    </Switch>\n  );\n}","import axios from 'axios';\nimport Service from 'danielbonifacio-sdk/dist/Service';\nimport AuthService from './Authorization.service';\n\nconst { REACT_APP_API_BASE_URL } = process.env;\n\nif (REACT_APP_API_BASE_URL) {\n  Service.setBaseUrl(REACT_APP_API_BASE_URL);\n}\nService.setRequestInterceptors(async (request) => {\n  const accessToken = AuthService.getAccessToken();\n\n  // injeta o token de acesso na requisição\n  if (accessToken) {\n    request.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n\n  return request;\n});\n\nService.setResponseInterceptors(\n  (response) => response,\n  async (error) => {\n    // recupera informações da requisição\n    const originalRequest = error.config;\n\n    // caso o erro seja de autenticação e ainda não foi feito o retry\n    if (error?.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      // recupera o code verifier e o refresh token\n      const storage = {\n        codeVerifier: AuthService.getCodeVerifier(),\n        refreshToken: AuthService.getRefreshToken(),\n      };\n\n      const { codeVerifier, refreshToken } = storage;\n\n      // caso algum não exista, não é possível renovar o token\n      if (!refreshToken || !codeVerifier) {\n        AuthService.imperativelySendToLogout();\n        return;\n      }\n\n      // renova o token\n      const tokens = await AuthService.getNewToken({\n        codeVerifier,\n        refreshToken,\n      });\n\n      // armazena os tokens para novas requisições\n      AuthService.setAccessToken(tokens.access_token);\n      AuthService.setRefreshToken(tokens.refresh_token);\n\n      // implementa o token na requisição\n      originalRequest.headers[\n        'Authorization'\n      ] = `Bearer ${tokens.access_token}`;\n\n      // retorna uma nova chamada do axios com essa requisição\n      return axios(originalRequest);\n    }\n\n    throw error;\n  }\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigProvider } from 'antd';\nimport ptBR from 'antd/lib/locale/pt_BR';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\n\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './core/store';\nimport DefaultLayout from './app/layouts/Default';\nimport Routes from './app/routes';\nimport './auth/httpConfig';\n\nimport './index.less';\n\nmoment.locale('pt-br');\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={ptBR}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <DefaultLayout>\n            <Routes />\n          </DefaultLayout>\n        </BrowserRouter>\n      </Provider>\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}